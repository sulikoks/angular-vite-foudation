import{Observable,merge as merge$1,Subject,Subscription}from"rxjs";import{share}from"rxjs/operators";function getClosureSafeProperty(objWithPropertyToExtract){for(let key in objWithPropertyToExtract)if(objWithPropertyToExtract[key]===getClosureSafeProperty)return key;throw Error("Could not find renamed property on target object.")}function fillProperties(target,source){for(const key in source)source.hasOwnProperty(key)&&!target.hasOwnProperty(key)&&(target[key]=source[key])}function stringify(token){if("string"==typeof token)return token;if(Array.isArray(token))return"["+token.map(stringify).join(", ")+"]";if(null==token)return""+token;if(token.overriddenName)return`${token.overriddenName}`;if(token.name)return`${token.name}`;const res=token.toString();if(null==res)return""+res;const newLineIndex=res.indexOf("\n");return-1===newLineIndex?res:res.substring(0,newLineIndex)}function concatStringsWithSpace(before,after){return null==before||""===before?null===after?"":after:null==after||""===after?before:before+" "+after}const __forward_ref__=getClosureSafeProperty({__forward_ref__:getClosureSafeProperty});function forwardRef(forwardRefFn){return forwardRefFn.__forward_ref__=forwardRef,forwardRefFn.toString=function(){return stringify(this())},forwardRefFn}function resolveForwardRef(type){return isForwardRef(type)?type():type}function isForwardRef(fn){return"function"==typeof fn&&fn.hasOwnProperty(__forward_ref__)&&fn.__forward_ref__===forwardRef}class RuntimeError extends Error{constructor(code,message){super(formatRuntimeError(code,message)),this.code=code}}function formatRuntimeError(code,message){const fullCode=`NG0${Math.abs(code)}`;let errorMessage=`${fullCode}${message?": "+message.trim():""}`;if(ngDevMode&&code<0){const addPeriodSeparator=!errorMessage.match(/[.,;!?]$/);errorMessage=`${errorMessage}${addPeriodSeparator?".":""} Find more at https://angular.io/errors/${fullCode}`}return errorMessage}function renderStringify(value){return"string"==typeof value?value:null==value?"":String(value)}function stringifyForError(value){return"function"==typeof value?value.name||value.toString():"object"==typeof value&&null!=value&&"function"==typeof value.type?value.type.name||value.type.toString():renderStringify(value)}function throwCyclicDependencyError(token,path){const depPath=path?`. Dependency path: ${path.join(" > ")} > ${token}`:"";throw new RuntimeError(-200,`Circular dependency in DI detected for ${token}${depPath}`)}function throwMixedMultiProviderError(){throw new Error("Cannot mix multi providers and regular providers")}function throwInvalidProviderError(ngModuleType,providers,provider){if(ngModuleType&&providers){const providerDetail=providers.map(v=>v==provider?"?"+provider+"?":"...");throw new Error(`Invalid provider for the NgModule '${stringify(ngModuleType)}' - only instances of Provider and Type are allowed, got: [${providerDetail.join(", ")}]`)}throw provider.ɵproviders?new RuntimeError(207,"Invalid providers from 'importProvidersFrom' present in a non-environment injector. 'importProvidersFrom' can't be used for component providers."):new Error("Invalid provider")}function throwProviderNotFoundError(token,injectorName){const injectorDetails=injectorName?` in ${injectorName}`:"";throw new RuntimeError(-201,ngDevMode&&`No provider for ${stringifyForError(token)} found${injectorDetails}`)}function assertNumber(actual,msg){"number"!=typeof actual&&throwError(msg,typeof actual,"number","===")}function assertNumberInRange(actual,minInclusive,maxInclusive){assertNumber(actual,"Expected a number"),assertLessThanOrEqual(actual,maxInclusive,"Expected number to be less than or equal to"),assertGreaterThanOrEqual(actual,minInclusive,"Expected number to be greater than or equal to")}function assertString(actual,msg){"string"!=typeof actual&&throwError(msg,null===actual?"null":typeof actual,"string","===")}function assertFunction(actual,msg){"function"!=typeof actual&&throwError(msg,null===actual?"null":typeof actual,"function","===")}function assertEqual(actual,expected,msg){actual!=expected&&throwError(msg,actual,expected,"==")}function assertNotEqual(actual,expected,msg){actual==expected&&throwError(msg,actual,expected,"!=")}function assertSame(actual,expected,msg){actual!==expected&&throwError(msg,actual,expected,"===")}function assertNotSame(actual,expected,msg){actual===expected&&throwError(msg,actual,expected,"!==")}function assertLessThan(actual,expected,msg){actual<expected||throwError(msg,actual,expected,"<")}function assertLessThanOrEqual(actual,expected,msg){actual<=expected||throwError(msg,actual,expected,"<=")}function assertGreaterThan(actual,expected,msg){actual>expected||throwError(msg,actual,expected,">")}function assertGreaterThanOrEqual(actual,expected,msg){actual>=expected||throwError(msg,actual,expected,">=")}function assertDefined(actual,msg){null==actual&&throwError(msg,actual,null,"!=")}function throwError(msg,actual,expected,comparison){throw new Error(`ASSERTION ERROR: ${msg}`+(null==comparison?"":` [Expected=> ${expected} ${comparison} ${actual} <=Actual]`))}function assertDomNode(node){"undefined"!=typeof Node&&node instanceof Node||"object"==typeof node&&null!=node&&"WebWorkerRenderNode"===node.constructor.name||throwError(`The provided value must be an instance of a DOM Node but got ${stringify(node)}`)}function assertIndexInRange(arr,index){assertDefined(arr,"Array must be defined.");const maxLen=arr.length;(index<0||index>=maxLen)&&throwError(`Index expected to be less than ${maxLen} but got ${index}`)}function assertOneOf(value,...validValues){if(-1!==validValues.indexOf(value))return!0;throwError(`Expected value to be one of ${JSON.stringify(validValues)} but was ${JSON.stringify(value)}.`)}function ɵɵdefineInjectable(opts){return{token:opts.token,providedIn:opts.providedIn||null,factory:opts.factory,value:void 0}}const defineInjectable=ɵɵdefineInjectable;function ɵɵdefineInjector(options){return{providers:options.providers||[],imports:options.imports||[]}}function getInjectableDef(type){return getOwnDefinition(type,NG_PROV_DEF)||getOwnDefinition(type,NG_INJECTABLE_DEF)}function isInjectable(type){return null!==getInjectableDef(type)}function getOwnDefinition(type,field){return type.hasOwnProperty(field)?type[field]:null}function getInjectorDef(type){return type&&(type.hasOwnProperty(NG_INJ_DEF)||type.hasOwnProperty(NG_INJECTOR_DEF))?type[NG_INJ_DEF]:null}const NG_PROV_DEF=getClosureSafeProperty({"\u0275prov":getClosureSafeProperty}),NG_INJ_DEF=getClosureSafeProperty({"\u0275inj":getClosureSafeProperty}),NG_INJECTABLE_DEF=getClosureSafeProperty({ngInjectableDef:getClosureSafeProperty}),NG_INJECTOR_DEF=getClosureSafeProperty({ngInjectorDef:getClosureSafeProperty});var InjectFlags;let _injectImplementation;function setInjectImplementation(impl){const previous=_injectImplementation;return _injectImplementation=impl,previous}function injectRootLimpMode(token,notFoundValue,flags){const injectableDef=getInjectableDef(token);return injectableDef&&"root"==injectableDef.providedIn?void 0===injectableDef.value?injectableDef.value=injectableDef.factory():injectableDef.value:flags&InjectFlags.Optional?null:void 0!==notFoundValue?notFoundValue:void throwProviderNotFoundError(stringify(token),"Injector")}function noSideEffects(fn){return{toString:fn}.toString()}var ChangeDetectionStrategy,ChangeDetectorStatus,ViewEncapsulation$1;function isDefaultChangeDetectionStrategy(changeDetectionStrategy){return null==changeDetectionStrategy||changeDetectionStrategy===ChangeDetectionStrategy.Default}!function(InjectFlags){InjectFlags[InjectFlags.Default=0]="Default",InjectFlags[InjectFlags.Host=1]="Host",InjectFlags[InjectFlags.Self=2]="Self",InjectFlags[InjectFlags.SkipSelf=4]="SkipSelf",InjectFlags[InjectFlags.Optional=8]="Optional"}(InjectFlags||(InjectFlags={})),function(ChangeDetectionStrategy){ChangeDetectionStrategy[ChangeDetectionStrategy.OnPush=0]="OnPush",ChangeDetectionStrategy[ChangeDetectionStrategy.Default=1]="Default"}(ChangeDetectionStrategy||(ChangeDetectionStrategy={})),function(ChangeDetectorStatus){ChangeDetectorStatus[ChangeDetectorStatus.CheckOnce=0]="CheckOnce",ChangeDetectorStatus[ChangeDetectorStatus.Checked=1]="Checked",ChangeDetectorStatus[ChangeDetectorStatus.CheckAlways=2]="CheckAlways",ChangeDetectorStatus[ChangeDetectorStatus.Detached=3]="Detached",ChangeDetectorStatus[ChangeDetectorStatus.Errored=4]="Errored",ChangeDetectorStatus[ChangeDetectorStatus.Destroyed=5]="Destroyed"}(ChangeDetectorStatus||(ChangeDetectorStatus={})),function(ViewEncapsulation){ViewEncapsulation[ViewEncapsulation.Emulated=0]="Emulated",ViewEncapsulation[ViewEncapsulation.None=2]="None",ViewEncapsulation[ViewEncapsulation.ShadowDom=3]="ShadowDom"}(ViewEncapsulation$1||(ViewEncapsulation$1={}));const _global=(()=>"undefined"!=typeof globalThis&&globalThis||"undefined"!=typeof global&&global||"undefined"!=typeof window&&window||"undefined"!=typeof self&&"undefined"!=typeof WorkerGlobalScope&&self instanceof WorkerGlobalScope&&self)();function initNgDevMode(){return!("undefined"!=typeof ngDevMode&&!ngDevMode)&&("object"!=typeof ngDevMode&&function(){const locationString="undefined"!=typeof location?location.toString():"",newCounters={namedConstructors:-1!=locationString.indexOf("ngDevMode=namedConstructors"),firstCreatePass:0,tNode:0,tView:0,rendererCreateTextNode:0,rendererSetText:0,rendererCreateElement:0,rendererAddEventListener:0,rendererSetAttribute:0,rendererRemoveAttribute:0,rendererSetProperty:0,rendererSetClassName:0,rendererAddClass:0,rendererRemoveClass:0,rendererSetStyle:0,rendererRemoveStyle:0,rendererDestroy:0,rendererDestroyNode:0,rendererMoveNode:0,rendererRemoveNode:0,rendererAppendChild:0,rendererInsertBefore:0,rendererCreateComment:0},allowNgDevModeTrue=-1===locationString.indexOf("ngDevMode=false");_global.ngDevMode=allowNgDevModeTrue&&newCounters}(),"undefined"!=typeof ngDevMode&&!!ngDevMode)}const EMPTY_OBJ={},EMPTY_ARRAY=[];("undefined"==typeof ngDevMode||ngDevMode)&&initNgDevMode()&&(Object.freeze(EMPTY_OBJ),Object.freeze(EMPTY_ARRAY));const NG_COMP_DEF=getClosureSafeProperty({"\u0275cmp":getClosureSafeProperty}),NG_DIR_DEF=getClosureSafeProperty({"\u0275dir":getClosureSafeProperty}),NG_PIPE_DEF=getClosureSafeProperty({"\u0275pipe":getClosureSafeProperty}),NG_MOD_DEF=getClosureSafeProperty({"\u0275mod":getClosureSafeProperty}),NG_FACTORY_DEF=getClosureSafeProperty({"\u0275fac":getClosureSafeProperty}),NG_ELEMENT_ID=getClosureSafeProperty({__NG_ELEMENT_ID__:getClosureSafeProperty});let componentDefCount=0;function ɵɵdefineComponent(componentDefinition){return noSideEffects(()=>{("undefined"==typeof ngDevMode||ngDevMode)&&initNgDevMode();const type=componentDefinition.type,standalone=!0===componentDefinition.standalone,declaredInputs={},def={type:type,providersResolver:null,decls:componentDefinition.decls,vars:componentDefinition.vars,factory:null,template:componentDefinition.template||null,consts:componentDefinition.consts||null,ngContentSelectors:componentDefinition.ngContentSelectors,hostBindings:componentDefinition.hostBindings||null,hostVars:componentDefinition.hostVars||0,hostAttrs:componentDefinition.hostAttrs||null,contentQueries:componentDefinition.contentQueries||null,declaredInputs:declaredInputs,inputs:null,outputs:null,exportAs:componentDefinition.exportAs||null,onPush:componentDefinition.changeDetection===ChangeDetectionStrategy.OnPush,directiveDefs:null,pipeDefs:null,standalone:standalone,dependencies:standalone&&componentDefinition.dependencies||null,getStandaloneInjector:null,selectors:componentDefinition.selectors||EMPTY_ARRAY,viewQuery:componentDefinition.viewQuery||null,features:componentDefinition.features||null,data:componentDefinition.data||{},encapsulation:componentDefinition.encapsulation||ViewEncapsulation$1.Emulated,id:"c"+componentDefCount++,styles:componentDefinition.styles||EMPTY_ARRAY,_:null,setInput:null,schemas:componentDefinition.schemas||null,tView:null},dependencies=componentDefinition.dependencies,feature=componentDefinition.features;return def.inputs=invertObject(componentDefinition.inputs,declaredInputs),def.outputs=invertObject(componentDefinition.outputs),feature&&feature.forEach(fn=>fn(def)),def.directiveDefs=dependencies?()=>("function"==typeof dependencies?dependencies():dependencies).map(extractDirectiveDef).filter(nonNull):null,def.pipeDefs=dependencies?()=>("function"==typeof dependencies?dependencies():dependencies).map(getPipeDef$1).filter(nonNull):null,def})}function ɵɵsetComponentScope(type,directives,pipes){const def=type.ɵcmp;def.directiveDefs=()=>("function"==typeof directives?directives():directives).map(extractDirectiveDef),def.pipeDefs=()=>("function"==typeof pipes?pipes():pipes).map(getPipeDef$1)}function extractDirectiveDef(type){return getComponentDef(type)||getDirectiveDef(type)}function nonNull(value){return null!==value}function ɵɵdefineNgModule(def){return noSideEffects(()=>({type:def.type,bootstrap:def.bootstrap||EMPTY_ARRAY,declarations:def.declarations||EMPTY_ARRAY,imports:def.imports||EMPTY_ARRAY,exports:def.exports||EMPTY_ARRAY,transitiveCompileScopes:null,schemas:def.schemas||null,id:def.id||null}))}function ɵɵsetNgModuleScope(type,scope){return noSideEffects(()=>{const ngModuleDef=getNgModuleDef(type,!0);ngModuleDef.declarations=scope.declarations||EMPTY_ARRAY,ngModuleDef.imports=scope.imports||EMPTY_ARRAY,ngModuleDef.exports=scope.exports||EMPTY_ARRAY})}function invertObject(obj,secondary){if(null==obj)return EMPTY_OBJ;const newLookup={};for(const minifiedKey in obj)if(obj.hasOwnProperty(minifiedKey)){let publicName=obj[minifiedKey],declaredName=publicName;Array.isArray(publicName)&&(declaredName=publicName[1],publicName=publicName[0]),newLookup[publicName]=minifiedKey,secondary&&(secondary[publicName]=declaredName)}return newLookup}const ɵɵdefineDirective=ɵɵdefineComponent;function ɵɵdefinePipe(pipeDef){return{type:pipeDef.type,name:pipeDef.name,factory:null,pure:!1!==pipeDef.pure,standalone:!0===pipeDef.standalone,onDestroy:pipeDef.type.prototype.ngOnDestroy||null}}function getComponentDef(type){return type[NG_COMP_DEF]||null}function getDirectiveDef(type){return type[NG_DIR_DEF]||null}function getPipeDef$1(type){return type[NG_PIPE_DEF]||null}function isStandalone(type){const def=getComponentDef(type)||getDirectiveDef(type)||getPipeDef$1(type);return null!==def&&def.standalone}function getNgModuleDef(type,throwNotFound){const ngModuleDef=type[NG_MOD_DEF]||null;if(!ngModuleDef&&!0===throwNotFound)throw new Error(`Type ${stringify(type)} does not have 'ɵmod' property.`);return ngModuleDef}const TViewTypeAsString=["Root","Component","Embedded"];function isLView(value){return Array.isArray(value)&&"object"==typeof value[1]}function isLContainer(value){return Array.isArray(value)&&!0===value[1]}function isContentQueryHost(tNode){return 0!=(8&tNode.flags)}function isComponentHost(tNode){return 2==(2&tNode.flags)}function isDirectiveHost(tNode){return 1==(1&tNode.flags)}function isComponentDef(def){return null!==def.template}function assertTNodeForLView(tNode,lView){assertTNodeForTView(tNode,lView[1])}function assertTNodeForTView(tNode,tView){assertTNode(tNode),tNode.hasOwnProperty("tView_")&&assertEqual(tNode.tView_,tView,"This TNode does not belong to this TView.")}function assertTNode(tNode){assertDefined(tNode,"TNode must be defined"),tNode&&"object"==typeof tNode&&tNode.hasOwnProperty("directiveStylingLast")||throwError("Not of type TNode, got: "+tNode)}function assertTIcu(tIcu){assertDefined(tIcu,"Expected TIcu to be defined"),"number"!=typeof tIcu.currentCaseLViewIndex&&throwError("Object is not of TIcu type.")}function assertHasParent(tNode){assertDefined(tNode,"currentTNode should exist!"),assertDefined(tNode.parent,"currentTNode should have a parent")}function assertLContainer(value){assertDefined(value,"LContainer must be defined"),assertEqual(isLContainer(value),!0,"Expecting LContainer")}function assertLViewOrUndefined(value){value&&assertEqual(isLView(value),!0,"Expecting LView or undefined or null")}function assertLView(value){assertDefined(value,"LView must be defined"),assertEqual(isLView(value),!0,"Expecting LView")}function assertFirstCreatePass(tView,errMessage){assertEqual(tView.firstCreatePass,!0,errMessage||"Should only be called in first create pass.")}function assertFirstUpdatePass(tView,errMessage){assertEqual(tView.firstUpdatePass,!0,errMessage||"Should only be called in first update pass.")}function assertIndexInExpandoRange(lView,index){assertBetween(lView[1].expandoStartIndex,lView.length,index)}function assertBetween(lower,upper,index){lower<=index&&index<upper||throwError(`Index out of range (expecting ${lower} <= ${index} < ${upper})`)}function assertParentView(lView,errMessage){assertDefined(lView,errMessage||"Component views should always have a parent view (component's host view)")}function assertNodeInjector(lView,injectorIndex){assertIndexInExpandoRange(lView,injectorIndex),assertIndexInExpandoRange(lView,injectorIndex+8),assertNumber(lView[injectorIndex+0],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+1],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+2],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+3],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+4],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+5],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+6],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+7],"injectorIndex should point to a bloom filter"),assertNumber(lView[injectorIndex+8],"injectorIndex should point to parent injector")}function getFactoryDef(type,throwNotFound){const hasFactoryDef=type.hasOwnProperty(NG_FACTORY_DEF);if(!hasFactoryDef&&!0===throwNotFound&&ngDevMode)throw new Error(`Type ${stringify(type)} does not have 'ɵfac' property.`);return hasFactoryDef?type[NG_FACTORY_DEF]:null}class SimpleChange{constructor(previousValue,currentValue,firstChange){this.previousValue=previousValue,this.currentValue=currentValue,this.firstChange=firstChange}isFirstChange(){return this.firstChange}}function ɵɵNgOnChangesFeature(){return NgOnChangesFeatureImpl}function NgOnChangesFeatureImpl(definition){return definition.type.prototype.ngOnChanges&&(definition.setInput=ngOnChangesSetInput),rememberChangeHistoryAndInvokeOnChangesHook}function rememberChangeHistoryAndInvokeOnChangesHook(){const simpleChangesStore=getSimpleChangesStore(this),current=simpleChangesStore?.current;if(current){const previous=simpleChangesStore.previous;if(previous===EMPTY_OBJ)simpleChangesStore.previous=current;else for(let key in current)previous[key]=current[key];simpleChangesStore.current=null,this.ngOnChanges(current)}}function ngOnChangesSetInput(instance,value,publicName,privateName){const simpleChangesStore=getSimpleChangesStore(instance)||function(instance,store){return instance.__ngSimpleChanges__=store}(instance,{previous:EMPTY_OBJ,current:null}),current=simpleChangesStore.current||(simpleChangesStore.current={}),previous=simpleChangesStore.previous,declaredName=this.declaredInputs[publicName],previousChange=previous[declaredName];current[declaredName]=new SimpleChange(previousChange&&previousChange.currentValue,value,previous===EMPTY_OBJ),instance[privateName]=value}ɵɵNgOnChangesFeature.ngInherit=!0;function getSimpleChangesStore(instance){return instance.__ngSimpleChanges__||null}let profilerCallback=null;const setProfiler=profiler=>{profilerCallback=profiler},profiler=function(event,instance,hookOrListener){null!=profilerCallback&&profilerCallback(event,instance,hookOrListener)};function unwrapRNode(value){for(;Array.isArray(value);)value=value[0];return value}function getNativeByIndex(index,lView){return ngDevMode&&assertIndexInRange(lView,index),ngDevMode&&assertGreaterThanOrEqual(index,22,"Expected to be past HEADER_OFFSET"),unwrapRNode(lView[index])}function getNativeByTNode(tNode,lView){ngDevMode&&assertTNodeForLView(tNode,lView),ngDevMode&&assertIndexInRange(lView,tNode.index);return unwrapRNode(lView[tNode.index])}function getTNode(tView,index){ngDevMode&&assertGreaterThan(index,-1,"wrong index for TNode"),ngDevMode&&assertLessThan(index,tView.data.length,"wrong index for TNode");const tNode=tView.data[index];return ngDevMode&&null!==tNode&&assertTNode(tNode),tNode}function load(view,index){return ngDevMode&&assertIndexInRange(view,index),view[index]}function getComponentLViewByIndex(nodeIndex,hostView){ngDevMode&&assertIndexInRange(hostView,nodeIndex);const slotValue=hostView[nodeIndex];return isLView(slotValue)?slotValue:slotValue[0]}function isCreationMode(view){return 4==(4&view[2])}function viewAttachedToChangeDetector(view){return 64==(64&view[2])}function getConstant(consts,index){return null==index?null:(ngDevMode&&assertIndexInRange(consts,index),consts[index])}function resetPreOrderHookFlags(lView){lView[18]=0}function updateTransplantedViewCount(lContainer,amount){lContainer[5]+=amount;let viewOrContainer=lContainer,parent=lContainer[3];for(;null!==parent&&(1===amount&&1===viewOrContainer[5]||-1===amount&&0===viewOrContainer[5]);)parent[5]+=amount,viewOrContainer=parent,parent=parent[3]}const instructionState={lFrame:createLFrame(null),bindingsEnabled:!0};let _isInCheckNoChangesMode=!1;function getBindingsEnabled(){return instructionState.bindingsEnabled}function ɵɵenableBindings(){instructionState.bindingsEnabled=!0}function ɵɵdisableBindings(){instructionState.bindingsEnabled=!1}function getLView(){return instructionState.lFrame.lView}function getTView(){return instructionState.lFrame.tView}function ɵɵrestoreView(viewToRestore){return instructionState.lFrame.contextLView=viewToRestore,viewToRestore[8]}function ɵɵresetView(value){return instructionState.lFrame.contextLView=null,value}function getCurrentTNode(){let currentTNode=getCurrentTNodePlaceholderOk();for(;null!==currentTNode&&64===currentTNode.type;)currentTNode=currentTNode.parent;return currentTNode}function getCurrentTNodePlaceholderOk(){return instructionState.lFrame.currentTNode}function getCurrentParentTNode(){const lFrame=instructionState.lFrame,currentTNode=lFrame.currentTNode;return lFrame.isParent?currentTNode:currentTNode.parent}function setCurrentTNode(tNode,isParent){ngDevMode&&tNode&&assertTNodeForTView(tNode,instructionState.lFrame.tView);const lFrame=instructionState.lFrame;lFrame.currentTNode=tNode,lFrame.isParent=isParent}function isCurrentTNodeParent(){return instructionState.lFrame.isParent}function setCurrentTNodeAsNotParent(){instructionState.lFrame.isParent=!1}function isInCheckNoChangesMode(){return!ngDevMode&&throwError("Must never be called in production mode"),_isInCheckNoChangesMode}function setIsInCheckNoChangesMode(mode){!ngDevMode&&throwError("Must never be called in production mode"),_isInCheckNoChangesMode=mode}function getBindingRoot(){const lFrame=instructionState.lFrame;let index=lFrame.bindingRootIndex;return-1===index&&(index=lFrame.bindingRootIndex=lFrame.tView.bindingStartIndex),index}function getBindingIndex(){return instructionState.lFrame.bindingIndex}function setBindingIndex(value){return instructionState.lFrame.bindingIndex=value}function nextBindingIndex(){return instructionState.lFrame.bindingIndex++}function incrementBindingIndex(count){const lFrame=instructionState.lFrame,index=lFrame.bindingIndex;return lFrame.bindingIndex=lFrame.bindingIndex+count,index}function setInI18nBlock(isInI18nBlock){instructionState.lFrame.inI18n=isInI18nBlock}function setBindingRootForHostBindings(bindingRootIndex,currentDirectiveIndex){const lFrame=instructionState.lFrame;lFrame.bindingIndex=lFrame.bindingRootIndex=bindingRootIndex,setCurrentDirectiveIndex(currentDirectiveIndex)}function setCurrentDirectiveIndex(currentDirectiveIndex){instructionState.lFrame.currentDirectiveIndex=currentDirectiveIndex}function getCurrentDirectiveDef(tData){const currentDirectiveIndex=instructionState.lFrame.currentDirectiveIndex;return-1===currentDirectiveIndex?null:tData[currentDirectiveIndex]}function getCurrentQueryIndex(){return instructionState.lFrame.currentQueryIndex}function setCurrentQueryIndex(value){instructionState.lFrame.currentQueryIndex=value}function getDeclarationTNode(lView){const tView=lView[1];return 2===tView.type?(ngDevMode&&assertDefined(tView.declTNode,"Embedded TNodes should have declaration parents."),tView.declTNode):1===tView.type?lView[6]:null}function enterDI(lView,tNode,flags){if(ngDevMode&&assertLViewOrUndefined(lView),flags&InjectFlags.SkipSelf){ngDevMode&&assertTNodeForTView(tNode,lView[1]);let parentTNode=tNode,parentLView=lView;for(;!(ngDevMode&&assertDefined(parentTNode,"Parent TNode should be defined"),parentTNode=parentTNode.parent,null!==parentTNode||flags&InjectFlags.Host||(parentTNode=getDeclarationTNode(parentLView),null===parentTNode)||(ngDevMode&&assertDefined(parentLView,"Parent LView should be defined"),parentLView=parentLView[15],10&parentTNode.type)););if(null===parentTNode)return!1;tNode=parentTNode,lView=parentLView}ngDevMode&&assertTNodeForLView(tNode,lView);const lFrame=instructionState.lFrame=allocLFrame();return lFrame.currentTNode=tNode,lFrame.lView=lView,!0}function enterView(newView){ngDevMode&&assertNotEqual(newView[0],newView[1],"????"),ngDevMode&&assertLViewOrUndefined(newView);const newLFrame=allocLFrame();ngDevMode&&(assertEqual(newLFrame.isParent,!0,"Expected clean LFrame"),assertEqual(newLFrame.lView,null,"Expected clean LFrame"),assertEqual(newLFrame.tView,null,"Expected clean LFrame"),assertEqual(newLFrame.selectedIndex,-1,"Expected clean LFrame"),assertEqual(newLFrame.elementDepthCount,0,"Expected clean LFrame"),assertEqual(newLFrame.currentDirectiveIndex,-1,"Expected clean LFrame"),assertEqual(newLFrame.currentNamespace,null,"Expected clean LFrame"),assertEqual(newLFrame.bindingRootIndex,-1,"Expected clean LFrame"),assertEqual(newLFrame.currentQueryIndex,0,"Expected clean LFrame"));const tView=newView[1];instructionState.lFrame=newLFrame,ngDevMode&&tView.firstChild&&assertTNodeForTView(tView.firstChild,tView),newLFrame.currentTNode=tView.firstChild,newLFrame.lView=newView,newLFrame.tView=tView,newLFrame.contextLView=newView,newLFrame.bindingIndex=tView.bindingStartIndex,newLFrame.inI18n=!1}function allocLFrame(){const currentLFrame=instructionState.lFrame,childLFrame=null===currentLFrame?null:currentLFrame.child;return null===childLFrame?createLFrame(currentLFrame):childLFrame}function createLFrame(parent){const lFrame={currentTNode:null,isParent:!0,lView:null,tView:null,selectedIndex:-1,contextLView:null,elementDepthCount:0,currentNamespace:null,currentDirectiveIndex:-1,bindingRootIndex:-1,bindingIndex:-1,currentQueryIndex:0,parent:parent,child:null,inI18n:!1};return null!==parent&&(parent.child=lFrame),lFrame}function leaveViewLight(){const oldLFrame=instructionState.lFrame;return instructionState.lFrame=oldLFrame.parent,oldLFrame.currentTNode=null,oldLFrame.lView=null,oldLFrame}const leaveDI=leaveViewLight;function leaveView(){const oldLFrame=leaveViewLight();oldLFrame.isParent=!0,oldLFrame.tView=null,oldLFrame.selectedIndex=-1,oldLFrame.contextLView=null,oldLFrame.elementDepthCount=0,oldLFrame.currentDirectiveIndex=-1,oldLFrame.currentNamespace=null,oldLFrame.bindingRootIndex=-1,oldLFrame.bindingIndex=-1,oldLFrame.currentQueryIndex=0}function nextContextImpl(level){return(instructionState.lFrame.contextLView=function(nestingLevel,currentView){for(;nestingLevel>0;)ngDevMode&&assertDefined(currentView[15],"Declaration view should be defined if nesting level is greater than 0."),currentView=currentView[15],nestingLevel--;return currentView}(level,instructionState.lFrame.contextLView))[8]}function getSelectedIndex(){return instructionState.lFrame.selectedIndex}function setSelectedIndex(index){ngDevMode&&-1!==index&&assertGreaterThanOrEqual(index,22,"Index must be past HEADER_OFFSET (or -1)."),ngDevMode&&assertLessThan(index,instructionState.lFrame.lView.length,"Can't set index passed end of LView"),instructionState.lFrame.selectedIndex=index}function getSelectedTNode(){const lFrame=instructionState.lFrame;return getTNode(lFrame.tView,lFrame.selectedIndex)}function ɵɵnamespaceSVG(){instructionState.lFrame.currentNamespace="svg"}function ɵɵnamespaceMathML(){instructionState.lFrame.currentNamespace="math"}function ɵɵnamespaceHTML(){instructionState.lFrame.currentNamespace=null}function registerPostOrderHooks(tView,tNode){ngDevMode&&assertFirstCreatePass(tView);for(let i=tNode.directiveStart,end=tNode.directiveEnd;i<end;i++){const directiveDef=tView.data[i];ngDevMode&&assertDefined(directiveDef,"Expecting DirectiveDef");const lifecycleHooks=directiveDef.type.prototype,{ngAfterContentInit:ngAfterContentInit,ngAfterContentChecked:ngAfterContentChecked,ngAfterViewInit:ngAfterViewInit,ngAfterViewChecked:ngAfterViewChecked,ngOnDestroy:ngOnDestroy}=lifecycleHooks;ngAfterContentInit&&(tView.contentHooks||(tView.contentHooks=[])).push(-i,ngAfterContentInit),ngAfterContentChecked&&((tView.contentHooks||(tView.contentHooks=[])).push(i,ngAfterContentChecked),(tView.contentCheckHooks||(tView.contentCheckHooks=[])).push(i,ngAfterContentChecked)),ngAfterViewInit&&(tView.viewHooks||(tView.viewHooks=[])).push(-i,ngAfterViewInit),ngAfterViewChecked&&((tView.viewHooks||(tView.viewHooks=[])).push(i,ngAfterViewChecked),(tView.viewCheckHooks||(tView.viewCheckHooks=[])).push(i,ngAfterViewChecked)),null!=ngOnDestroy&&(tView.destroyHooks||(tView.destroyHooks=[])).push(i,ngOnDestroy)}}function executeCheckHooks(lView,hooks,nodeIndex){callHooks(lView,hooks,3,nodeIndex)}function executeInitAndCheckHooks(lView,hooks,initPhase,nodeIndex){ngDevMode&&assertNotEqual(initPhase,3,"Init pre-order hooks should not be called more than once"),(3&lView[2])===initPhase&&callHooks(lView,hooks,initPhase,nodeIndex)}function incrementInitPhaseFlags(lView,initPhase){ngDevMode&&assertNotEqual(initPhase,3,"Init hooks phase should not be incremented after all init hooks have been run.");let flags=lView[2];(3&flags)===initPhase&&(flags&=2047,flags+=1,lView[2]=flags)}function callHooks(currentView,arr,initPhase,currentNodeIndex){ngDevMode&&assertEqual(isInCheckNoChangesMode(),!1,"Hooks should never be run when in check no changes mode.");const startIndex=void 0!==currentNodeIndex?65535&currentView[18]:0,nodeIndexLimit=null!=currentNodeIndex?currentNodeIndex:-1,max=arr.length-1;let lastNodeIndexFound=0;for(let i=startIndex;i<max;i++){if("number"==typeof arr[i+1]){if(lastNodeIndexFound=arr[i],null!=currentNodeIndex&&lastNodeIndexFound>=currentNodeIndex)break}else{arr[i]<0&&(currentView[18]+=65536),(lastNodeIndexFound<nodeIndexLimit||-1==nodeIndexLimit)&&(callHook(currentView,initPhase,arr,i),currentView[18]=(4294901760&currentView[18])+i+2),i++}}}function callHook(currentView,initPhase,arr,i){const isInitHook=arr[i]<0,hook=arr[i+1],directive=currentView[isInitHook?-arr[i]:arr[i]];if(isInitHook){if(currentView[2]>>11<currentView[18]>>16&&(3&currentView[2])===initPhase){currentView[2]+=2048,profiler(4,directive,hook);try{hook.call(directive)}finally{profiler(5,directive,hook)}}}else{profiler(4,directive,hook);try{hook.call(directive)}finally{profiler(5,directive,hook)}}}class NodeInjectorFactory{constructor(factory,isViewProvider,injectImplementation){this.factory=factory,this.resolving=!1,ngDevMode&&assertDefined(factory,"Factory not specified"),ngDevMode&&assertEqual(typeof factory,"function","Expected factory function."),this.canSeeViewProviders=isViewProvider,this.injectImpl=injectImplementation}}function toTNodeTypeAsString(tNodeType){let text="";return 1&tNodeType&&(text+="|Text"),2&tNodeType&&(text+="|Element"),4&tNodeType&&(text+="|Container"),8&tNodeType&&(text+="|ElementContainer"),16&tNodeType&&(text+="|Projection"),32&tNodeType&&(text+="|IcuContainer"),64&tNodeType&&(text+="|Placeholder"),text.length>0?text.substring(1):text}function assertTNodeType(tNode,expectedTypes,message){assertDefined(tNode,"should be called with a TNode"),0==(tNode.type&expectedTypes)&&throwError(message||`Expected [${toTNodeTypeAsString(expectedTypes)}] but got ${toTNodeTypeAsString(tNode.type)}.`)}function setUpAttributes(renderer,native,attrs){let i=0;for(;i<attrs.length;){const value=attrs[i];if("number"==typeof value){if(0!==value)break;i++;const namespaceURI=attrs[i++],attrName=attrs[i++],attrVal=attrs[i++];ngDevMode&&ngDevMode.rendererSetAttribute++,renderer.setAttribute(native,attrName,attrVal,namespaceURI)}else{const attrName=value,attrVal=attrs[++i];ngDevMode&&ngDevMode.rendererSetAttribute++,isAnimationProp(attrName)?renderer.setProperty(native,attrName,attrVal):renderer.setAttribute(native,attrName,attrVal),i++}}return i}function isNameOnlyAttributeMarker(marker){return 3===marker||4===marker||6===marker}function isAnimationProp(name){return 64===name.charCodeAt(0)}function mergeHostAttrs(dst,src){if(null===src||0===src.length);else if(null===dst||0===dst.length)dst=src.slice();else{let srcMarker=-1;for(let i=0;i<src.length;i++){const item=src[i];"number"==typeof item?srcMarker=item:0===srcMarker||mergeHostAttribute(dst,srcMarker,item,null,-1===srcMarker||2===srcMarker?src[++i]:null)}}return dst}function mergeHostAttribute(dst,marker,key1,key2,value){let i=0,markerInsertPosition=dst.length;if(-1===marker)markerInsertPosition=-1;else for(;i<dst.length;){const dstValue=dst[i++];if("number"==typeof dstValue){if(dstValue===marker){markerInsertPosition=-1;break}if(dstValue>marker){markerInsertPosition=i-1;break}}}for(;i<dst.length;){const item=dst[i];if("number"==typeof item)break;if(item===key1){if(null===key2)return void(null!==value&&(dst[i+1]=value));if(key2===dst[i+1])return void(dst[i+2]=value)}i++,null!==key2&&i++,null!==value&&i++}-1!==markerInsertPosition&&(dst.splice(markerInsertPosition,0,marker),i=markerInsertPosition+1),dst.splice(i++,0,key1),null!==key2&&dst.splice(i++,0,key2),null!==value&&dst.splice(i++,0,value)}function hasParentInjector(parentLocation){return-1!==parentLocation}function getParentInjectorIndex(parentLocation){ngDevMode&&assertNumber(parentLocation,"Number expected"),ngDevMode&&assertNotEqual(parentLocation,-1,"Not a valid state.");return ngDevMode&&assertGreaterThan(32767&parentLocation,22,"Parent injector must be pointing past HEADER_OFFSET."),32767&parentLocation}function getParentInjectorView(location,startView){let viewOffset=location>>16;let parentView=startView;for(;viewOffset>0;)parentView=parentView[15],viewOffset--;return parentView}let includeViewProviders=!0;function setIncludeViewProviders(v){const oldValue=includeViewProviders;return includeViewProviders=v,oldValue}let nextNgElementId=0;const NOT_FOUND={};function getOrCreateNodeInjectorForNode(tNode,lView){const existingInjectorIndex=getInjectorIndex(tNode,lView);if(-1!==existingInjectorIndex)return existingInjectorIndex;const tView=lView[1];tView.firstCreatePass&&(tNode.injectorIndex=lView.length,insertBloom(tView.data,tNode),insertBloom(lView,null),insertBloom(tView.blueprint,null));const parentLoc=getParentInjectorLocation(tNode,lView),injectorIndex=tNode.injectorIndex;if(hasParentInjector(parentLoc)){const parentIndex=getParentInjectorIndex(parentLoc),parentLView=getParentInjectorView(parentLoc,lView),parentData=parentLView[1].data;for(let i=0;i<8;i++)lView[injectorIndex+i]=parentLView[parentIndex+i]|parentData[parentIndex+i]}return lView[injectorIndex+8]=parentLoc,injectorIndex}function insertBloom(arr,footer){arr.push(0,0,0,0,0,0,0,0,footer)}function getInjectorIndex(tNode,lView){return-1===tNode.injectorIndex||tNode.parent&&tNode.parent.injectorIndex===tNode.injectorIndex||null===lView[tNode.injectorIndex+8]?-1:(ngDevMode&&assertIndexInRange(lView,tNode.injectorIndex),tNode.injectorIndex)}function getParentInjectorLocation(tNode,lView){if(tNode.parent&&-1!==tNode.parent.injectorIndex)return tNode.parent.injectorIndex;let declarationViewOffset=0,parentTNode=null,lViewCursor=lView;for(;null!==lViewCursor;){if(parentTNode=getTNodeFromLView(lViewCursor),null===parentTNode)return-1;if(ngDevMode&&parentTNode&&assertTNodeForLView(parentTNode,lViewCursor[15]),declarationViewOffset++,lViewCursor=lViewCursor[15],-1!==parentTNode.injectorIndex)return parentTNode.injectorIndex|declarationViewOffset<<16}return-1}function diPublicInInjector(injectorIndex,tView,token){!function(injectorIndex,tView,type){let id;ngDevMode&&assertEqual(tView.firstCreatePass,!0,"expected firstCreatePass to be true"),"string"==typeof type?id=type.charCodeAt(0)||0:type.hasOwnProperty(NG_ELEMENT_ID)&&(id=type[NG_ELEMENT_ID]),null==id&&(id=type[NG_ELEMENT_ID]=nextNgElementId++);const bloomHash=255&id,mask=1<<bloomHash;tView.data[injectorIndex+(bloomHash>>5)]|=mask}(injectorIndex,tView,token)}function notFoundValueOrThrow(notFoundValue,token,flags){if(flags&InjectFlags.Optional||void 0!==notFoundValue)return notFoundValue;throwProviderNotFoundError(token,"NodeInjector")}function lookupTokenUsingModuleInjector(lView,token,flags,notFoundValue){if(flags&InjectFlags.Optional&&void 0===notFoundValue&&(notFoundValue=null),0==(flags&(InjectFlags.Self|InjectFlags.Host))){const moduleInjector=lView[9],previousInjectImplementation=setInjectImplementation(void 0);try{return moduleInjector?moduleInjector.get(token,notFoundValue,flags&InjectFlags.Optional):injectRootLimpMode(token,notFoundValue,flags&InjectFlags.Optional)}finally{setInjectImplementation(previousInjectImplementation)}}return notFoundValueOrThrow(notFoundValue,token,flags)}function getOrCreateInjectable(tNode,lView,token,flags=InjectFlags.Default,notFoundValue){if(null!==tNode){if(1024&lView[2]){const embeddedInjectorValue=function(tNode,lView,token,flags,notFoundValue){let currentTNode=tNode,currentLView=lView;for(;null!==currentTNode&&null!==currentLView&&1024&currentLView[2]&&!(256&currentLView[2]);){ngDevMode&&assertTNodeForLView(currentTNode,currentLView);const nodeInjectorValue=lookupTokenUsingNodeInjector(currentTNode,currentLView,token,flags|InjectFlags.Self,NOT_FOUND);if(nodeInjectorValue!==NOT_FOUND)return nodeInjectorValue;let parentTNode=currentTNode.parent;if(!parentTNode){const embeddedViewInjector=currentLView[21];if(embeddedViewInjector){const embeddedViewInjectorValue=embeddedViewInjector.get(token,NOT_FOUND,flags);if(embeddedViewInjectorValue!==NOT_FOUND)return embeddedViewInjectorValue}parentTNode=getTNodeFromLView(currentLView),currentLView=currentLView[15]}currentTNode=parentTNode}return notFoundValue}(tNode,lView,token,flags,NOT_FOUND);if(embeddedInjectorValue!==NOT_FOUND)return embeddedInjectorValue}const value=lookupTokenUsingNodeInjector(tNode,lView,token,flags,NOT_FOUND);if(value!==NOT_FOUND)return value}return lookupTokenUsingModuleInjector(lView,token,flags,notFoundValue)}function lookupTokenUsingNodeInjector(tNode,lView,token,flags,notFoundValue){const bloomHash=function(token){if(ngDevMode&&assertDefined(token,"token must be defined"),"string"==typeof token)return token.charCodeAt(0)||0;const tokenId=token.hasOwnProperty(NG_ELEMENT_ID)?token[NG_ELEMENT_ID]:void 0;return"number"==typeof tokenId?tokenId>=0?255&tokenId:(ngDevMode&&assertEqual(tokenId,-1,"Expecting to get Special Injector Id"),createNodeInjector):tokenId}(token);if("function"==typeof bloomHash){if(!enterDI(lView,tNode,flags))return flags&InjectFlags.Host?notFoundValueOrThrow(notFoundValue,token,flags):lookupTokenUsingModuleInjector(lView,token,flags,notFoundValue);try{const value=bloomHash(flags);if(null!=value||flags&InjectFlags.Optional)return value;throwProviderNotFoundError(token)}finally{leaveDI()}}else if("number"==typeof bloomHash){let previousTView=null,injectorIndex=getInjectorIndex(tNode,lView),parentLocation=-1,hostTElementNode=flags&InjectFlags.Host?lView[16][6]:null;for((-1===injectorIndex||flags&InjectFlags.SkipSelf)&&(parentLocation=-1===injectorIndex?getParentInjectorLocation(tNode,lView):lView[injectorIndex+8],-1!==parentLocation&&shouldSearchParent(flags,!1)?(previousTView=lView[1],injectorIndex=getParentInjectorIndex(parentLocation),lView=getParentInjectorView(parentLocation,lView)):injectorIndex=-1);-1!==injectorIndex;){ngDevMode&&assertNodeInjector(lView,injectorIndex);const tView=lView[1];if(ngDevMode&&assertTNodeForLView(tView.data[injectorIndex+8],lView),bloomHasToken(bloomHash,injectorIndex,tView.data)){const instance=searchTokensOnInjector(injectorIndex,lView,token,previousTView,flags,hostTElementNode);if(instance!==NOT_FOUND)return instance}parentLocation=lView[injectorIndex+8],-1!==parentLocation&&shouldSearchParent(flags,lView[1].data[injectorIndex+8]===hostTElementNode)&&bloomHasToken(bloomHash,injectorIndex,lView)?(previousTView=tView,injectorIndex=getParentInjectorIndex(parentLocation),lView=getParentInjectorView(parentLocation,lView)):injectorIndex=-1}}return notFoundValue}function searchTokensOnInjector(injectorIndex,lView,token,previousTView,flags,hostTElementNode){const currentTView=lView[1],tNode=currentTView.data[injectorIndex+8],injectableIdx=locateDirectiveOrProvider(tNode,currentTView,token,null==previousTView?isComponentHost(tNode)&&includeViewProviders:previousTView!=currentTView&&0!=(3&tNode.type),flags&InjectFlags.Host&&hostTElementNode===tNode);return null!==injectableIdx?getNodeInjectable(lView,currentTView,injectableIdx,tNode):NOT_FOUND}function locateDirectiveOrProvider(tNode,tView,token,canAccessViewProviders,isHostSpecialCase){const nodeProviderIndexes=tNode.providerIndexes,tInjectables=tView.data,injectablesStart=1048575&nodeProviderIndexes,directivesStart=tNode.directiveStart,directiveEnd=tNode.directiveEnd,cptViewProvidersCount=nodeProviderIndexes>>20,endIndex=isHostSpecialCase?injectablesStart+cptViewProvidersCount:directiveEnd;for(let i=canAccessViewProviders?injectablesStart:injectablesStart+cptViewProvidersCount;i<endIndex;i++){const providerTokenOrDef=tInjectables[i];if(i<directivesStart&&token===providerTokenOrDef||i>=directivesStart&&providerTokenOrDef.type===token)return i}if(isHostSpecialCase){const dirDef=tInjectables[directivesStart];if(dirDef&&isComponentDef(dirDef)&&dirDef.type===token)return directivesStart}return null}function getNodeInjectable(lView,tView,index,tNode){let value=lView[index];const tData=tView.data;if(value instanceof NodeInjectorFactory){const factory=value;factory.resolving&&throwCyclicDependencyError(stringifyForError(tData[index]));const previousIncludeViewProviders=setIncludeViewProviders(factory.canSeeViewProviders);factory.resolving=!0;const previousInjectImplementation=factory.injectImpl?setInjectImplementation(factory.injectImpl):null,success=enterDI(lView,tNode,InjectFlags.Default);ngDevMode&&assertEqual(success,!0,"Because flags do not contain `SkipSelf' we expect this to always succeed.");try{value=lView[index]=factory.factory(void 0,tData,lView,tNode),tView.firstCreatePass&&index>=tNode.directiveStart&&(ngDevMode&&function(obj){void 0!==obj.type&&null!=obj.selectors&&void 0!==obj.inputs||throwError("Expected a DirectiveDef/ComponentDef and this object does not seem to have the expected shape.")}(tData[index]),function(directiveIndex,directiveDef,tView){ngDevMode&&assertFirstCreatePass(tView);const{ngOnChanges:ngOnChanges,ngOnInit:ngOnInit,ngDoCheck:ngDoCheck}=directiveDef.type.prototype;if(ngOnChanges){const wrappedOnChanges=NgOnChangesFeatureImpl(directiveDef);(tView.preOrderHooks||(tView.preOrderHooks=[])).push(directiveIndex,wrappedOnChanges),(tView.preOrderCheckHooks||(tView.preOrderCheckHooks=[])).push(directiveIndex,wrappedOnChanges)}ngOnInit&&(tView.preOrderHooks||(tView.preOrderHooks=[])).push(0-directiveIndex,ngOnInit),ngDoCheck&&((tView.preOrderHooks||(tView.preOrderHooks=[])).push(directiveIndex,ngDoCheck),(tView.preOrderCheckHooks||(tView.preOrderCheckHooks=[])).push(directiveIndex,ngDoCheck))}(index,tData[index],tView))}finally{null!==previousInjectImplementation&&setInjectImplementation(previousInjectImplementation),setIncludeViewProviders(previousIncludeViewProviders),factory.resolving=!1,leaveDI()}}return value}function bloomHasToken(bloomHash,injectorIndex,injectorView){const mask=1<<bloomHash;return!!(injectorView[injectorIndex+(bloomHash>>5)]&mask)}function shouldSearchParent(flags,isFirstHostTNode){return!(flags&InjectFlags.Self||flags&InjectFlags.Host&&isFirstHostTNode)}class NodeInjector{constructor(_tNode,_lView){this._tNode=_tNode,this._lView=_lView}get(token,notFoundValue,flags){return getOrCreateInjectable(this._tNode,this._lView,token,flags,notFoundValue)}}function createNodeInjector(){return new NodeInjector(getCurrentTNode(),getLView())}function ɵɵgetInheritedFactory(type){return noSideEffects(()=>{const ownConstructor=type.prototype.constructor,ownFactory=ownConstructor[NG_FACTORY_DEF]||getFactoryOf(ownConstructor),objectPrototype=Object.prototype;let parent=Object.getPrototypeOf(type.prototype).constructor;for(;parent&&parent!==objectPrototype;){const factory=parent[NG_FACTORY_DEF]||getFactoryOf(parent);if(factory&&factory!==ownFactory)return factory;parent=Object.getPrototypeOf(parent)}return t=>new t})}function getFactoryOf(type){return isForwardRef(type)?()=>{const factory=getFactoryOf(resolveForwardRef(type));return factory&&factory()}:getFactoryDef(type)}function getTNodeFromLView(lView){const tView=lView[1],tViewType=tView.type;return 2===tViewType?(ngDevMode&&assertDefined(tView.declTNode,"Embedded TNodes should have declaration parents."),tView.declTNode):1===tViewType?lView[6]:null}function ɵɵinjectAttribute(attrNameToInject){return function(tNode,attrNameToInject){if(ngDevMode&&assertTNodeType(tNode,15),ngDevMode&&assertDefined(tNode,"expecting tNode"),"class"===attrNameToInject)return tNode.classes;if("style"===attrNameToInject)return tNode.styles;const attrs=tNode.attrs;if(attrs){const attrsLength=attrs.length;let i=0;for(;i<attrsLength;){const value=attrs[i];if(isNameOnlyAttributeMarker(value))break;if(0===value)i+=2;else if("number"==typeof value)for(i++;i<attrsLength&&"string"==typeof attrs[i];)i++;else{if(value===attrNameToInject)return attrs[i+1];i+=2}}}return null}(getCurrentTNode(),attrNameToInject)}const ANNOTATIONS="__annotations__",PARAMETERS="__parameters__",PROP_METADATA="__prop__metadata__";function makeDecorator(name,props,parentClass,additionalProcessing,typeFn){return noSideEffects(()=>{const metaCtor=makeMetadataCtor(props);function DecoratorFactory(...args){if(this instanceof DecoratorFactory)return metaCtor.call(this,...args),this;const annotationInstance=new DecoratorFactory(...args);return function(cls){typeFn&&typeFn(cls,...args);return(cls.hasOwnProperty(ANNOTATIONS)?cls[ANNOTATIONS]:Object.defineProperty(cls,ANNOTATIONS,{value:[]})[ANNOTATIONS]).push(annotationInstance),additionalProcessing&&additionalProcessing(cls),cls}}return parentClass&&(DecoratorFactory.prototype=Object.create(parentClass.prototype)),DecoratorFactory.prototype.ngMetadataName=name,DecoratorFactory.annotationCls=DecoratorFactory,DecoratorFactory})}function makeMetadataCtor(props){return function(...args){if(props){const values=props(...args);for(const propName in values)this[propName]=values[propName]}}}function makeParamDecorator(name,props,parentClass){return noSideEffects(()=>{const metaCtor=makeMetadataCtor(props);function ParamDecoratorFactory(...args){if(this instanceof ParamDecoratorFactory)return metaCtor.apply(this,args),this;const annotationInstance=new ParamDecoratorFactory(...args);return ParamDecorator.annotation=annotationInstance,ParamDecorator;function ParamDecorator(cls,unusedKey,index){const parameters=cls.hasOwnProperty(PARAMETERS)?cls[PARAMETERS]:Object.defineProperty(cls,PARAMETERS,{value:[]})[PARAMETERS];for(;parameters.length<=index;)parameters.push(null);return(parameters[index]=parameters[index]||[]).push(annotationInstance),cls}}return parentClass&&(ParamDecoratorFactory.prototype=Object.create(parentClass.prototype)),ParamDecoratorFactory.prototype.ngMetadataName=name,ParamDecoratorFactory.annotationCls=ParamDecoratorFactory,ParamDecoratorFactory})}function makePropDecorator(name,props,parentClass,additionalProcessing){return noSideEffects(()=>{const metaCtor=makeMetadataCtor(props);function PropDecoratorFactory(...args){if(this instanceof PropDecoratorFactory)return metaCtor.apply(this,args),this;const decoratorInstance=new PropDecoratorFactory(...args);return function(target,name){const constructor=target.constructor,meta=constructor.hasOwnProperty(PROP_METADATA)?constructor[PROP_METADATA]:Object.defineProperty(constructor,PROP_METADATA,{value:{}})[PROP_METADATA];meta[name]=meta.hasOwnProperty(name)&&meta[name]||[],meta[name].unshift(decoratorInstance),additionalProcessing&&additionalProcessing(target,name,...args)}}return parentClass&&(PropDecoratorFactory.prototype=Object.create(parentClass.prototype)),PropDecoratorFactory.prototype.ngMetadataName=name,PropDecoratorFactory.annotationCls=PropDecoratorFactory,PropDecoratorFactory})}const Attribute=makeParamDecorator("Attribute",attributeName=>({attributeName:attributeName,__NG_ELEMENT_ID__:()=>ɵɵinjectAttribute(attributeName)}));class InjectionToken{constructor(_desc,options){this._desc=_desc,this.ngMetadataName="InjectionToken",this.ɵprov=void 0,"number"==typeof options?(("undefined"==typeof ngDevMode||ngDevMode)&&assertLessThan(options,0,"Only negative numbers are supported here"),this.__NG_ELEMENT_ID__=options):void 0!==options&&(this.ɵprov=ɵɵdefineInjectable({token:this,providedIn:options.providedIn||"root",factory:options.factory}))}get multi(){return this}toString(){return`InjectionToken ${this._desc}`}}const ANALYZE_FOR_ENTRY_COMPONENTS=new InjectionToken("AnalyzeForEntryComponents");class Query{}const ContentChildren=makePropDecorator("ContentChildren",(selector,data={})=>({selector:selector,first:!1,isViewQuery:!1,descendants:!1,emitDistinctChangesOnly:true,...data}),Query),ContentChild=makePropDecorator("ContentChild",(selector,data={})=>({selector:selector,first:!0,isViewQuery:!1,descendants:!0,...data}),Query),ViewChildren=makePropDecorator("ViewChildren",(selector,data={})=>({selector:selector,first:!1,isViewQuery:!0,descendants:!0,emitDistinctChangesOnly:true,...data}),Query),ViewChild=makePropDecorator("ViewChild",(selector,data)=>({selector:selector,first:!0,isViewQuery:!0,descendants:!0,...data}),Query);var FactoryTarget,R3TemplateDependencyKind,ViewEncapsulation;function getCompilerFacade(request){const globalNg=_global.ng;if(globalNg&&globalNg.ɵcompilerFacade)return globalNg.ɵcompilerFacade;if("undefined"==typeof ngDevMode||ngDevMode){console.error(`JIT compilation failed for ${request.kind}`,request.type);let message=`The ${request.kind} '${request.type.name}' needs to be compiled using the JIT compiler, but '@angular/compiler' is not available.\n\n`;throw 1===request.usage?(message+=`The ${request.kind} is part of a library that has been partially compiled.\n`,message+="However, the Angular Linker has not processed the library such that JIT compilation is used as fallback.\n",message+="\n",message+="Ideally, the library is processed using the Angular Linker to become fully AOT compiled.\n"):message+="JIT compilation is discouraged for production use-cases! Consider using AOT mode instead.\n",message+="Alternatively, the JIT compiler should be loaded by bootstrapping using '@angular/platform-browser-dynamic' or '@angular/platform-server',\n",message+="or manually provide the compiler with 'import \"@angular/compiler\";' before bootstrapping.",new Error(message)}throw new Error("JIT compiler unavailable")}!function(FactoryTarget){FactoryTarget[FactoryTarget.Directive=0]="Directive",FactoryTarget[FactoryTarget.Component=1]="Component",FactoryTarget[FactoryTarget.Injectable=2]="Injectable",FactoryTarget[FactoryTarget.Pipe=3]="Pipe",FactoryTarget[FactoryTarget.NgModule=4]="NgModule"}(FactoryTarget||(FactoryTarget={})),function(R3TemplateDependencyKind){R3TemplateDependencyKind[R3TemplateDependencyKind.Directive=0]="Directive",R3TemplateDependencyKind[R3TemplateDependencyKind.Pipe=1]="Pipe",R3TemplateDependencyKind[R3TemplateDependencyKind.NgModule=2]="NgModule"}(R3TemplateDependencyKind||(R3TemplateDependencyKind={})),function(ViewEncapsulation){ViewEncapsulation[ViewEncapsulation.Emulated=0]="Emulated",ViewEncapsulation[ViewEncapsulation.None=2]="None",ViewEncapsulation[ViewEncapsulation.ShadowDom=3]="ShadowDom"}(ViewEncapsulation||(ViewEncapsulation={}));const Type=Function;function isType(v){return"function"==typeof v}function flatten(list,dst){void 0===dst&&(dst=list);for(let i=0;i<list.length;i++){let item=list[i];Array.isArray(item)?(dst===list&&(dst=list.slice(0,i)),flatten(item,dst)):dst!==list&&dst.push(item)}return dst}function deepForEach(input,fn){input.forEach(value=>Array.isArray(value)?deepForEach(value,fn):fn(value))}function addToArray(arr,index,value){index>=arr.length?arr.push(value):arr.splice(index,0,value)}function removeFromArray(arr,index){return index>=arr.length-1?arr.pop():arr.splice(index,1)[0]}function newArray(size,value){const list=[];for(let i=0;i<size;i++)list.push(value);return list}function keyValueArraySet(keyValueArray,key,value){let index=keyValueArrayIndexOf(keyValueArray,key);return index>=0?keyValueArray[1|index]=value:(index=~index,function(array,index,value1,value2){ngDevMode&&assertLessThanOrEqual(index,array.length,"Can't insert past array end.");let end=array.length;if(end==index)array.push(value1,value2);else if(1===end)array.push(value2,array[0]),array[0]=value1;else{for(end--,array.push(array[end-1],array[end]);end>index;){const previousEnd=end-2;array[end]=array[previousEnd],end--}array[index]=value1,array[index+1]=value2}}(keyValueArray,index,key,value)),index}function keyValueArrayGet(keyValueArray,key){const index=keyValueArrayIndexOf(keyValueArray,key);if(index>=0)return keyValueArray[1|index]}function keyValueArrayIndexOf(keyValueArray,key){return function(array,value,shift){ngDevMode&&assertEqual(Array.isArray(array),!0,"Expecting an array");let start=0,end=array.length>>shift;for(;end!==start;){const middle=start+(end-start>>1),current=array[middle<<shift];if(value===current)return middle<<shift;current>value?end=middle:start=middle+1}return~(end<<shift)}(keyValueArray,key,1)}const ES5_DELEGATE_CTOR=/^function\s+\S+\(\)\s*{[\s\S]+\.apply\(this,\s*(arguments|(?:[^()]+\(\[\],)?[^()]+\(arguments\).*)\)/,ES2015_INHERITED_CLASS=/^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{/,ES2015_INHERITED_CLASS_WITH_CTOR=/^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(/,ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR=/^class\s+[A-Za-z\d$_]*\s*extends\s+[^{]+{[\s\S]*constructor\s*\(\)\s*{[^}]*super\(\.\.\.arguments\)/;class ReflectionCapabilities{constructor(reflect){this._reflect=reflect||_global.Reflect}factory(t){return(...args)=>new t(...args)}_zipTypesAndAnnotations(paramTypes,paramAnnotations){let result;result=newArray(void 0===paramTypes?paramAnnotations.length:paramTypes.length);for(let i=0;i<result.length;i++)void 0===paramTypes?result[i]=[]:paramTypes[i]&&paramTypes[i]!=Object?result[i]=[paramTypes[i]]:result[i]=[],paramAnnotations&&null!=paramAnnotations[i]&&(result[i]=result[i].concat(paramAnnotations[i]));return result}_ownParameters(type,parentCtor){if(function(typeStr){return ES5_DELEGATE_CTOR.test(typeStr)||ES2015_INHERITED_CLASS_WITH_DELEGATE_CTOR.test(typeStr)||ES2015_INHERITED_CLASS.test(typeStr)&&!ES2015_INHERITED_CLASS_WITH_CTOR.test(typeStr)}(type.toString()))return null;if(type.parameters&&type.parameters!==parentCtor.parameters)return type.parameters;const tsickleCtorParams=type.ctorParameters;if(tsickleCtorParams&&tsickleCtorParams!==parentCtor.ctorParameters){const ctorParameters="function"==typeof tsickleCtorParams?tsickleCtorParams():tsickleCtorParams,paramTypes=ctorParameters.map(ctorParam=>ctorParam&&ctorParam.type),paramAnnotations=ctorParameters.map(ctorParam=>ctorParam&&convertTsickleDecoratorIntoMetadata(ctorParam.decorators));return this._zipTypesAndAnnotations(paramTypes,paramAnnotations)}const paramAnnotations=type.hasOwnProperty(PARAMETERS)&&type[PARAMETERS],paramTypes=this._reflect&&this._reflect.getOwnMetadata&&this._reflect.getOwnMetadata("design:paramtypes",type);return paramTypes||paramAnnotations?this._zipTypesAndAnnotations(paramTypes,paramAnnotations):newArray(type.length)}parameters(type){if(!isType(type))return[];const parentCtor=getParentCtor(type);let parameters=this._ownParameters(type,parentCtor);return parameters||parentCtor===Object||(parameters=this.parameters(parentCtor)),parameters||[]}_ownAnnotations(typeOrFunc,parentCtor){if(typeOrFunc.annotations&&typeOrFunc.annotations!==parentCtor.annotations){let annotations=typeOrFunc.annotations;return"function"==typeof annotations&&annotations.annotations&&(annotations=annotations.annotations),annotations}return typeOrFunc.decorators&&typeOrFunc.decorators!==parentCtor.decorators?convertTsickleDecoratorIntoMetadata(typeOrFunc.decorators):typeOrFunc.hasOwnProperty(ANNOTATIONS)?typeOrFunc[ANNOTATIONS]:null}annotations(typeOrFunc){if(!isType(typeOrFunc))return[];const parentCtor=getParentCtor(typeOrFunc),ownAnnotations=this._ownAnnotations(typeOrFunc,parentCtor)||[];return(parentCtor!==Object?this.annotations(parentCtor):[]).concat(ownAnnotations)}_ownPropMetadata(typeOrFunc,parentCtor){if(typeOrFunc.propMetadata&&typeOrFunc.propMetadata!==parentCtor.propMetadata){let propMetadata=typeOrFunc.propMetadata;return"function"==typeof propMetadata&&propMetadata.propMetadata&&(propMetadata=propMetadata.propMetadata),propMetadata}if(typeOrFunc.propDecorators&&typeOrFunc.propDecorators!==parentCtor.propDecorators){const propDecorators=typeOrFunc.propDecorators,propMetadata={};return Object.keys(propDecorators).forEach(prop=>{propMetadata[prop]=convertTsickleDecoratorIntoMetadata(propDecorators[prop])}),propMetadata}return typeOrFunc.hasOwnProperty(PROP_METADATA)?typeOrFunc[PROP_METADATA]:null}propMetadata(typeOrFunc){if(!isType(typeOrFunc))return{};const parentCtor=getParentCtor(typeOrFunc),propMetadata={};if(parentCtor!==Object){const parentPropMetadata=this.propMetadata(parentCtor);Object.keys(parentPropMetadata).forEach(propName=>{propMetadata[propName]=parentPropMetadata[propName]})}const ownPropMetadata=this._ownPropMetadata(typeOrFunc,parentCtor);return ownPropMetadata&&Object.keys(ownPropMetadata).forEach(propName=>{const decorators=[];propMetadata.hasOwnProperty(propName)&&decorators.push(...propMetadata[propName]),decorators.push(...ownPropMetadata[propName]),propMetadata[propName]=decorators}),propMetadata}ownPropMetadata(typeOrFunc){return isType(typeOrFunc)&&this._ownPropMetadata(typeOrFunc,getParentCtor(typeOrFunc))||{}}hasLifecycleHook(type,lcProperty){return type instanceof Type&&lcProperty in type.prototype}}function convertTsickleDecoratorIntoMetadata(decoratorInvocations){return decoratorInvocations?decoratorInvocations.map(decoratorInvocation=>new(0,decoratorInvocation.type.annotationCls)(...(decoratorInvocation.args?decoratorInvocation.args:[]))):[]}function getParentCtor(ctor){const parentProto=ctor.prototype?Object.getPrototypeOf(ctor.prototype):null;return(parentProto?parentProto.constructor:null)||Object}const THROW_IF_NOT_FOUND={},NEW_LINE=/\n/gm;let _currentInjector;function setCurrentInjector(injector){const former=_currentInjector;return _currentInjector=injector,former}function injectInjectorOnly(token,flags=InjectFlags.Default){if(void 0===_currentInjector)throw new RuntimeError(-203,ngDevMode&&"inject() must be called from an injection context such as a constructor, a factory function, a field initializer, or a function used with `EnvironmentInjector#runInContext`.");return null===_currentInjector?injectRootLimpMode(token,void 0,flags):_currentInjector.get(token,flags&InjectFlags.Optional?null:void 0,flags)}function ɵɵinject(token,flags=InjectFlags.Default){return(_injectImplementation||injectInjectorOnly)(resolveForwardRef(token),flags)}function ɵɵinvalidFactoryDep(index){throw new RuntimeError(202,ngDevMode&&`This constructor is not compatible with Angular Dependency Injection because its dependency at index ${index} of the parameter list is invalid.\nThis can happen if the dependency type is a primitive like a string or if an ancestor of this class is missing an Angular decorator.\n\nPlease check that 1) the type for the parameter at index ${index} is correct and 2) the correct Angular decorators are defined for this class and its ancestors.`)}function inject(token,flags=InjectFlags.Default){return"number"!=typeof flags&&(flags=0|(flags.optional&&8)|(flags.host&&1)|(flags.self&&2)|(flags.skipSelf&&4)),ɵɵinject(token,flags)}function injectArgs(types){const args=[];for(let i=0;i<types.length;i++){const arg=resolveForwardRef(types[i]);if(Array.isArray(arg)){if(0===arg.length)throw new RuntimeError(900,ngDevMode&&"Arguments array must have arguments.");let type,flags=InjectFlags.Default;for(let j=0;j<arg.length;j++){const meta=arg[j],flag=meta.__NG_DI_FLAG__;"number"==typeof flag?-1===flag?type=meta.token:flags|=flag:type=meta}args.push(ɵɵinject(type,flags))}else args.push(ɵɵinject(arg))}return args}function attachInjectFlag(decorator,flag){return decorator.__NG_DI_FLAG__=flag,decorator.prototype.__NG_DI_FLAG__=flag,decorator}function catchInjectorError(e,token,injectorErrorName,source){const tokenPath=e.ngTempTokenPath;throw token.__source&&tokenPath.unshift(token.__source),e.message=function(text,obj,injectorErrorName,source=null){text=text&&"\n"===text.charAt(0)&&"\u0275"==text.charAt(1)?text.slice(2):text;let context=stringify(obj);if(Array.isArray(obj))context=obj.map(stringify).join(" -> ");else if("object"==typeof obj){let parts=[];for(let key in obj)if(obj.hasOwnProperty(key)){let value=obj[key];parts.push(key+":"+("string"==typeof value?JSON.stringify(value):stringify(value)))}context=`{${parts.join(", ")}}`}return`${injectorErrorName}${source?"("+source+")":""}[${context}]: ${text.replace(NEW_LINE,"\n  ")}`}("\n"+e.message,tokenPath,injectorErrorName,source),e.ngTokenPath=tokenPath,e.ngTempTokenPath=null,e}const Inject=attachInjectFlag(makeParamDecorator("Inject",token=>({token:token})),-1),Optional=attachInjectFlag(makeParamDecorator("Optional"),8),Self=attachInjectFlag(makeParamDecorator("Self"),2),SkipSelf=attachInjectFlag(makeParamDecorator("SkipSelf"),4),Host=attachInjectFlag(makeParamDecorator("Host"),1);let _reflect=null;function getReflect(){return _reflect=_reflect||new ReflectionCapabilities}function reflectDependencies(type){return convertDependencies(getReflect().parameters(type))}function convertDependencies(deps){return deps.map(dep=>function(dep){const meta={token:null,attribute:null,host:!1,optional:!1,self:!1,skipSelf:!1};if(Array.isArray(dep)&&dep.length>0)for(let j=0;j<dep.length;j++){const param=dep[j];if(void 0===param)continue;const proto=Object.getPrototypeOf(param);if(param instanceof Optional||"Optional"===proto.ngMetadataName)meta.optional=!0;else if(param instanceof SkipSelf||"SkipSelf"===proto.ngMetadataName)meta.skipSelf=!0;else if(param instanceof Self||"Self"===proto.ngMetadataName)meta.self=!0;else if(param instanceof Host||"Host"===proto.ngMetadataName)meta.host=!0;else if(param instanceof Inject)meta.token=param.token;else if(param instanceof Attribute){if(void 0===param.attributeName)throw new RuntimeError(204,ngDevMode&&"Attribute name must be defined.");meta.attribute=param.attributeName}else meta.token=param}else void 0===dep||Array.isArray(dep)&&0===dep.length?meta.token=null:meta.token=dep;return meta}(dep))}function resolveComponentResources(resourceResolver){const componentResolved=[],urlMap=new Map;function cachedResourceResolve(url){let promise=urlMap.get(url);if(!promise){const resp=resourceResolver(url);urlMap.set(url,promise=resp.then(unwrapResponse))}return promise}return componentResourceResolutionQueue.forEach((component,type)=>{const promises=[];component.templateUrl&&promises.push(cachedResourceResolve(component.templateUrl).then(template=>{component.template=template}));const styleUrls=component.styleUrls,styles=component.styles||(component.styles=[]),styleOffset=component.styles.length;styleUrls&&styleUrls.forEach((styleUrl,index)=>{styles.push(""),promises.push(cachedResourceResolve(styleUrl).then(style=>{styles[styleOffset+index]=style,styleUrls.splice(styleUrls.indexOf(styleUrl),1),0==styleUrls.length&&(component.styleUrls=void 0)}))});const fullyResolved=Promise.all(promises).then(()=>function(type){componentDefPendingResolution.delete(type)}(type));componentResolved.push(fullyResolved)}),clearResolutionOfComponentResourcesQueue(),Promise.all(componentResolved).then(()=>{})}let componentResourceResolutionQueue=new Map;const componentDefPendingResolution=new Set;function componentNeedsResolution(component){return!!(component.templateUrl&&!component.hasOwnProperty("template")||component.styleUrls&&component.styleUrls.length)}function clearResolutionOfComponentResourcesQueue(){const old=componentResourceResolutionQueue;return componentResourceResolutionQueue=new Map,old}function unwrapResponse(response){return"string"==typeof response?response:response.text()}const modules=new Map;let checkForDuplicateNgModules=!0;function registerNgModuleType(ngModuleType,id){!function(id,type,incoming){if(type&&type!==incoming&&checkForDuplicateNgModules)throw new Error(`Duplicate module registered for ${id} - ${stringify(type)} vs ${stringify(type.name)}`)}(id,modules.get(id)||null,ngModuleType),modules.set(id,ngModuleType)}function getRegisteredNgModuleType(id){return modules.get(id)}function setAllowDuplicateNgModuleIdsForTest(allowDuplicates){checkForDuplicateNgModules=!allowDuplicates}const CUSTOM_ELEMENTS_SCHEMA={name:"custom-elements"},NO_ERRORS_SCHEMA={name:"no-errors-schema"};let shouldThrowErrorOnUnknownElement=!1;function ɵsetUnknownElementStrictMode(shouldThrow){shouldThrowErrorOnUnknownElement=shouldThrow}function ɵgetUnknownElementStrictMode(){return shouldThrowErrorOnUnknownElement}let shouldThrowErrorOnUnknownProperty=!1;function ɵsetUnknownPropertyStrictMode(shouldThrow){shouldThrowErrorOnUnknownProperty=shouldThrow}function ɵgetUnknownPropertyStrictMode(){return shouldThrowErrorOnUnknownProperty}function handleUnknownPropertyError(propName,tagName,nodeType,lView){tagName||4!==nodeType||(tagName="ng-template");const isHostStandalone=isHostComponentStandalone(lView);let message=`Can't bind to '${propName}' since it isn't a known property of '${tagName}'${getTemplateLocationDetails(lView)}.`;const schemas=`'${isHostStandalone?"@Component":"@NgModule"}.schemas'`,importLocation=isHostStandalone?"included in the '@Component.imports' of this component":"a part of an @NgModule where this component is declared";if(KNOWN_CONTROL_FLOW_DIRECTIVES.has(propName)){message+=`\nIf the '${propName}' is an Angular control flow directive, please make sure that either the '${KNOWN_CONTROL_FLOW_DIRECTIVES.get(propName)}' directive or the 'CommonModule' is ${importLocation}.`}else message+=`\n1. If '${tagName}' is an Angular component and it has the '${propName}' input, then verify that it is ${importLocation}.`,tagName&&tagName.indexOf("-")>-1?(message+=`\n2. If '${tagName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the ${schemas} of this component to suppress this message.`,message+=`\n3. To allow any property add 'NO_ERRORS_SCHEMA' to the ${schemas} of this component.`):message+=`\n2. To allow any property add 'NO_ERRORS_SCHEMA' to the ${schemas} of this component.`;reportUnknownPropertyError(message)}function reportUnknownPropertyError(message){if(shouldThrowErrorOnUnknownProperty)throw new RuntimeError(303,message);console.error(formatRuntimeError(303,message))}function getDeclarationComponentDef(lView){!ngDevMode&&throwError("Must never be called in production mode");const context=lView[16][8];return context&&context.constructor?getComponentDef(context.constructor):null}function isHostComponentStandalone(lView){!ngDevMode&&throwError("Must never be called in production mode");return!!getDeclarationComponentDef(lView)?.standalone}function getTemplateLocationDetails(lView){!ngDevMode&&throwError("Must never be called in production mode");const componentClassName=getDeclarationComponentDef(lView)?.type?.name;return componentClassName?` (used in the '${componentClassName}' component template)`:""}const KNOWN_CONTROL_FLOW_DIRECTIVES=new Map([["ngIf","NgIf"],["ngFor","NgFor"],["ngSwitchCase","NgSwitchCase"],["ngSwitchDefault","NgSwitchDefault"]]);function matchingSchemas(schemas,tagName){if(null!==schemas)for(let i=0;i<schemas.length;i++){const schema=schemas[i];if(schema===NO_ERRORS_SCHEMA||schema===CUSTOM_ELEMENTS_SCHEMA&&tagName&&tagName.indexOf("-")>-1)return!0}return!1}var RendererStyleFlags2;!function(RendererStyleFlags2){RendererStyleFlags2[RendererStyleFlags2.Important=1]="Important",RendererStyleFlags2[RendererStyleFlags2.DashCase=2]="DashCase"}(RendererStyleFlags2||(RendererStyleFlags2={}));const COMMENT_DISALLOWED=/^>|^->|<!--|-->|--!>|<!-$/g,COMMENT_DELIMITER=/(<|>)/;function escapeCommentText(value){return value.replace(COMMENT_DISALLOWED,text=>text.replace(COMMENT_DELIMITER,"\u200B$1\u200B"))}const TRACKED_LVIEWS=new Map;let uniqueIdCounter=0;function getLViewById(id){return ngDevMode&&assertNumber(id,"ID used for LView lookup must be a number"),TRACKED_LVIEWS.get(id)||null}class LContext{constructor(lViewId,nodeIndex,native){this.lViewId=lViewId,this.nodeIndex=nodeIndex,this.native=native}get lView(){return getLViewById(this.lViewId)}}function getLContext(target){let mpValue=readPatchedData(target);if(mpValue){if(isLView(mpValue)){const lView=mpValue;let nodeIndex,component,directives;if((instance=target)&&instance.constructor&&instance.constructor.ɵcmp){if(nodeIndex=findViaComponent(lView,target),-1==nodeIndex)throw new Error("The provided component was not found in the application");component=target}else if(function(instance){return instance&&instance.constructor&&instance.constructor.ɵdir}(target)){if(nodeIndex=function(lView,directiveInstance){let tNode=lView[1].firstChild;for(;tNode;){const directiveIndexStart=tNode.directiveStart,directiveIndexEnd=tNode.directiveEnd;for(let i=directiveIndexStart;i<directiveIndexEnd;i++)if(lView[i]===directiveInstance)return tNode.index;tNode=traverseNextElement(tNode)}return-1}(lView,target),-1==nodeIndex)throw new Error("The provided directive was not found in the application");directives=getDirectivesAtNodeIndex(nodeIndex,lView,!1)}else if(nodeIndex=findViaNativeElement(lView,target),-1==nodeIndex)return null;const native=unwrapRNode(lView[nodeIndex]),existingCtx=readPatchedData(native),context=existingCtx&&!Array.isArray(existingCtx)?existingCtx:createLContext(lView,nodeIndex,native);if(component&&void 0===context.component&&(context.component=component,attachPatchData(context.component,context)),directives&&void 0===context.directives){context.directives=directives;for(let i=0;i<directives.length;i++)attachPatchData(directives[i],context)}attachPatchData(context.native,context),mpValue=context}}else{const rElement=target;ngDevMode&&assertDomNode(rElement);let parent=rElement;for(;parent=parent.parentNode;){const parentContext=readPatchedData(parent);if(parentContext){const lView=Array.isArray(parentContext)?parentContext:parentContext.lView;if(!lView)return null;const index=findViaNativeElement(lView,rElement);if(index>=0){const native=unwrapRNode(lView[index]),context=createLContext(lView,index,native);attachPatchData(native,context),mpValue=context;break}}}}var instance;return mpValue||null}function createLContext(lView,nodeIndex,native){return new LContext(lView[20],nodeIndex,native)}function getComponentViewByInstance(componentInstance){let lView,patchedData=readPatchedData(componentInstance);if(isLView(patchedData)){const contextLView=patchedData,nodeIndex=findViaComponent(contextLView,componentInstance);lView=getComponentLViewByIndex(nodeIndex,contextLView);const context=createLContext(contextLView,nodeIndex,lView[0]);context.component=componentInstance,attachPatchData(componentInstance,context),attachPatchData(context.native,context)}else{const context=patchedData,contextLView=context.lView;ngDevMode&&assertLView(contextLView),lView=getComponentLViewByIndex(context.nodeIndex,contextLView)}return lView}function attachPatchData(target,data){var lView;ngDevMode&&assertDefined(target,"Target expected"),isLView(data)?(target.__ngContext__=data[20],lView=data,ngDevMode&&assertNumber(lView[20],"LView must have an ID in order to be registered"),TRACKED_LVIEWS.set(lView[20],lView)):target.__ngContext__=data}function readPatchedData(target){ngDevMode&&assertDefined(target,"Target expected");const data=target.__ngContext__;return"number"==typeof data?getLViewById(data):data||null}function readPatchedLView(target){const value=readPatchedData(target);return value?isLView(value)?value:value.lView:null}function findViaNativeElement(lView,target){const tView=lView[1];for(let i=22;i<tView.bindingStartIndex;i++)if(unwrapRNode(lView[i])===target)return i;return-1}function traverseNextElement(tNode){if(tNode.child)return tNode.child;if(tNode.next)return tNode.next;for(;tNode.parent&&!tNode.parent.next;)tNode=tNode.parent;return tNode.parent&&tNode.parent.next}function findViaComponent(lView,componentInstance){const componentIndices=lView[1].components;if(componentIndices)for(let i=0;i<componentIndices.length;i++){const elementComponentIndex=componentIndices[i];if(getComponentLViewByIndex(elementComponentIndex,lView)[8]===componentInstance)return elementComponentIndex}else{if(getComponentLViewByIndex(22,lView)[8]===componentInstance)return 22}return-1}function getDirectivesAtNodeIndex(nodeIndex,lView,includeComponents){const tNode=lView[1].data[nodeIndex];let directiveStartIndex=tNode.directiveStart;if(0==directiveStartIndex)return EMPTY_ARRAY;const directiveEndIndex=tNode.directiveEnd;return!includeComponents&&2&tNode.flags&&directiveStartIndex++,lView.slice(directiveStartIndex,directiveEndIndex)}let _icuContainerIterate;function icuContainerIterate(tIcuContainerNode,lView){return _icuContainerIterate(tIcuContainerNode,lView)}function getLViewParent(lView){ngDevMode&&assertLView(lView);const parent=lView[3];return isLContainer(parent)?parent[3]:parent}function getRootContext(viewOrComponent){const rootView=function(componentOrLView){ngDevMode&&assertDefined(componentOrLView,"component");let lView=isLView(componentOrLView)?componentOrLView:readPatchedLView(componentOrLView);for(;lView&&!(256&lView[2]);)lView=getLViewParent(lView);return ngDevMode&&assertLView(lView),lView}(viewOrComponent);return ngDevMode&&assertDefined(rootView[8],"Root view has no context. Perhaps it is disconnected?"),rootView[8]}function getFirstLContainer(lView){return getNearestLContainer(lView[13])}function getNextLContainer(container){return getNearestLContainer(container[4])}function getNearestLContainer(viewOrContainer){for(;null!==viewOrContainer&&!isLContainer(viewOrContainer);)viewOrContainer=viewOrContainer[4];return viewOrContainer}function applyToElementOrContainer(action,renderer,parent,lNodeToHandle,beforeNode){if(null!=lNodeToHandle){let lContainer,isComponent=!1;isLContainer(lNodeToHandle)?lContainer=lNodeToHandle:isLView(lNodeToHandle)&&(isComponent=!0,ngDevMode&&assertDefined(lNodeToHandle[0],"HOST must be defined for a component LView"),lNodeToHandle=lNodeToHandle[0]);const rNode=unwrapRNode(lNodeToHandle);0===action&&null!==parent?null==beforeNode?nativeAppendChild(renderer,parent,rNode):nativeInsertBefore(renderer,parent,rNode,beforeNode||null,!0):1===action&&null!==parent?nativeInsertBefore(renderer,parent,rNode,beforeNode||null,!0):2===action?nativeRemoveNode(renderer,rNode,isComponent):3===action&&(ngDevMode&&ngDevMode.rendererDestroyNode++,renderer.destroyNode(rNode)),null!=lContainer&&function(renderer,action,lContainer,parentRElement,beforeNode){ngDevMode&&assertLContainer(lContainer);const anchor=lContainer[7],native=unwrapRNode(lContainer);anchor!==native&&applyToElementOrContainer(action,renderer,parentRElement,anchor,beforeNode);for(let i=10;i<lContainer.length;i++){const lView=lContainer[i];applyView(lView[1],lView,renderer,action,parentRElement,anchor)}}(renderer,action,lContainer,parent,beforeNode)}}function createTextNode(renderer,value){return ngDevMode&&ngDevMode.rendererCreateTextNode++,ngDevMode&&ngDevMode.rendererSetText++,renderer.createText(value)}function updateTextNode(renderer,rNode,value){ngDevMode&&ngDevMode.rendererSetText++,renderer.setValue(rNode,value)}function createCommentNode(renderer,value){return ngDevMode&&ngDevMode.rendererCreateComment++,renderer.createComment(escapeCommentText(value))}function createElementNode(renderer,name,namespace){return ngDevMode&&ngDevMode.rendererCreateElement++,renderer.createElement(name,namespace)}function insertView(tView,lView,lContainer,index){ngDevMode&&assertLView(lView),ngDevMode&&assertLContainer(lContainer);const indexInContainer=10+index,containerLength=lContainer.length;index>0&&(lContainer[indexInContainer-1][4]=lView),index<containerLength-10?(lView[4]=lContainer[indexInContainer],addToArray(lContainer,10+index,lView)):(lContainer.push(lView),lView[4]=null),lView[3]=lContainer;const declarationLContainer=lView[17];null!==declarationLContainer&&lContainer!==declarationLContainer&&function(declarationContainer,lView){ngDevMode&&assertDefined(lView,"LView required"),ngDevMode&&assertLContainer(declarationContainer);const movedViews=declarationContainer[9],insertedLContainer=lView[3];ngDevMode&&assertLContainer(insertedLContainer);const insertedComponentLView=insertedLContainer[3][16];ngDevMode&&assertDefined(insertedComponentLView,"Missing insertedComponentLView");const declaredComponentLView=lView[16];ngDevMode&&assertDefined(declaredComponentLView,"Missing declaredComponentLView"),declaredComponentLView!==insertedComponentLView&&(declarationContainer[2]=!0);null===movedViews?declarationContainer[9]=[lView]:movedViews.push(lView)}(declarationLContainer,lView);const lQueries=lView[19];null!==lQueries&&lQueries.insertView(tView),lView[2]|=64}function detachMovedView(declarationContainer,lView){ngDevMode&&assertLContainer(declarationContainer),ngDevMode&&assertDefined(declarationContainer[9],"A projected view should belong to a non-empty projected views collection");const movedViews=declarationContainer[9],declarationViewIndex=movedViews.indexOf(lView),insertionLContainer=lView[3];ngDevMode&&assertLContainer(insertionLContainer),512&lView[2]&&(lView[2]&=-513,updateTransplantedViewCount(insertionLContainer,-1)),movedViews.splice(declarationViewIndex,1)}function detachView(lContainer,removeIndex){if(lContainer.length<=10)return;const indexInContainer=10+removeIndex,viewToDetach=lContainer[indexInContainer];if(viewToDetach){const declarationLContainer=viewToDetach[17];null!==declarationLContainer&&declarationLContainer!==lContainer&&detachMovedView(declarationLContainer,viewToDetach),removeIndex>0&&(lContainer[indexInContainer-1][4]=viewToDetach[4]);const removedLView=removeFromArray(lContainer,10+removeIndex);applyView(viewToDetach[1],lView=viewToDetach,lView[11],2,null,null),lView[0]=null,lView[6]=null;const lQueries=removedLView[19];null!==lQueries&&lQueries.detachView(removedLView[1]),viewToDetach[3]=null,viewToDetach[4]=null,viewToDetach[2]&=-65}var lView;return viewToDetach}function destroyLView(tView,lView){if(!(128&lView[2])){const renderer=lView[11];renderer.destroyNode&&applyView(tView,lView,renderer,3,null,null),function(rootView){let lViewOrLContainer=rootView[13];if(!lViewOrLContainer)return cleanUpView(rootView[1],rootView);for(;lViewOrLContainer;){let next=null;if(isLView(lViewOrLContainer))next=lViewOrLContainer[13];else{ngDevMode&&assertLContainer(lViewOrLContainer);const firstView=lViewOrLContainer[10];firstView&&(next=firstView)}if(!next){for(;lViewOrLContainer&&!lViewOrLContainer[4]&&lViewOrLContainer!==rootView;)isLView(lViewOrLContainer)&&cleanUpView(lViewOrLContainer[1],lViewOrLContainer),lViewOrLContainer=lViewOrLContainer[3];null===lViewOrLContainer&&(lViewOrLContainer=rootView),isLView(lViewOrLContainer)&&cleanUpView(lViewOrLContainer[1],lViewOrLContainer),next=lViewOrLContainer&&lViewOrLContainer[4]}lViewOrLContainer=next}}(lView)}}function cleanUpView(tView,lView){if(!(128&lView[2])){lView[2]&=-65,lView[2]|=128,function(tView,lView){let destroyHooks;if(null!=tView&&null!=(destroyHooks=tView.destroyHooks))for(let i=0;i<destroyHooks.length;i+=2){const context=lView[destroyHooks[i]];if(!(context instanceof NodeInjectorFactory)){const toCall=destroyHooks[i+1];if(Array.isArray(toCall))for(let j=0;j<toCall.length;j+=2){const callContext=context[toCall[j]],hook=toCall[j+1];profiler(4,callContext,hook);try{hook.call(callContext)}finally{profiler(5,callContext,hook)}}else{profiler(4,context,toCall);try{toCall.call(context)}finally{profiler(5,context,toCall)}}}}}(tView,lView),function(tView,lView){const tCleanup=tView.cleanup,lCleanup=lView[7];let lastLCleanupIndex=-1;if(null!==tCleanup)for(let i=0;i<tCleanup.length-1;i+=2)if("string"==typeof tCleanup[i]){const idxOrTargetGetter=tCleanup[i+1],target="function"==typeof idxOrTargetGetter?idxOrTargetGetter(lView):unwrapRNode(lView[idxOrTargetGetter]),listener=lCleanup[lastLCleanupIndex=tCleanup[i+2]],useCaptureOrSubIdx=tCleanup[i+3];"boolean"==typeof useCaptureOrSubIdx?target.removeEventListener(tCleanup[i],listener,useCaptureOrSubIdx):useCaptureOrSubIdx>=0?lCleanup[lastLCleanupIndex=useCaptureOrSubIdx]():lCleanup[lastLCleanupIndex=-useCaptureOrSubIdx].unsubscribe(),i+=2}else{const context=lCleanup[lastLCleanupIndex=tCleanup[i+1]];tCleanup[i].call(context)}if(null!==lCleanup){for(let i=lastLCleanupIndex+1;i<lCleanup.length;i++){const instanceCleanupFn=lCleanup[i];ngDevMode&&assertFunction(instanceCleanupFn,"Expecting instance cleanup function."),instanceCleanupFn()}lView[7]=null}}(tView,lView),1===lView[1].type&&(ngDevMode&&ngDevMode.rendererDestroy++,lView[11].destroy());const declarationContainer=lView[17];if(null!==declarationContainer&&isLContainer(lView[3])){declarationContainer!==lView[3]&&detachMovedView(declarationContainer,lView);const lQueries=lView[19];null!==lQueries&&lQueries.detachView(tView)}!function(lView){ngDevMode&&assertNumber(lView[20],"Cannot stop tracking an LView that does not have an ID"),TRACKED_LVIEWS.delete(lView[20])}(lView)}}function getParentRElement(tView,tNode,lView){return getClosestRElement(tView,tNode.parent,lView)}function getClosestRElement(tView,tNode,lView){let parentTNode=tNode;for(;null!==parentTNode&&40&parentTNode.type;)parentTNode=(tNode=parentTNode).parent;if(null===parentTNode)return lView[0];if(ngDevMode&&assertTNodeType(parentTNode,7),2&parentTNode.flags){ngDevMode&&assertTNodeForLView(parentTNode,lView);const encapsulation=tView.data[parentTNode.directiveStart].encapsulation;if(encapsulation===ViewEncapsulation$1.None||encapsulation===ViewEncapsulation$1.Emulated)return null}return getNativeByTNode(parentTNode,lView)}function nativeInsertBefore(renderer,parent,child,beforeNode,isMove){ngDevMode&&ngDevMode.rendererInsertBefore++,renderer.insertBefore(parent,child,beforeNode,isMove)}function nativeAppendChild(renderer,parent,child){ngDevMode&&ngDevMode.rendererAppendChild++,ngDevMode&&assertDefined(parent,"parent node must be defined"),renderer.appendChild(parent,child)}function nativeAppendOrInsertBefore(renderer,parent,child,beforeNode,isMove){null!==beforeNode?nativeInsertBefore(renderer,parent,child,beforeNode,isMove):nativeAppendChild(renderer,parent,child)}function nativeParentNode(renderer,node){return renderer.parentNode(node)}function getInsertInFrontOfRNode(parentTNode,currentTNode,lView){return _getInsertInFrontOfRNodeWithI18n(parentTNode,currentTNode,lView)}function getInsertInFrontOfRNodeWithNoI18n(parentTNode,currentTNode,lView){return 40&parentTNode.type?getNativeByTNode(parentTNode,lView):null}let _processI18nInsertBefore,policy$1,DOCUMENT,policy,_getInsertInFrontOfRNodeWithI18n=getInsertInFrontOfRNodeWithNoI18n;function setI18nHandling(getInsertInFrontOfRNodeWithI18n,processI18nInsertBefore){_getInsertInFrontOfRNodeWithI18n=getInsertInFrontOfRNodeWithI18n,_processI18nInsertBefore=processI18nInsertBefore}function appendChild(tView,lView,childRNode,childTNode){const parentRNode=getParentRElement(tView,childTNode,lView),renderer=lView[11],anchorNode=getInsertInFrontOfRNode(childTNode.parent||lView[6],childTNode,lView);if(null!=parentRNode)if(Array.isArray(childRNode))for(let i=0;i<childRNode.length;i++)nativeAppendOrInsertBefore(renderer,parentRNode,childRNode[i],anchorNode,!1);else nativeAppendOrInsertBefore(renderer,parentRNode,childRNode,anchorNode,!1);void 0!==_processI18nInsertBefore&&_processI18nInsertBefore(renderer,childTNode,lView,childRNode,parentRNode)}function getFirstNativeNode(lView,tNode){if(null!==tNode){ngDevMode&&assertTNodeType(tNode,63);const tNodeType=tNode.type;if(3&tNodeType)return getNativeByTNode(tNode,lView);if(4&tNodeType)return getBeforeNodeForView(-1,lView[tNode.index]);if(8&tNodeType){const elIcuContainerChild=tNode.child;if(null!==elIcuContainerChild)return getFirstNativeNode(lView,elIcuContainerChild);{const rNodeOrLContainer=lView[tNode.index];return isLContainer(rNodeOrLContainer)?getBeforeNodeForView(-1,rNodeOrLContainer):unwrapRNode(rNodeOrLContainer)}}if(32&tNodeType){return icuContainerIterate(tNode,lView)()||unwrapRNode(lView[tNode.index])}{const projectionNodes=getProjectionNodes(lView,tNode);if(null!==projectionNodes){if(Array.isArray(projectionNodes))return projectionNodes[0];const parentView=getLViewParent(lView[16]);return ngDevMode&&assertParentView(parentView),getFirstNativeNode(parentView,projectionNodes)}return getFirstNativeNode(lView,tNode.next)}}return null}function getProjectionNodes(lView,tNode){if(null!==tNode){const componentHost=lView[16][6],slotIdx=tNode.projection;return ngDevMode&&function(lView,errMessage){assertDefined(lView[16],"Component views should exist."),assertDefined(lView[16][6].projection,errMessage||"Components with projection nodes (<ng-content>) must have projection slots defined.")}(lView),componentHost.projection[slotIdx]}return null}function getBeforeNodeForView(viewIndexInContainer,lContainer){const nextViewIndex=10+viewIndexInContainer+1;if(nextViewIndex<lContainer.length){const lView=lContainer[nextViewIndex],firstTNodeOfView=lView[1].firstChild;if(null!==firstTNodeOfView)return getFirstNativeNode(lView,firstTNodeOfView)}return lContainer[7]}function nativeRemoveNode(renderer,rNode,isHostElement){ngDevMode&&ngDevMode.rendererRemoveNode++;const nativeParent=nativeParentNode(renderer,rNode);nativeParent&&function(renderer,parent,child,isHostElement){renderer.removeChild(parent,child,isHostElement)}(renderer,nativeParent,rNode,isHostElement)}function applyNodes(renderer,action,tNode,lView,parentRElement,beforeNode,isProjection){for(;null!=tNode;){ngDevMode&&assertTNodeForLView(tNode,lView),ngDevMode&&assertTNodeType(tNode,63);const rawSlotValue=lView[tNode.index],tNodeType=tNode.type;if(isProjection&&0===action&&(rawSlotValue&&attachPatchData(unwrapRNode(rawSlotValue),lView),tNode.flags|=4),64!=(64&tNode.flags))if(8&tNodeType)applyNodes(renderer,action,tNode.child,lView,parentRElement,beforeNode,!1),applyToElementOrContainer(action,renderer,parentRElement,rawSlotValue,beforeNode);else if(32&tNodeType){const nextRNode=icuContainerIterate(tNode,lView);let rNode;for(;rNode=nextRNode();)applyToElementOrContainer(action,renderer,parentRElement,rNode,beforeNode);applyToElementOrContainer(action,renderer,parentRElement,rawSlotValue,beforeNode)}else 16&tNodeType?applyProjectionRecursive(renderer,action,lView,tNode,parentRElement,beforeNode):(ngDevMode&&assertTNodeType(tNode,7),applyToElementOrContainer(action,renderer,parentRElement,rawSlotValue,beforeNode));tNode=isProjection?tNode.projectionNext:tNode.next}}function applyView(tView,lView,renderer,action,parentRElement,beforeNode){applyNodes(renderer,action,tView.firstChild,lView,parentRElement,beforeNode,!1)}function applyProjectionRecursive(renderer,action,lView,tProjectionNode,parentRElement,beforeNode){const componentLView=lView[16],componentNode=componentLView[6];ngDevMode&&assertEqual(typeof tProjectionNode.projection,"number","expecting projection index");const nodeToProjectOrRNodes=componentNode.projection[tProjectionNode.projection];if(Array.isArray(nodeToProjectOrRNodes))for(let i=0;i<nodeToProjectOrRNodes.length;i++){applyToElementOrContainer(action,renderer,parentRElement,nodeToProjectOrRNodes[i],beforeNode)}else{applyNodes(renderer,action,nodeToProjectOrRNodes,componentLView[3],parentRElement,beforeNode,!0)}}function writeDirectStyle(renderer,element,newValue){ngDevMode&&assertString(newValue,"'newValue' should be a string"),renderer.setAttribute(element,"style",newValue),ngDevMode&&ngDevMode.rendererSetStyle++}function writeDirectClass(renderer,element,newValue){ngDevMode&&assertString(newValue,"'newValue' should be a string"),""===newValue?renderer.removeAttribute(element,"class"):renderer.setAttribute(element,"class",newValue),ngDevMode&&ngDevMode.rendererSetClassName++}function getPolicy$1(){if(void 0===policy$1&&(policy$1=null,_global.trustedTypes))try{policy$1=_global.trustedTypes.createPolicy("angular",{createHTML:s=>s,createScript:s=>s,createScriptURL:s=>s})}catch{}return policy$1}function trustedHTMLFromString(html){return getPolicy$1()?.createHTML(html)||html}function newTrustedFunctionForDev(...args){if("undefined"==typeof ngDevMode)throw new Error("newTrustedFunctionForDev should never be called in production");if(!_global.trustedTypes)return new Function(...args);const body=`(function anonymous(${args.slice(0,-1).join(",")}\n) { ${args[args.length-1]}\n})`,fn=_global.eval((script=body,getPolicy$1()?.createScript(script)||script));var script;return void 0===fn.bind?new Function(...args):(fn.toString=()=>body,fn.bind(_global))}function ɵɵvalidateIframeAttribute(attrValue,tagName,attrName){const lView=getLView(),tNode=getSelectedTNode(),element=getNativeByTNode(tNode,lView);if(2===tNode.type&&"iframe"===tagName.toLowerCase()){const iframe=element;iframe.src="",iframe.srcdoc=trustedHTMLFromString(""),nativeRemoveNode(lView[11],iframe);const errorMessage=ngDevMode&&`Angular has detected that the \`${attrName}\` was applied as a binding to an <iframe>${getTemplateLocationDetails(lView)}. For security reasons, the \`${attrName}\` can be set on an <iframe> as a static attribute only. \nTo fix this, switch the \`${attrName}\` binding to a static attribute in a template or in host bindings section.`;throw new RuntimeError(-910,errorMessage)}return attrValue}function setDocument(document){DOCUMENT=document}function getDocument(){return void 0!==DOCUMENT?DOCUMENT:"undefined"!=typeof document?document:void 0}function getPolicy(){if(void 0===policy&&(policy=null,_global.trustedTypes))try{policy=_global.trustedTypes.createPolicy("angular#unsafe-bypass",{createHTML:s=>s,createScript:s=>s,createScriptURL:s=>s})}catch{}return policy}function trustedHTMLFromStringBypass(html){return getPolicy()?.createHTML(html)||html}function trustedScriptFromStringBypass(script){return getPolicy()?.createScript(script)||script}function trustedScriptURLFromStringBypass(url){return getPolicy()?.createScriptURL(url)||url}class SafeValueImpl{constructor(changingThisBreaksApplicationSecurity){this.changingThisBreaksApplicationSecurity=changingThisBreaksApplicationSecurity}toString(){return`SafeValue must use [property]=binding: ${this.changingThisBreaksApplicationSecurity} (see https://g.co/ng/security#xss)`}}class SafeHtmlImpl extends SafeValueImpl{getTypeName(){return"HTML"}}class SafeStyleImpl extends SafeValueImpl{getTypeName(){return"Style"}}class SafeScriptImpl extends SafeValueImpl{getTypeName(){return"Script"}}class SafeUrlImpl extends SafeValueImpl{getTypeName(){return"URL"}}class SafeResourceUrlImpl extends SafeValueImpl{getTypeName(){return"ResourceURL"}}function unwrapSafeValue(value){return value instanceof SafeValueImpl?value.changingThisBreaksApplicationSecurity:value}function allowSanitizationBypassAndThrow(value,type){const actualType=getSanitizationBypassType(value);if(null!=actualType&&actualType!==type){if("ResourceURL"===actualType&&"URL"===type)return!0;throw new Error(`Required a safe ${type}, got a ${actualType} (see https://g.co/ng/security#xss)`)}return actualType===type}function getSanitizationBypassType(value){return value instanceof SafeValueImpl&&value.getTypeName()||null}function bypassSanitizationTrustHtml(trustedHtml){return new SafeHtmlImpl(trustedHtml)}function bypassSanitizationTrustStyle(trustedStyle){return new SafeStyleImpl(trustedStyle)}function bypassSanitizationTrustScript(trustedScript){return new SafeScriptImpl(trustedScript)}function bypassSanitizationTrustUrl(trustedUrl){return new SafeUrlImpl(trustedUrl)}function bypassSanitizationTrustResourceUrl(trustedResourceUrl){return new SafeResourceUrlImpl(trustedResourceUrl)}function getInertBodyHelper(defaultDoc){const inertDocumentHelper=new InertDocumentHelper(defaultDoc);return function(){try{return!!new window.DOMParser().parseFromString(trustedHTMLFromString(""),"text/html")}catch{return!1}}()?new DOMParserHelper(inertDocumentHelper):inertDocumentHelper}class DOMParserHelper{constructor(inertDocumentHelper){this.inertDocumentHelper=inertDocumentHelper}getInertBodyElement(html){html="<body><remove></remove>"+html;try{const body=new window.DOMParser().parseFromString(trustedHTMLFromString(html),"text/html").body;return null===body?this.inertDocumentHelper.getInertBodyElement(html):(body.removeChild(body.firstChild),body)}catch{return null}}}class InertDocumentHelper{constructor(defaultDoc){if(this.defaultDoc=defaultDoc,this.inertDocument=this.defaultDoc.implementation.createHTMLDocument("sanitization-inert"),null==this.inertDocument.body){const inertHtml=this.inertDocument.createElement("html");this.inertDocument.appendChild(inertHtml);const inertBodyElement=this.inertDocument.createElement("body");inertHtml.appendChild(inertBodyElement)}}getInertBodyElement(html){const templateEl=this.inertDocument.createElement("template");if("content"in templateEl)return templateEl.innerHTML=trustedHTMLFromString(html),templateEl;const inertBody=this.inertDocument.createElement("body");return inertBody.innerHTML=trustedHTMLFromString(html),this.defaultDoc.documentMode&&this.stripCustomNsAttrs(inertBody),inertBody}stripCustomNsAttrs(el){const elAttrs=el.attributes;for(let i=elAttrs.length-1;0<i;i--){const attrName=elAttrs.item(i).name;"xmlns:ns1"!==attrName&&0!==attrName.indexOf("ns1:")||el.removeAttribute(attrName)}let childNode=el.firstChild;for(;childNode;)childNode.nodeType===Node.ELEMENT_NODE&&this.stripCustomNsAttrs(childNode),childNode=childNode.nextSibling}}const SAFE_URL_PATTERN=/^(?:(?:https?|mailto|data|ftp|tel|file|sms):|[^&:/?#]*(?:[/?#]|$))/gi;function _sanitizeUrl(url){return(url=String(url)).match(SAFE_URL_PATTERN)?url:(("undefined"==typeof ngDevMode||ngDevMode)&&console.warn(`WARNING: sanitizing unsafe URL value ${url} (see https://g.co/ng/security#xss)`),"unsafe:"+url)}function tagSet(tags){const res={};for(const t of tags.split(","))res[t]=!0;return res}function merge(...sets){const res={};for(const s of sets)for(const v in s)s.hasOwnProperty(v)&&(res[v]=!0);return res}const VOID_ELEMENTS=tagSet("area,br,col,hr,img,wbr"),OPTIONAL_END_TAG_BLOCK_ELEMENTS=tagSet("colgroup,dd,dt,li,p,tbody,td,tfoot,th,thead,tr"),OPTIONAL_END_TAG_INLINE_ELEMENTS=tagSet("rp,rt"),OPTIONAL_END_TAG_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,OPTIONAL_END_TAG_BLOCK_ELEMENTS),BLOCK_ELEMENTS=merge(OPTIONAL_END_TAG_BLOCK_ELEMENTS,tagSet("address,article,aside,blockquote,caption,center,del,details,dialog,dir,div,dl,figure,figcaption,footer,h1,h2,h3,h4,h5,h6,header,hgroup,hr,ins,main,map,menu,nav,ol,pre,section,summary,table,ul")),INLINE_ELEMENTS=merge(OPTIONAL_END_TAG_INLINE_ELEMENTS,tagSet("a,abbr,acronym,audio,b,bdi,bdo,big,br,cite,code,del,dfn,em,font,i,img,ins,kbd,label,map,mark,picture,q,ruby,rp,rt,s,samp,small,source,span,strike,strong,sub,sup,time,track,tt,u,var,video")),VALID_ELEMENTS=merge(VOID_ELEMENTS,BLOCK_ELEMENTS,INLINE_ELEMENTS,OPTIONAL_END_TAG_ELEMENTS),URI_ATTRS=tagSet("background,cite,href,itemtype,longdesc,poster,src,xlink:href"),HTML_ATTRS=tagSet("abbr,accesskey,align,alt,autoplay,axis,bgcolor,border,cellpadding,cellspacing,class,clear,color,cols,colspan,compact,controls,coords,datetime,default,dir,download,face,headers,height,hidden,hreflang,hspace,ismap,itemscope,itemprop,kind,label,lang,language,loop,media,muted,nohref,nowrap,open,preload,rel,rev,role,rows,rowspan,rules,scope,scrolling,shape,size,sizes,span,srclang,srcset,start,summary,tabindex,target,title,translate,type,usemap,valign,value,vspace,width"),ARIA_ATTRS=tagSet("aria-activedescendant,aria-atomic,aria-autocomplete,aria-busy,aria-checked,aria-colcount,aria-colindex,aria-colspan,aria-controls,aria-current,aria-describedby,aria-details,aria-disabled,aria-dropeffect,aria-errormessage,aria-expanded,aria-flowto,aria-grabbed,aria-haspopup,aria-hidden,aria-invalid,aria-keyshortcuts,aria-label,aria-labelledby,aria-level,aria-live,aria-modal,aria-multiline,aria-multiselectable,aria-orientation,aria-owns,aria-placeholder,aria-posinset,aria-pressed,aria-readonly,aria-relevant,aria-required,aria-roledescription,aria-rowcount,aria-rowindex,aria-rowspan,aria-selected,aria-setsize,aria-sort,aria-valuemax,aria-valuemin,aria-valuenow,aria-valuetext"),VALID_ATTRS=merge(URI_ATTRS,HTML_ATTRS,ARIA_ATTRS),SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS=tagSet("script,style,template");class SanitizingHtmlSerializer{constructor(){this.sanitizedSomething=!1,this.buf=[]}sanitizeChildren(el){let current=el.firstChild,traverseContent=!0;for(;current;)if(current.nodeType===Node.ELEMENT_NODE?traverseContent=this.startElement(current):current.nodeType===Node.TEXT_NODE?this.chars(current.nodeValue):this.sanitizedSomething=!0,traverseContent&&current.firstChild)current=current.firstChild;else for(;current;){current.nodeType===Node.ELEMENT_NODE&&this.endElement(current);let next=this.checkClobberedElement(current,current.nextSibling);if(next){current=next;break}current=this.checkClobberedElement(current,current.parentNode)}return this.buf.join("")}startElement(element){const tagName=element.nodeName.toLowerCase();if(!VALID_ELEMENTS.hasOwnProperty(tagName))return this.sanitizedSomething=!0,!SKIP_TRAVERSING_CONTENT_IF_INVALID_ELEMENTS.hasOwnProperty(tagName);this.buf.push("<"),this.buf.push(tagName);const elAttrs=element.attributes;for(let i=0;i<elAttrs.length;i++){const elAttr=elAttrs.item(i),attrName=elAttr.name,lower=attrName.toLowerCase();if(!VALID_ATTRS.hasOwnProperty(lower)){this.sanitizedSomething=!0;continue}let value=elAttr.value;URI_ATTRS[lower]&&(value=_sanitizeUrl(value)),this.buf.push(" ",attrName,"=\"",encodeEntities(value),"\"")}return this.buf.push(">"),!0}endElement(current){const tagName=current.nodeName.toLowerCase();VALID_ELEMENTS.hasOwnProperty(tagName)&&!VOID_ELEMENTS.hasOwnProperty(tagName)&&(this.buf.push("</"),this.buf.push(tagName),this.buf.push(">"))}chars(chars){this.buf.push(encodeEntities(chars))}checkClobberedElement(node,nextNode){if(nextNode&&(node.compareDocumentPosition(nextNode)&Node.DOCUMENT_POSITION_CONTAINED_BY)===Node.DOCUMENT_POSITION_CONTAINED_BY)throw new Error(`Failed to sanitize html because the element is clobbered: ${node.outerHTML}`);return nextNode}}const SURROGATE_PAIR_REGEXP=/[\uD800-\uDBFF][\uDC00-\uDFFF]/g,NON_ALPHANUMERIC_REGEXP=/([^\#-~ |!])/g;function encodeEntities(value){return value.replace(/&/g,"&amp;").replace(SURROGATE_PAIR_REGEXP,function(match){return"&#"+(1024*(match.charCodeAt(0)-55296)+(match.charCodeAt(1)-56320)+65536)+";"}).replace(NON_ALPHANUMERIC_REGEXP,function(match){return"&#"+match.charCodeAt(0)+";"}).replace(/</g,"&lt;").replace(/>/g,"&gt;")}let inertBodyHelper;function _sanitizeHtml(defaultDoc,unsafeHtmlInput){let inertBodyElement=null;try{inertBodyHelper=inertBodyHelper||getInertBodyHelper(defaultDoc);let unsafeHtml=unsafeHtmlInput?String(unsafeHtmlInput):"";inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml);let mXSSAttempts=5,parsedHtml=unsafeHtml;do{if(0===mXSSAttempts)throw new Error("Failed to sanitize html because the input is unstable");mXSSAttempts--,unsafeHtml=parsedHtml,parsedHtml=inertBodyElement.innerHTML,inertBodyElement=inertBodyHelper.getInertBodyElement(unsafeHtml)}while(unsafeHtml!==parsedHtml);const sanitizer=new SanitizingHtmlSerializer,safeHtml=sanitizer.sanitizeChildren(getTemplateContent(inertBodyElement)||inertBodyElement);return("undefined"==typeof ngDevMode||ngDevMode)&&sanitizer.sanitizedSomething&&console.warn("WARNING: sanitizing HTML stripped some content, see https://g.co/ng/security#xss"),trustedHTMLFromString(safeHtml)}finally{if(inertBodyElement){const parent=getTemplateContent(inertBodyElement)||inertBodyElement;for(;parent.firstChild;)parent.removeChild(parent.firstChild)}}}function getTemplateContent(el){return"content"in el&&function(el){return el.nodeType===Node.ELEMENT_NODE&&"TEMPLATE"===el.nodeName}(el)?el.content:null}var SecurityContext;function ɵɵsanitizeHtml(unsafeHtml){const sanitizer=getSanitizer();return sanitizer?trustedHTMLFromStringBypass(sanitizer.sanitize(SecurityContext.HTML,unsafeHtml)||""):allowSanitizationBypassAndThrow(unsafeHtml,"HTML")?trustedHTMLFromStringBypass(unwrapSafeValue(unsafeHtml)):_sanitizeHtml(getDocument(),renderStringify(unsafeHtml))}function ɵɵsanitizeStyle(unsafeStyle){const sanitizer=getSanitizer();return sanitizer?sanitizer.sanitize(SecurityContext.STYLE,unsafeStyle)||"":allowSanitizationBypassAndThrow(unsafeStyle,"Style")?unwrapSafeValue(unsafeStyle):renderStringify(unsafeStyle)}function ɵɵsanitizeUrl(unsafeUrl){const sanitizer=getSanitizer();return sanitizer?sanitizer.sanitize(SecurityContext.URL,unsafeUrl)||"":allowSanitizationBypassAndThrow(unsafeUrl,"URL")?unwrapSafeValue(unsafeUrl):_sanitizeUrl(renderStringify(unsafeUrl))}function ɵɵsanitizeResourceUrl(unsafeResourceUrl){const sanitizer=getSanitizer();if(sanitizer)return trustedScriptURLFromStringBypass(sanitizer.sanitize(SecurityContext.RESOURCE_URL,unsafeResourceUrl)||"");if(allowSanitizationBypassAndThrow(unsafeResourceUrl,"ResourceURL"))return trustedScriptURLFromStringBypass(unwrapSafeValue(unsafeResourceUrl));throw new RuntimeError(904,ngDevMode&&"unsafe value used in a resource URL context (see https://g.co/ng/security#xss)")}function ɵɵsanitizeScript(unsafeScript){const sanitizer=getSanitizer();if(sanitizer)return trustedScriptFromStringBypass(sanitizer.sanitize(SecurityContext.SCRIPT,unsafeScript)||"");if(allowSanitizationBypassAndThrow(unsafeScript,"Script"))return trustedScriptFromStringBypass(unwrapSafeValue(unsafeScript));throw new RuntimeError(905,ngDevMode&&"unsafe value used in a script context")}function ɵɵtrustConstantHtml(html){if(ngDevMode&&(!Array.isArray(html)||!Array.isArray(html.raw)||1!==html.length))throw new Error(`Unexpected interpolation in trusted HTML constant: ${html.join("?")}`);return trustedHTMLFromString(html[0])}function ɵɵtrustConstantResourceUrl(url){if(ngDevMode&&(!Array.isArray(url)||!Array.isArray(url.raw)||1!==url.length))throw new Error(`Unexpected interpolation in trusted URL constant: ${url.join("?")}`);return function(url){return getPolicy$1()?.createScriptURL(url)||url}(url[0])}function ɵɵsanitizeUrlOrResourceUrl(unsafeUrl,tag,prop){return function(tag,prop){return"src"===prop&&("embed"===tag||"frame"===tag||"iframe"===tag||"media"===tag||"script"===tag)||"href"===prop&&("base"===tag||"link"===tag)?ɵɵsanitizeResourceUrl:ɵɵsanitizeUrl}(tag,prop)(unsafeUrl)}function getSanitizer(){const lView=getLView();return lView&&lView[12]}!function(SecurityContext){SecurityContext[SecurityContext.NONE=0]="NONE",SecurityContext[SecurityContext.HTML=1]="HTML",SecurityContext[SecurityContext.STYLE=2]="STYLE",SecurityContext[SecurityContext.SCRIPT=3]="SCRIPT",SecurityContext[SecurityContext.URL=4]="URL",SecurityContext[SecurityContext.RESOURCE_URL=5]="RESOURCE_URL"}(SecurityContext||(SecurityContext={}));const ENVIRONMENT_INITIALIZER=new InjectionToken("ENVIRONMENT_INITIALIZER"),INJECTOR=new InjectionToken("INJECTOR",-1),INJECTOR_DEF_TYPES=new InjectionToken("INJECTOR_DEF_TYPES");class NullInjector{get(token,notFoundValue=THROW_IF_NOT_FOUND){if(notFoundValue===THROW_IF_NOT_FOUND){const error=new Error(`NullInjectorError: No provider for ${stringify(token)}!`);throw error.name="NullInjectorError",error}return notFoundValue}}function importProvidersFrom(...sources){return{"\u0275providers":internalImportProvidersFrom(!0,sources)}}function internalImportProvidersFrom(checkForStandaloneCmp,...sources){const providersOut=[],dedup=new Set;let injectorTypesWithProviders;return deepForEach(sources,source=>{if(("undefined"==typeof ngDevMode||ngDevMode)&&checkForStandaloneCmp){if(getComponentDef(source)?.standalone)throw new RuntimeError(800,`Importing providers supports NgModule or ModuleWithProviders but got a standalone component "${stringifyForError(source)}"`)}const internalSource=source;walkProviderTree(internalSource,providersOut,[],dedup)&&(injectorTypesWithProviders||(injectorTypesWithProviders=[]),injectorTypesWithProviders.push(internalSource))}),void 0!==injectorTypesWithProviders&&processInjectorTypesWithProviders(injectorTypesWithProviders,providersOut),providersOut}function processInjectorTypesWithProviders(typesWithProviders,providersOut){for(let i=0;i<typesWithProviders.length;i++){const{ngModule:ngModule,providers:providers}=typesWithProviders[i];deepForEach(providers,provider=>{ngDevMode&&validateProvider(provider,providers||EMPTY_ARRAY,ngModule),providersOut.push(provider)})}}function walkProviderTree(container,providersOut,parents,dedup){if(!(container=resolveForwardRef(container)))return!1;let defType=null,injDef=getInjectorDef(container);const cmpDef=!injDef&&getComponentDef(container);if(injDef||cmpDef){if(cmpDef&&!cmpDef.standalone)return!1;defType=container}else{const ngModule=container.ngModule;if(injDef=getInjectorDef(ngModule),!injDef)return!1;defType=ngModule}if(ngDevMode&&-1!==parents.indexOf(defType)){throwCyclicDependencyError(stringify(defType),parents.map(stringify))}const isDuplicate=dedup.has(defType);if(cmpDef){if(isDuplicate)return!1;if(dedup.add(defType),cmpDef.dependencies){const deps="function"==typeof cmpDef.dependencies?cmpDef.dependencies():cmpDef.dependencies;for(const dep of deps)walkProviderTree(dep,providersOut,parents,dedup)}}else{if(!injDef)return!1;{if(null!=injDef.imports&&!isDuplicate){let importTypesWithProviders;ngDevMode&&parents.push(defType),dedup.add(defType);try{deepForEach(injDef.imports,imported=>{walkProviderTree(imported,providersOut,parents,dedup)&&(importTypesWithProviders||(importTypesWithProviders=[]),importTypesWithProviders.push(imported))})}finally{ngDevMode&&parents.pop()}void 0!==importTypesWithProviders&&processInjectorTypesWithProviders(importTypesWithProviders,providersOut)}if(!isDuplicate){const factory=getFactoryDef(defType)||(()=>new defType);providersOut.push({provide:defType,useFactory:factory,deps:EMPTY_ARRAY},{provide:INJECTOR_DEF_TYPES,useValue:defType,multi:!0},{provide:ENVIRONMENT_INITIALIZER,useValue:()=>ɵɵinject(defType),multi:!0})}const defProviders=injDef.providers;if(null!=defProviders&&!isDuplicate){const injectorType=container;deepForEach(defProviders,provider=>{ngDevMode&&validateProvider(provider,defProviders,injectorType),providersOut.push(provider)})}}}return defType!==container&&void 0!==container.providers}function validateProvider(provider,providers,containerType){if(isTypeProvider(provider)||isValueProvider(provider)||isFactoryProvider(provider)||isExistingProvider(provider))return;resolveForwardRef(provider&&(provider.useClass||provider.provide))||throwInvalidProviderError(containerType,providers,provider)}const USE_VALUE$1=getClosureSafeProperty({provide:String,useValue:getClosureSafeProperty});function isValueProvider(value){return null!==value&&"object"==typeof value&&USE_VALUE$1 in value}function isExistingProvider(value){return!(!value||!value.useExisting)}function isFactoryProvider(value){return!(!value||!value.useFactory)}function isTypeProvider(value){return"function"==typeof value}const INJECTOR_SCOPE=new InjectionToken("Set Injector scope."),NOT_YET={},CIRCULAR={};let NULL_INJECTOR$1;function getNullInjector(){return void 0===NULL_INJECTOR$1&&(NULL_INJECTOR$1=new NullInjector),NULL_INJECTOR$1}class EnvironmentInjector{}class R3Injector extends EnvironmentInjector{constructor(providers,parent,source,scopes){super(),this.parent=parent,this.source=source,this.scopes=scopes,this.records=new Map,this._ngOnDestroyHooks=new Set,this._onDestroyHooks=[],this._destroyed=!1,forEachSingleProvider(providers,provider=>this.processProvider(provider)),this.records.set(INJECTOR,makeRecord(void 0,this)),scopes.has("environment")&&this.records.set(EnvironmentInjector,makeRecord(void 0,this));const record=this.records.get(INJECTOR_SCOPE);null!=record&&"string"==typeof record.value&&this.scopes.add(record.value),this.injectorDefTypes=new Set(this.get(INJECTOR_DEF_TYPES.multi,EMPTY_ARRAY,InjectFlags.Self))}get destroyed(){return this._destroyed}destroy(){this.assertNotDestroyed(),this._destroyed=!0;try{for(const service of this._ngOnDestroyHooks)service.ngOnDestroy();for(const hook of this._onDestroyHooks)hook()}finally{this.records.clear(),this._ngOnDestroyHooks.clear(),this.injectorDefTypes.clear(),this._onDestroyHooks.length=0}}onDestroy(callback){this._onDestroyHooks.push(callback)}runInContext(fn){this.assertNotDestroyed();const previousInjector=setCurrentInjector(this),previousInjectImplementation=setInjectImplementation(void 0);try{return fn()}finally{setCurrentInjector(previousInjector),setInjectImplementation(previousInjectImplementation)}}get(token,notFoundValue=THROW_IF_NOT_FOUND,flags=InjectFlags.Default){this.assertNotDestroyed();const previousInjector=setCurrentInjector(this),previousInjectImplementation=setInjectImplementation(void 0);try{if(!(flags&InjectFlags.SkipSelf)){let record=this.records.get(token);if(void 0===record){const def=("function"==typeof(value=token)||"object"==typeof value&&value instanceof InjectionToken)&&getInjectableDef(token);record=def&&this.injectableDefInScope(def)?makeRecord(injectableDefOrInjectorDefFactory(token),NOT_YET):null,this.records.set(token,record)}if(null!=record)return this.hydrate(token,record)}const nextInjector=flags&InjectFlags.Self?getNullInjector():this.parent;return notFoundValue=flags&InjectFlags.Optional&&notFoundValue===THROW_IF_NOT_FOUND?null:notFoundValue,nextInjector.get(token,notFoundValue)}catch(e){if("NullInjectorError"===e.name){if((e.ngTempTokenPath=e.ngTempTokenPath||[]).unshift(stringify(token)),previousInjector)throw e;return catchInjectorError(e,token,"R3InjectorError",this.source)}throw e}finally{setInjectImplementation(previousInjectImplementation),setCurrentInjector(previousInjector)}var value}resolveInjectorInitializers(){const previousInjector=setCurrentInjector(this),previousInjectImplementation=setInjectImplementation(void 0);try{const initializers=this.get(ENVIRONMENT_INITIALIZER.multi,EMPTY_ARRAY,InjectFlags.Self);if(ngDevMode&&!Array.isArray(initializers))throw new RuntimeError(209,`Unexpected type of the \`ENVIRONMENT_INITIALIZER\` token value (expected an array, but got ${typeof initializers}). Please check that the \`ENVIRONMENT_INITIALIZER\` token is configured as a \`multi: true\` provider.`);for(const initializer of initializers)initializer()}finally{setCurrentInjector(previousInjector),setInjectImplementation(previousInjectImplementation)}}toString(){const tokens=[],records=this.records;for(const token of records.keys())tokens.push(stringify(token));return`R3Injector[${tokens.join(", ")}]`}assertNotDestroyed(){if(this._destroyed)throw new RuntimeError(205,ngDevMode&&"Injector has already been destroyed.")}processProvider(provider){let token=isTypeProvider(provider=resolveForwardRef(provider))?provider:resolveForwardRef(provider&&provider.provide);const record=function(provider){if(isValueProvider(provider))return makeRecord(void 0,provider.useValue);return makeRecord(providerToFactory(provider),NOT_YET)}(provider);if(isTypeProvider(provider)||!0!==provider.multi){const existing=this.records.get(token);ngDevMode&&existing&&void 0!==existing.multi&&throwMixedMultiProviderError()}else{let multiRecord=this.records.get(token);multiRecord?ngDevMode&&void 0===multiRecord.multi&&throwMixedMultiProviderError():(multiRecord=makeRecord(void 0,NOT_YET,!0),multiRecord.factory=()=>injectArgs(multiRecord.multi),this.records.set(token,multiRecord)),token=provider,multiRecord.multi.push(provider)}this.records.set(token,record)}hydrate(token,record){var value;return ngDevMode&&record.value===CIRCULAR?throwCyclicDependencyError(stringify(token)):record.value===NOT_YET&&(record.value=CIRCULAR,record.value=record.factory()),"object"==typeof record.value&&record.value&&null!==(value=record.value)&&"object"==typeof value&&"function"==typeof value.ngOnDestroy&&this._ngOnDestroyHooks.add(record.value),record.value}injectableDefInScope(def){if(!def.providedIn)return!1;const providedIn=resolveForwardRef(def.providedIn);return"string"==typeof providedIn?"any"===providedIn||this.scopes.has(providedIn):this.injectorDefTypes.has(providedIn)}}function injectableDefOrInjectorDefFactory(token){const injectableDef=getInjectableDef(token),factory=null!==injectableDef?injectableDef.factory:getFactoryDef(token);if(null!==factory)return factory;if(token instanceof InjectionToken)throw new RuntimeError(204,ngDevMode&&`Token ${stringify(token)} is missing a ɵprov definition.`);if(token instanceof Function)return function(token){const paramLength=token.length;if(paramLength>0){const args=newArray(paramLength,"?");throw new RuntimeError(204,ngDevMode&&`Can't resolve all parameters for ${stringify(token)}: (${args.join(", ")}).`)}const inheritedInjectableDef=function(type){const def=type&&(type[NG_PROV_DEF]||type[NG_INJECTABLE_DEF]);if(def){const typeName=function(type){if(type.hasOwnProperty("name"))return type.name;const match=(""+type).match(/^function\s*([^\s(]+)/);return null===match?"":match[1]}(type);return console.warn(`DEPRECATED: DI is instantiating a token "${typeName}" that inherits its @Injectable decorator but does not provide one itself.\nThis will become an error in a future version of Angular. Please add @Injectable() to the "${typeName}" class.`),def}return null}(token);return null!==inheritedInjectableDef?()=>inheritedInjectableDef.factory(token):()=>new token}(token);throw new RuntimeError(204,ngDevMode&&"unreachable")}function providerToFactory(provider,ngModuleType,providers){let factory;if(ngDevMode&&isImportedNgModuleProviders(provider)&&throwInvalidProviderError(void 0,providers,provider),isTypeProvider(provider)){const unwrappedProvider=resolveForwardRef(provider);return getFactoryDef(unwrappedProvider)||injectableDefOrInjectorDefFactory(unwrappedProvider)}if(isValueProvider(provider))factory=()=>resolveForwardRef(provider.useValue);else if(isFactoryProvider(provider))factory=()=>provider.useFactory(...injectArgs(provider.deps||[]));else if(isExistingProvider(provider))factory=()=>ɵɵinject(resolveForwardRef(provider.useExisting));else{const classRef=resolveForwardRef(provider&&(provider.useClass||provider.provide));if(ngDevMode&&!classRef&&throwInvalidProviderError(ngModuleType,providers,provider),!provider.deps)return getFactoryDef(classRef)||injectableDefOrInjectorDefFactory(classRef);factory=()=>new classRef(...injectArgs(provider.deps))}return factory}function makeRecord(factory,value,multi=!1){return{factory:factory,value:value,multi:multi?[]:void 0}}function isImportedNgModuleProviders(provider){return!!provider.ɵproviders}function forEachSingleProvider(providers,fn){for(const provider of providers)Array.isArray(provider)?forEachSingleProvider(provider,fn):isImportedNgModuleProviders(provider)?forEachSingleProvider(provider.ɵproviders,fn):fn(provider)}class ComponentRef$1{}class ComponentFactory$1{}const ERROR_COMPONENT="ngComponent";class _NullComponentFactoryResolver{resolveComponentFactory(component){throw function(component){const error=Error(`No component factory found for ${stringify(component)}. Did you add it to @NgModule.entryComponents?`);return error[ERROR_COMPONENT]=component,error}(component)}}class ComponentFactoryResolver$1{}function createElementRef(tNode,lView){return new ElementRef(getNativeByTNode(tNode,lView))}ComponentFactoryResolver$1.NULL=new _NullComponentFactoryResolver;class ElementRef{constructor(nativeElement){this.nativeElement=nativeElement}}function unwrapElementRef(value){return value instanceof ElementRef?value.nativeElement:value}ElementRef.__NG_ELEMENT_ID__=function(){return createElementRef(getCurrentTNode(),getLView())},new InjectionToken("Renderer2Interceptor");class RendererFactory2{}class Renderer2{}Renderer2.__NG_ELEMENT_ID__=()=>function(){const lView=getLView(),nodeAtIndex=getComponentLViewByIndex(getCurrentTNode().index,lView);return(isLView(nodeAtIndex)?nodeAtIndex:lView)[11]}();class Sanitizer{}Sanitizer.ɵprov=ɵɵdefineInjectable({token:Sanitizer,providedIn:"root",factory:()=>null});class Version{constructor(full){this.full=full,this.major=full.split(".")[0],this.minor=full.split(".")[1],this.patch=full.split(".").slice(2).join(".")}}const VERSION=new Version("14.2.12"),NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR={};function getOriginalError(error){return error.ngOriginalError}class ErrorHandler{constructor(){this._console=console}handleError(error){const originalError=this._findOriginalError(error);this._console.error("ERROR",error),originalError&&this._console.error("ORIGINAL ERROR",originalError)}_findOriginalError(error){let e=error&&getOriginalError(error);for(;e&&getOriginalError(e);)e=getOriginalError(e);return e||null}}function normalizeDebugBindingName(name){var input;return input=name.replace(/[$@]/g,"_"),`ng-reflect-${name=input.replace(CAMEL_CASE_REGEXP,(...m)=>"-"+m[1].toLowerCase())}`}const CAMEL_CASE_REGEXP=/([A-Z])/g;function ɵɵresolveWindow(element){return element.ownerDocument.defaultView}function ɵɵresolveDocument(element){return element.ownerDocument}function ɵɵresolveBody(element){return element.ownerDocument.body}function maybeUnwrapFn(value){return value instanceof Function?value():value}function assertComponentDef(type){if(!getComponentDef(type))throw new RuntimeError(906,`The ${stringifyForError(type)} is not an Angular component, make sure it has the \`@Component\` decorator.`)}function throwMultipleComponentError(tNode,first,second){throw new RuntimeError(-300,`Multiple components match node with tagname ${tNode.value}: ${stringifyForError(first)} and ${stringifyForError(second)}`)}function constructDetailsForInterpolation(lView,rootIndex,expressionIndex,meta,changedValue){const[propName,prefix,...chunks]=meta.split("\uFFFD");let oldValue=prefix,newValue=prefix;for(let i=0;i<chunks.length;i++){const slotIdx=rootIndex+i;oldValue+=`${lView[slotIdx]}${chunks[i]}`,newValue+=`${slotIdx===expressionIndex?changedValue:lView[slotIdx]}${chunks[i]}`}return{propName:propName,oldValue:oldValue,newValue:newValue}}function classIndexOf(className,classToSearch,startingIndex){ngDevMode&&assertNotEqual(classToSearch,"","can not look for \"\" string.");let end=className.length;for(;;){const foundIndex=className.indexOf(classToSearch,startingIndex);if(-1===foundIndex)return foundIndex;if(0===foundIndex||className.charCodeAt(foundIndex-1)<=32){const length=classToSearch.length;if(foundIndex+length===end||className.charCodeAt(foundIndex+length)<=32)return foundIndex}startingIndex=foundIndex+1}}function isCssClassMatching(attrs,cssClassToMatch,isProjectionMode){ngDevMode&&assertEqual(cssClassToMatch,cssClassToMatch.toLowerCase(),"Class name expected to be lowercase.");let i=0;for(;i<attrs.length;){let item=attrs[i++];if(isProjectionMode&&"class"===item){if(item=attrs[i],-1!==classIndexOf(item.toLowerCase(),cssClassToMatch,0))return!0}else if(1===item){for(;i<attrs.length&&"string"==typeof(item=attrs[i++]);)if(item.toLowerCase()===cssClassToMatch)return!0;return!1}}return!1}function isInlineTemplate(tNode){return 4===tNode.type&&"ng-template"!==tNode.value}function hasTagAndTypeMatch(tNode,currentSelector,isProjectionMode){return currentSelector===(4!==tNode.type||isProjectionMode?tNode.value:"ng-template")}function isNodeMatchingSelector(tNode,selector,isProjectionMode){ngDevMode&&assertDefined(selector[0],"Selector should have a tag name");let mode=4;const nodeAttrs=tNode.attrs||[],nameOnlyMarkerIdx=function(nodeAttrs){for(let i=0;i<nodeAttrs.length;i++){if(isNameOnlyAttributeMarker(nodeAttrs[i]))return i}return nodeAttrs.length}(nodeAttrs);let skipToNextSelector=!1;for(let i=0;i<selector.length;i++){const current=selector[i];if("number"!=typeof current){if(!skipToNextSelector)if(4&mode){if(mode=2|1&mode,""!==current&&!hasTagAndTypeMatch(tNode,current,isProjectionMode)||""===current&&1===selector.length){if(isPositive(mode))return!1;skipToNextSelector=!0}}else{const selectorAttrValue=8&mode?current:selector[++i];if(8&mode&&null!==tNode.attrs){if(!isCssClassMatching(tNode.attrs,selectorAttrValue,isProjectionMode)){if(isPositive(mode))return!1;skipToNextSelector=!0}continue}const attrIndexInNode=findAttrIndexInNode(8&mode?"class":current,nodeAttrs,isInlineTemplate(tNode),isProjectionMode);if(-1===attrIndexInNode){if(isPositive(mode))return!1;skipToNextSelector=!0;continue}if(""!==selectorAttrValue){let nodeAttrValue;attrIndexInNode>nameOnlyMarkerIdx?nodeAttrValue="":(ngDevMode&&assertNotEqual(nodeAttrs[attrIndexInNode],0,"We do not match directives on namespaced attributes"),nodeAttrValue=nodeAttrs[attrIndexInNode+1].toLowerCase());const compareAgainstClassName=8&mode?nodeAttrValue:null;if(compareAgainstClassName&&-1!==classIndexOf(compareAgainstClassName,selectorAttrValue,0)||2&mode&&selectorAttrValue!==nodeAttrValue){if(isPositive(mode))return!1;skipToNextSelector=!0}}}}else{if(!skipToNextSelector&&!isPositive(mode)&&!isPositive(current))return!1;if(skipToNextSelector&&isPositive(current))continue;skipToNextSelector=!1,mode=current|1&mode}}return isPositive(mode)||skipToNextSelector}function isPositive(mode){return 0==(1&mode)}function findAttrIndexInNode(name,attrs,isInlineTemplate,isProjectionMode){if(null===attrs)return-1;let i=0;if(isProjectionMode||!isInlineTemplate){let bindingsMode=!1;for(;i<attrs.length;){const maybeAttrName=attrs[i];if(maybeAttrName===name)return i;if(3===maybeAttrName||6===maybeAttrName)bindingsMode=!0;else{if(1===maybeAttrName||2===maybeAttrName){let value=attrs[++i];for(;"string"==typeof value;)value=attrs[++i];continue}if(4===maybeAttrName)break;if(0===maybeAttrName){i+=4;continue}}i+=bindingsMode?1:2}return-1}return function(attrs,name){let i=attrs.indexOf(4);if(i>-1)for(i++;i<attrs.length;){const attr=attrs[i];if("number"==typeof attr)return-1;if(attr===name)return i;i++}return-1}(attrs,name)}function isNodeMatchingSelectorList(tNode,selector,isProjectionMode=!1){for(let i=0;i<selector.length;i++)if(isNodeMatchingSelector(tNode,selector[i],isProjectionMode))return!0;return!1}function isSelectorInSelectorList(selector,list){selectorListLoop:for(let i=0;i<list.length;i++){const currentSelectorInList=list[i];if(selector.length===currentSelectorInList.length){for(let j=0;j<selector.length;j++)if(selector[j]!==currentSelectorInList[j])continue selectorListLoop;return!0}}return!1}function maybeWrapInNotSelector(isNegativeMode,chunk){return isNegativeMode?":not("+chunk.trim()+")":chunk}function stringifyCSSSelector(selector){let result=selector[0],i=1,mode=2,currentChunk="",isNegativeMode=!1;for(;i<selector.length;){let valueOrMarker=selector[i];if("string"==typeof valueOrMarker){if(2&mode){const attrValue=selector[++i];currentChunk+="["+valueOrMarker+(attrValue.length>0?"=\""+attrValue+"\"":"")+"]"}else 8&mode?currentChunk+="."+valueOrMarker:4&mode&&(currentChunk+=" "+valueOrMarker);}else""===currentChunk||isPositive(valueOrMarker)||(result+=maybeWrapInNotSelector(isNegativeMode,currentChunk),currentChunk=""),mode=valueOrMarker,isNegativeMode=isNegativeMode||!isPositive(mode);i++}return""!==currentChunk&&(result+=maybeWrapInNotSelector(isNegativeMode,currentChunk)),result}const NO_CHANGE="undefined"==typeof ngDevMode||ngDevMode?{__brand__:"NO_CHANGE"}:{};function ɵɵadvance(delta){ngDevMode&&assertGreaterThan(delta,0,"Can only advance forward"),selectIndexInternal(getTView(),getLView(),getSelectedIndex()+delta,!!ngDevMode&&isInCheckNoChangesMode())}function selectIndexInternal(tView,lView,index,checkNoChangesMode){if(ngDevMode&&function(lView,index){assertBetween(22,lView[1].bindingStartIndex,index)}(lView,index),!checkNoChangesMode){if(3==(3&lView[2])){const preOrderCheckHooks=tView.preOrderCheckHooks;null!==preOrderCheckHooks&&executeCheckHooks(lView,preOrderCheckHooks,index)}else{const preOrderHooks=tView.preOrderHooks;null!==preOrderHooks&&executeInitAndCheckHooks(lView,preOrderHooks,0,index)}}setSelectedIndex(index)}const angularCoreDiEnv={"\u0275\u0275defineInjectable":ɵɵdefineInjectable,"\u0275\u0275defineInjector":ɵɵdefineInjector,"\u0275\u0275inject":ɵɵinject,"\u0275\u0275invalidFactoryDep":ɵɵinvalidFactoryDep,resolveForwardRef:resolveForwardRef};function compileInjectable(type,meta){let ngInjectableDef=null,ngFactoryDef=null;type.hasOwnProperty(NG_PROV_DEF)||Object.defineProperty(type,NG_PROV_DEF,{get:()=>{if(null===ngInjectableDef){const compiler=getCompilerFacade({usage:0,kind:"injectable",type:type});ngInjectableDef=compiler.compileInjectable(angularCoreDiEnv,`ng:///${type.name}/ɵprov.js`,function(type,srcMeta){const meta=srcMeta||{providedIn:null},compilerMeta={name:type.name,type:type,typeArgumentCount:0,providedIn:meta.providedIn};(isUseClassProvider(meta)||isUseFactoryProvider(meta))&&void 0!==meta.deps&&(compilerMeta.deps=convertDependencies(meta.deps));isUseClassProvider(meta)?compilerMeta.useClass=meta.useClass:!function(meta){return USE_VALUE in meta}(meta)?isUseFactoryProvider(meta)?compilerMeta.useFactory=meta.useFactory:function(meta){return void 0!==meta.useExisting}(meta)&&(compilerMeta.useExisting=meta.useExisting):compilerMeta.useValue=meta.useValue;return compilerMeta}(type,meta))}return ngInjectableDef}}),type.hasOwnProperty(NG_FACTORY_DEF)||Object.defineProperty(type,NG_FACTORY_DEF,{get:()=>{if(null===ngFactoryDef){const compiler=getCompilerFacade({usage:0,kind:"injectable",type:type});ngFactoryDef=compiler.compileFactory(angularCoreDiEnv,`ng:///${type.name}/ɵfac.js`,{name:type.name,type:type,typeArgumentCount:0,deps:reflectDependencies(type),target:compiler.FactoryTarget.Injectable})}return ngFactoryDef},configurable:!0})}const USE_VALUE=getClosureSafeProperty({provide:String,useValue:getClosureSafeProperty});function isUseClassProvider(meta){return void 0!==meta.useClass}function isUseFactoryProvider(meta){return void 0!==meta.useFactory}const Injectable=makeDecorator("Injectable",void 0,void 0,void 0,(type,meta)=>compileInjectable(type,meta));function createInjector(defType,parent=null,additionalProviders=null,name){const injector=createInjectorWithoutInjectorInstances(defType,parent,additionalProviders,name);return injector.resolveInjectorInitializers(),injector}function createInjectorWithoutInjectorInstances(defType,parent=null,additionalProviders=null,name,scopes=new Set){const providers=[additionalProviders||EMPTY_ARRAY,importProvidersFrom(defType)];return name=name||("object"==typeof defType?void 0:stringify(defType)),new R3Injector(providers,parent||getNullInjector(),name||null,scopes)}class Injector{static create(options,parent){if(Array.isArray(options))return createInjector({name:""},parent,options,"");{const name=options.name??"";return createInjector({name:name},options.parent,options.providers,name)}}}function constructResolvingPath(keys){if(keys.length>1){return" ("+function(keys){const res=[];for(let i=0;i<keys.length;++i){if(res.indexOf(keys[i])>-1)return res.push(keys[i]),res;res.push(keys[i])}return res}(keys.slice().reverse()).map(k=>stringify(k.token)).join(" -> ")+")"}return""}function injectionError(injector,key,constructResolvingMessage,originalError){const keys=[key],errMsg=constructResolvingMessage(keys),error=originalError?function(message,originalError){const msg=`${message} caused by: ${originalError instanceof Error?originalError.message:originalError}`,error=Error(msg);return error.ngOriginalError=originalError,error}(errMsg,originalError):Error(errMsg);return error.addKey=addKey,error.keys=keys,error.injectors=[injector],error.constructResolvingMessage=constructResolvingMessage,error.ngOriginalError=originalError,error}function addKey(injector,key){this.injectors.push(injector),this.keys.push(key),this.message=this.constructResolvingMessage(this.keys)}function noAnnotationError(typeOrFunc,params){const signature=[];for(let i=0,ii=params.length;i<ii;i++){const parameter=params[i];parameter&&0!=parameter.length?signature.push(parameter.map(stringify).join(" ")):signature.push("?")}return Error("Cannot resolve all parameters for '"+stringify(typeOrFunc)+"'("+signature.join(", ")+"). Make sure that all the parameters are decorated with Inject or have valid type annotations and that '"+stringify(typeOrFunc)+"' is decorated with Injectable.")}function mixingMultiProvidersWithRegularProvidersError(provider1,provider2){return Error(`Cannot mix multi providers and regular providers, got: ${provider1} ${provider2}`)}Injector.THROW_IF_NOT_FOUND=THROW_IF_NOT_FOUND,Injector.NULL=new NullInjector,Injector.ɵprov=ɵɵdefineInjectable({token:Injector,providedIn:"any",factory:()=>ɵɵinject(INJECTOR)}),Injector.__NG_ELEMENT_ID__=-1;class ReflectiveKey{constructor(token,id){if(this.token=token,this.id=id,!token)throw new RuntimeError(208,ngDevMode&&"Token must be defined!");this.displayName=stringify(this.token)}static get(token){return _globalKeyRegistry.get(resolveForwardRef(token))}static get numberOfKeys(){return _globalKeyRegistry.numberOfKeys}}const _globalKeyRegistry=new class{constructor(){this._allKeys=new Map}get(token){if(token instanceof ReflectiveKey)return token;if(this._allKeys.has(token))return this._allKeys.get(token);const newKey=new ReflectiveKey(token,ReflectiveKey.numberOfKeys);return this._allKeys.set(token,newKey),newKey}get numberOfKeys(){return this._allKeys.size}};class ReflectiveDependency{constructor(key,optional,visibility){this.key=key,this.optional=optional,this.visibility=visibility}static fromKey(key){return new ReflectiveDependency(key,!1,null)}}const _EMPTY_LIST=[];class ResolvedReflectiveProvider_{constructor(key,resolvedFactories,multiProvider){this.key=key,this.resolvedFactories=resolvedFactories,this.multiProvider=multiProvider,this.resolvedFactory=this.resolvedFactories[0]}}class ResolvedReflectiveFactory{constructor(factory,dependencies){this.factory=factory,this.dependencies=dependencies}}function resolveReflectiveFactory(provider){let factoryFn,resolvedDeps;if(provider.useClass){const useClass=resolveForwardRef(provider.useClass);factoryFn=getReflect().factory(useClass),resolvedDeps=_dependenciesFor(useClass)}else provider.useExisting?(factoryFn=aliasInstance=>aliasInstance,resolvedDeps=[ReflectiveDependency.fromKey(ReflectiveKey.get(provider.useExisting))]):provider.useFactory?(factoryFn=provider.useFactory,resolvedDeps=function(typeOrFunc,dependencies){if(dependencies){const params=dependencies.map(t=>[t]);return dependencies.map(t=>_extractToken(typeOrFunc,t,params))}return _dependenciesFor(typeOrFunc)}(provider.useFactory,provider.deps)):(factoryFn=()=>provider.useValue,resolvedDeps=_EMPTY_LIST);return new ResolvedReflectiveFactory(factoryFn,resolvedDeps)}function resolveReflectiveProvider(provider){return new ResolvedReflectiveProvider_(ReflectiveKey.get(provider.provide),[resolveReflectiveFactory(provider)],provider.multi||!1)}function resolveReflectiveProviders(providers){const resolvedProviderMap=function(providers,normalizedProvidersMap){for(let i=0;i<providers.length;i++){const provider=providers[i],existing=normalizedProvidersMap.get(provider.key.id);if(existing){if(provider.multiProvider!==existing.multiProvider)throw mixingMultiProvidersWithRegularProvidersError(existing,provider);if(provider.multiProvider)for(let j=0;j<provider.resolvedFactories.length;j++)existing.resolvedFactories.push(provider.resolvedFactories[j]);else normalizedProvidersMap.set(provider.key.id,provider)}else{let resolvedProvider;resolvedProvider=provider.multiProvider?new ResolvedReflectiveProvider_(provider.key,provider.resolvedFactories.slice(),provider.multiProvider):provider,normalizedProvidersMap.set(provider.key.id,resolvedProvider)}}return normalizedProvidersMap}(_normalizeProviders(providers,[]).map(resolveReflectiveProvider),new Map);return Array.from(resolvedProviderMap.values())}function _normalizeProviders(providers,res){return providers.forEach(b=>{if(b instanceof Type)res.push({provide:b,useClass:b});else if(b&&"object"==typeof b&&void 0!==b.provide)res.push(b);else{if(!Array.isArray(b))throw Error(`Invalid provider - only instances of Provider and Type are allowed, got: ${b}`);_normalizeProviders(b,res)}}),res}function _dependenciesFor(typeOrFunc){const params=getReflect().parameters(typeOrFunc);if(!params)return[];if(params.some(p=>null==p))throw noAnnotationError(typeOrFunc,params);return params.map(p=>_extractToken(typeOrFunc,p,params))}function _extractToken(typeOrFunc,metadata,params){let token=null,optional=!1;if(!Array.isArray(metadata))return _createDependency(metadata instanceof Inject?metadata.token:metadata,optional,null);let visibility=null;for(let i=0;i<metadata.length;++i){const paramMetadata=metadata[i];paramMetadata instanceof Type?token=paramMetadata:paramMetadata instanceof Inject?token=paramMetadata.token:paramMetadata instanceof Optional?optional=!0:paramMetadata instanceof Self||paramMetadata instanceof SkipSelf?visibility=paramMetadata:paramMetadata instanceof InjectionToken&&(token=paramMetadata)}if(token=resolveForwardRef(token),null!=token)return _createDependency(token,optional,visibility);throw noAnnotationError(typeOrFunc,params)}function _createDependency(token,optional,visibility){return new ReflectiveDependency(ReflectiveKey.get(token),optional,visibility)}const UNDEFINED={};class ReflectiveInjector{static resolve(providers){return resolveReflectiveProviders(providers)}static resolveAndCreate(providers,parent){const ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return ReflectiveInjector.fromResolvedProviders(ResolvedReflectiveProviders,parent)}static fromResolvedProviders(providers,parent){return new ReflectiveInjector_(providers,parent)}}class ReflectiveInjector_{constructor(_providers,_parent){this._constructionCounter=0,this._providers=_providers,this.parent=_parent||null;const len=_providers.length;this.keyIds=[],this.objs=[];for(let i=0;i<len;i++)this.keyIds[i]=_providers[i].key.id,this.objs[i]=UNDEFINED}get(token,notFoundValue=THROW_IF_NOT_FOUND){return this._getByKey(ReflectiveKey.get(token),null,notFoundValue)}resolveAndCreateChild(providers){const ResolvedReflectiveProviders=ReflectiveInjector.resolve(providers);return this.createChildFromResolved(ResolvedReflectiveProviders)}createChildFromResolved(providers){const inj=new ReflectiveInjector_(providers);return inj.parent=this,inj}resolveAndInstantiate(provider){return this.instantiateResolved(ReflectiveInjector.resolve([provider])[0])}instantiateResolved(provider){return this._instantiateProvider(provider)}getProviderAtIndex(index){if(index<0||index>=this._providers.length)throw function(index){return Error(`Index ${index} is out-of-bounds.`)}(index);return this._providers[index]}_new(provider){if(this._constructionCounter++>this._getMaxNumberOfObjects())throw injector=this,key=provider.key,injectionError(injector,key,function(keys){return`Cannot instantiate cyclic dependency!${constructResolvingPath(keys)}`});var injector,key;return this._instantiateProvider(provider)}_getMaxNumberOfObjects(){return this.objs.length}_instantiateProvider(provider){if(provider.multiProvider){const res=[];for(let i=0;i<provider.resolvedFactories.length;++i)res[i]=this._instantiate(provider,provider.resolvedFactories[i]);return res}return this._instantiate(provider,provider.resolvedFactories[0])}_instantiate(provider,ResolvedReflectiveFactory){const factory=ResolvedReflectiveFactory.factory;let deps,obj;try{deps=ResolvedReflectiveFactory.dependencies.map(dep=>this._getByReflectiveDependency(dep))}catch(e){throw e.addKey&&e.addKey(this,provider.key),e}try{obj=factory(...deps)}catch(e){throw injector=this,originalException=e,e.stack,key=provider.key,injectionError(injector,key,function(keys){const first=stringify(keys[0].token);return`${originalException.message}: Error during instantiation of ${first}!${constructResolvingPath(keys)}.`},originalException)}var injector,originalException,key;return obj}_getByReflectiveDependency(dep){return this._getByKey(dep.key,dep.visibility,dep.optional?null:THROW_IF_NOT_FOUND)}_getByKey(key,visibility,notFoundValue){return key===ReflectiveInjector_.INJECTOR_KEY?this:visibility instanceof Self?this._getByKeySelf(key,notFoundValue):this._getByKeyDefault(key,notFoundValue,visibility)}_getObjByKeyId(keyId){for(let i=0;i<this.keyIds.length;i++)if(this.keyIds[i]===keyId)return this.objs[i]===UNDEFINED&&(this.objs[i]=this._new(this._providers[i])),this.objs[i];return UNDEFINED}_throwOrNull(key,notFoundValue){if(notFoundValue!==THROW_IF_NOT_FOUND)return notFoundValue;throw function(injector,key){return injectionError(injector,key,function(keys){return`No provider for ${stringify(keys[0].token)}!${constructResolvingPath(keys)}`})}(this,key)}_getByKeySelf(key,notFoundValue){const obj=this._getObjByKeyId(key.id);return obj!==UNDEFINED?obj:this._throwOrNull(key,notFoundValue)}_getByKeyDefault(key,notFoundValue,visibility){let inj;for(inj=visibility instanceof SkipSelf?this.parent:this;inj instanceof ReflectiveInjector_;){const inj_=inj,obj=inj_._getObjByKeyId(key.id);if(obj!==UNDEFINED)return obj;inj=inj_.parent}return null!==inj?inj.get(key.token,notFoundValue):this._throwOrNull(key,notFoundValue)}get displayName(){return`ReflectiveInjector(providers: [${function(injector,fn){const res=[];for(let i=0;i<injector._providers.length;++i)res[i]=fn(injector.getProviderAtIndex(i));return res}(this,b=>" \""+b.key.displayName+"\" ").join(", ")}])`}toString(){return this.displayName}}function ɵɵdirectiveInject(token,flags=InjectFlags.Default){const lView=getLView();if(null===lView)return ngDevMode&&(fn=ɵɵdirectiveInject,ngDevMode&&assertNotEqual(_injectImplementation,fn,"Calling \u0275\u0275inject would cause infinite recursion")),ɵɵinject(token,flags);var fn;return getOrCreateInjectable(getCurrentTNode(),lView,resolveForwardRef(token),flags)}function ɵɵinvalidFactory(){const msg=ngDevMode?"This constructor was not compatible with Dependency Injection.":"invalid";throw new Error(msg)}function createNamedArrayType(name){if(!ngDevMode)throw new Error("Looks like we are in 'prod mode', but we are creating a named Array type, which is wrong! Check your code");try{return newTrustedFunctionForDev("Array",`return class ${name} extends Array{}`)(Array)}catch(e){return Array}}function toTStylingRange(prev,next){return ngDevMode&&assertNumberInRange(prev,0,32767),ngDevMode&&assertNumberInRange(next,0,32767),prev<<17|next<<2}function getTStylingRangePrev(tStylingRange){return ngDevMode&&assertNumber(tStylingRange,"expected number"),tStylingRange>>17&32767}function getTStylingRangePrevDuplicate(tStylingRange){return ngDevMode&&assertNumber(tStylingRange,"expected number"),2==(2&tStylingRange)}function setTStylingRangePrevDuplicate(tStylingRange){return ngDevMode&&assertNumber(tStylingRange,"expected number"),2|tStylingRange}function getTStylingRangeNext(tStylingRange){return ngDevMode&&assertNumber(tStylingRange,"expected number"),(131068&tStylingRange)>>2}function setTStylingRangeNext(tStylingRange,next){return ngDevMode&&assertNumber(tStylingRange,"expected number"),ngDevMode&&assertNumberInRange(next,0,32767),-131069&tStylingRange|next<<2}function getTStylingRangeNextDuplicate(tStylingRange){return ngDevMode&&assertNumber(tStylingRange,"expected number"),1==(1&tStylingRange)}function setTStylingRangeNextDuplicate(tStylingRange){return ngDevMode&&assertNumber(tStylingRange,"expected number"),1|tStylingRange}function attachDebugObject(obj,debug){if(!ngDevMode)throw new Error("This method should be guarded with `ngDevMode` so that it can be tree shaken in production!");Object.defineProperty(obj,"debug",{value:debug,enumerable:!1})}function attachDebugGetter(obj,debugGetter){if(!ngDevMode)throw new Error("This method should be guarded with `ngDevMode` so that it can be tree shaken in production!");Object.defineProperty(obj,"debug",{get:debugGetter,enumerable:!1})}let LVIEW_COMPONENT_CACHE,LVIEW_EMBEDDED_CACHE,LVIEW_ROOT,LVIEW_COMPONENT,LVIEW_EMBEDDED;function cloneToLViewFromTViewBlueprint(tView){return function(type,name){switch(type){case 0:return void 0===LVIEW_ROOT&&(LVIEW_ROOT=new LRootView),LVIEW_ROOT;case 1:if(!ngDevMode||!ngDevMode.namedConstructors)return void 0===LVIEW_COMPONENT&&(LVIEW_COMPONENT=new LComponentView),LVIEW_COMPONENT;void 0===LVIEW_COMPONENT_CACHE&&(LVIEW_COMPONENT_CACHE=new Map);let componentArray=LVIEW_COMPONENT_CACHE.get(name);return void 0===componentArray&&(componentArray=new(createNamedArrayType("LComponentView"+nameSuffix(name))),LVIEW_COMPONENT_CACHE.set(name,componentArray)),componentArray;case 2:if(!ngDevMode||!ngDevMode.namedConstructors)return void 0===LVIEW_EMBEDDED&&(LVIEW_EMBEDDED=new LEmbeddedView),LVIEW_EMBEDDED;void 0===LVIEW_EMBEDDED_CACHE&&(LVIEW_EMBEDDED_CACHE=new Map);let embeddedArray=LVIEW_EMBEDDED_CACHE.get(name);return void 0===embeddedArray&&(embeddedArray=new(createNamedArrayType("LEmbeddedView"+nameSuffix(name))),LVIEW_EMBEDDED_CACHE.set(name,embeddedArray)),embeddedArray;}}(tView.type,tView.template&&tView.template.name).concat(tView.blueprint)}ReflectiveInjector_.INJECTOR_KEY=ReflectiveKey.get(Injector);class LRootView extends Array{}class LComponentView extends Array{}class LEmbeddedView extends Array{}function nameSuffix(text){if(null==text)return"";const index=text.lastIndexOf("_Template");return"_"+(-1===index?text:text.slice(0,index))}const TNodeDebug=class{constructor(tView_,type,index,insertBeforeIndex,injectorIndex,directiveStart,directiveEnd,directiveStylingLast,propertyBindings,flags,providerIndexes,value,attrs,mergedAttrs,localNames,initialInputs,inputs,outputs,tViews,next,projectionNext,child,parent,projection,styles,stylesWithoutHost,residualStyles,classes,classesWithoutHost,residualClasses,classBindings,styleBindings){this.tView_=tView_,this.type=type,this.index=index,this.insertBeforeIndex=insertBeforeIndex,this.injectorIndex=injectorIndex,this.directiveStart=directiveStart,this.directiveEnd=directiveEnd,this.directiveStylingLast=directiveStylingLast,this.propertyBindings=propertyBindings,this.flags=flags,this.providerIndexes=providerIndexes,this.value=value,this.attrs=attrs,this.mergedAttrs=mergedAttrs,this.localNames=localNames,this.initialInputs=initialInputs,this.inputs=inputs,this.outputs=outputs,this.tViews=tViews,this.next=next,this.projectionNext=projectionNext,this.child=child,this.parent=parent,this.projection=projection,this.styles=styles,this.stylesWithoutHost=stylesWithoutHost,this.residualStyles=residualStyles,this.classes=classes,this.classesWithoutHost=classesWithoutHost,this.residualClasses=residualClasses,this.classBindings=classBindings,this.styleBindings=styleBindings}debugNodeInjectorPath(lView){const path=[];let injectorIndex=getInjectorIndex(this,lView);if(-1===injectorIndex){const parentLocation=getParentInjectorLocation(this,lView);-1!==parentLocation&&(injectorIndex=getParentInjectorIndex(parentLocation),lView=getParentInjectorView(parentLocation,lView))}for(;-1!==injectorIndex;){ngDevMode&&assertNodeInjector(lView,injectorIndex);const tNode=lView[1].data[injectorIndex+8];path.push(buildDebugNode(tNode,lView));const parentLocation=lView[injectorIndex+8];-1===parentLocation?injectorIndex=-1:(injectorIndex=getParentInjectorIndex(parentLocation),lView=getParentInjectorView(parentLocation,lView))}return path}get type_(){return toTNodeTypeAsString(this.type)||`TNodeType.?${this.type}?`}get flags_(){const flags=[];return 16&this.flags&&flags.push("TNodeFlags.hasClassInput"),8&this.flags&&flags.push("TNodeFlags.hasContentQuery"),32&this.flags&&flags.push("TNodeFlags.hasStyleInput"),128&this.flags&&flags.push("TNodeFlags.hasHostBindings"),2&this.flags&&flags.push("TNodeFlags.isComponentHost"),1&this.flags&&flags.push("TNodeFlags.isDirectiveHost"),64&this.flags&&flags.push("TNodeFlags.isDetached"),4&this.flags&&flags.push("TNodeFlags.isProjected"),flags.join("|")}get template_(){if(1&this.type)return this.value;const buf=[],tagName="string"==typeof this.value&&this.value||this.type_;if(buf.push("<",tagName),this.flags&&buf.push(" ",this.flags_),this.attrs)for(let i=0;i<this.attrs.length;){const attrName=this.attrs[i++];if("number"==typeof attrName)break;const attrValue=this.attrs[i++];buf.push(" ",attrName,"=\"",attrValue,"\"")}return buf.push(">"),processTNodeChildren(this.child,buf),buf.push("</",tagName,">"),buf.join("")}get styleBindings_(){return toDebugStyleBinding(this,!1)}get classBindings_(){return toDebugStyleBinding(this,!0)}get providerIndexStart_(){return 1048575&this.providerIndexes}get providerIndexEnd_(){return this.providerIndexStart_+(this.providerIndexes>>>20)}};function toDebugStyleBinding(tNode,isClassBased){const tData=tNode.tView_.data,bindings=[],range=isClassBased?tNode.classBindings:tNode.styleBindings,prev=getTStylingRangePrev(range),next=getTStylingRangeNext(range);let isTemplate=0!==next,cursor=isTemplate?next:prev;for(;0!==cursor;){const itemKey=tData[cursor],itemRange=tData[cursor+1];bindings.unshift({key:itemKey,index:cursor,isTemplate:isTemplate,prevDuplicate:getTStylingRangePrevDuplicate(itemRange),nextDuplicate:getTStylingRangeNextDuplicate(itemRange),nextIndex:getTStylingRangeNext(itemRange),prevIndex:getTStylingRangePrev(itemRange)}),cursor===prev&&(isTemplate=!1),cursor=getTStylingRangePrev(itemRange)}return bindings.push((isClassBased?tNode.residualClasses:tNode.residualStyles)||null),bindings}function processTNodeChildren(tNode,buf){for(;tNode;)buf.push(tNode.template_),tNode=tNode.next}class TViewData extends Array{}let TVIEWDATA_EMPTY;class LViewBlueprint extends Array{}class MatchesArray extends Array{}class TViewComponents extends Array{}class TNodeLocalNames extends Array{}class TNodeInitialInputs extends Array{}class LCleanup extends Array{}class TCleanup extends Array{}function toDebug(obj){if(obj){const debug=obj.debug;return assertDefined(debug,"Object does not have a debug representation."),debug}return obj}function toHtml(value,includeChildren=!1){const node=unwrapRNode(value);if(node)switch(node.nodeType){case Node.TEXT_NODE:return node.textContent;case Node.COMMENT_NODE:return`\x3c!--${node.textContent}--\x3e`;case Node.ELEMENT_NODE:const outerHTML=node.outerHTML;if(includeChildren)return outerHTML;{const innerHTML=">"+node.innerHTML+"<";return outerHTML.split(innerHTML)[0]+">"}}return null}class LViewDebug{constructor(_raw_lView){this._raw_lView=_raw_lView}get flags(){const flags=this._raw_lView[2];return{__raw__flags__:flags,initPhaseState:3&flags,creationMode:!!(4&flags),firstViewPass:!!(8&flags),checkAlways:!!(16&flags),dirty:!!(32&flags),attached:!!(64&flags),destroyed:!!(128&flags),isRoot:!!(256&flags),indexWithinInitPhase:flags>>11}}get parent(){return toDebug(this._raw_lView[3])}get hostHTML(){return toHtml(this._raw_lView[0],!0)}get html(){return(this.nodes||[]).map(mapToHTML).join("")}get context(){return this._raw_lView[8]}get nodes(){const lView=this._raw_lView;return toDebugNodes(lView[1].firstChild,lView)}get template(){return this.tView.template_}get tView(){return this._raw_lView[1]}get cleanup(){return this._raw_lView[7]}get injector(){return this._raw_lView[9]}get rendererFactory(){return this._raw_lView[10]}get renderer(){return this._raw_lView[11]}get sanitizer(){return this._raw_lView[12]}get childHead(){return toDebug(this._raw_lView[13])}get next(){return toDebug(this._raw_lView[4])}get childTail(){return toDebug(this._raw_lView[14])}get declarationView(){return toDebug(this._raw_lView[15])}get queries(){return this._raw_lView[19]}get tHost(){return this._raw_lView[6]}get id(){return this._raw_lView[20]}get decls(){return toLViewRange(this.tView,this._raw_lView,22,this.tView.bindingStartIndex)}get vars(){return toLViewRange(this.tView,this._raw_lView,this.tView.bindingStartIndex,this.tView.expandoStartIndex)}get expando(){return toLViewRange(this.tView,this._raw_lView,this.tView.expandoStartIndex,this._raw_lView.length)}get childViews(){const childViews=[];let child=this.childHead;for(;child;)childViews.push(child),child=child.next;return childViews}}function mapToHTML(node){if("ElementContainer"===node.type)return(node.children||[]).map(mapToHTML).join("");if("IcuContainer"===node.type)throw new Error("Not implemented");return toHtml(node.native,!0)||""}function toLViewRange(tView,lView,start,end){let content=[];for(let index=start;index<end;index++)content.push({index:index,t:tView.data[index],l:lView[index]});return{start:start,end:end,length:end-start,content:content}}function toDebugNodes(tNode,lView){if(tNode){const debugNodes=[];let tNodeCursor=tNode;for(;tNodeCursor;)debugNodes.push(buildDebugNode(tNodeCursor,lView)),tNodeCursor=tNodeCursor.next;return debugNodes}return[]}function buildDebugNode(tNode,lView){const native=unwrapRNode(lView[tNode.index]),factories=[],instances=[],tView=lView[1];for(let i=tNode.directiveStart;i<tNode.directiveEnd;i++){const def=tView.data[i];factories.push(def.type),instances.push(lView[i])}return{html:toHtml(native),type:toTNodeTypeAsString(tNode.type),tNode:tNode,native:native,children:toDebugNodes(tNode.child,lView),factories:factories,instances:instances,injector:buildNodeInjectorDebug(tNode,tView,lView),get injectorResolutionPath(){return tNode.debugNodeInjectorPath(lView)}}}function buildNodeInjectorDebug(tNode,tView,lView){const viewProviders=[];for(let i=tNode.providerIndexStart_;i<tNode.providerIndexEnd_;i++)viewProviders.push(tView.data[i]);const providers=[];for(let i=tNode.providerIndexEnd_;i<tNode.directiveEnd;i++)providers.push(tView.data[i]);return{bloom:toBloom(lView,tNode.injectorIndex),cumulativeBloom:toBloom(tView.data,tNode.injectorIndex),providers:providers,viewProviders:viewProviders,parentInjectorIndex:lView[tNode.providerIndexStart_-1]}}function binary(array,idx){const value=array[idx];if("number"!=typeof value)return"????????";const text="00000000"+value.toString(2);return text.substring(text.length-8)}function toBloom(array,idx){return idx<0?"NO_NODE_INJECTOR":`${binary(array,idx+7)}_${binary(array,idx+6)}_${binary(array,idx+5)}_${binary(array,idx+4)}_${binary(array,idx+3)}_${binary(array,idx+2)}_${binary(array,idx+1)}_${binary(array,idx+0)}`}class LContainerDebug{constructor(_raw_lContainer){this._raw_lContainer=_raw_lContainer}get hasTransplantedViews(){return this._raw_lContainer[2]}get views(){return this._raw_lContainer.slice(10).map(toDebug)}get parent(){return toDebug(this._raw_lContainer[3])}get movedViews(){return this._raw_lContainer[9]}get host(){return this._raw_lContainer[0]}get native(){return this._raw_lContainer[7]}get next(){return toDebug(this._raw_lContainer[4])}}function refreshContentQueries(tView,lView){const contentQueries=tView.contentQueries;if(null!==contentQueries)for(let i=0;i<contentQueries.length;i+=2){const queryStartIdx=contentQueries[i],directiveDefIdx=contentQueries[i+1];if(-1!==directiveDefIdx){const directiveDef=tView.data[directiveDefIdx];ngDevMode&&assertDefined(directiveDef,"DirectiveDef not found."),ngDevMode&&assertDefined(directiveDef.contentQueries,"contentQueries function should be defined"),setCurrentQueryIndex(queryStartIdx),directiveDef.contentQueries(2,lView[directiveDefIdx],directiveDefIdx)}}}function createLView(parentLView,tView,context,flags,host,tHostNode,rendererFactory,renderer,sanitizer,injector,embeddedViewInjector){const lView=ngDevMode?cloneToLViewFromTViewBlueprint(tView):tView.blueprint.slice();return lView[0]=host,lView[2]=76|flags,(null!==embeddedViewInjector||parentLView&&1024&parentLView[2])&&(lView[2]|=1024),resetPreOrderHookFlags(lView),ngDevMode&&tView.declTNode&&parentLView&&assertTNodeForLView(tView.declTNode,parentLView),lView[3]=lView[15]=parentLView,lView[8]=context,lView[10]=rendererFactory||parentLView&&parentLView[10],ngDevMode&&assertDefined(lView[10],"RendererFactory is required"),lView[11]=renderer||parentLView&&parentLView[11],ngDevMode&&assertDefined(lView[11],"Renderer is required"),lView[12]=sanitizer||parentLView&&parentLView[12]||null,lView[9]=injector||parentLView&&parentLView[9]||null,lView[6]=tHostNode,lView[20]=uniqueIdCounter++,lView[21]=embeddedViewInjector,ngDevMode&&assertEqual(2!=tView.type||null!==parentLView,!0,"Embedded views must have parentLView"),lView[16]=2==tView.type?parentLView[16]:lView,ngDevMode&&function(lView){attachDebugObject(lView,new LViewDebug(lView))}(lView),lView}function getOrCreateTNode(tView,index,type,name,attrs){ngDevMode&&0!==index&&assertGreaterThanOrEqual(index,22,"TNodes can't be in the LView header."),ngDevMode&&function(type){2!==type&&1!==type&&4!==type&&8!==type&&32!==type&&16!==type&&64!==type&&throwError(`Expected TNodeType to have only a single type selected, but got ${toTNodeTypeAsString(type)}.`)}(type);let tNode=tView.data[index];if(null===tNode)tNode=createTNodeAtIndex(tView,index,type,name,attrs),instructionState.lFrame.inI18n&&(tNode.flags|=64);else if(64&tNode.type){tNode.type=type,tNode.value=name,tNode.attrs=attrs;const parent=getCurrentParentTNode();tNode.injectorIndex=null===parent?-1:parent.injectorIndex,ngDevMode&&assertTNodeForTView(tNode,tView),ngDevMode&&assertEqual(index,tNode.index,"Expecting same index")}return setCurrentTNode(tNode,!0),tNode}function createTNodeAtIndex(tView,index,type,name,attrs){const currentTNode=getCurrentTNodePlaceholderOk(),isParent=isCurrentTNodeParent(),parent=isParent?currentTNode:currentTNode&&currentTNode.parent,tNode=tView.data[index]=function(tView,tParent,type,index,value,attrs){ngDevMode&&0!==index&&assertGreaterThanOrEqual(index,22,"TNodes can't be in the LView header."),ngDevMode&&assertNotSame(attrs,void 0,"'undefined' is not valid value for 'attrs'"),ngDevMode&&ngDevMode.tNode++,ngDevMode&&tParent&&assertTNodeForTView(tParent,tView);let injectorIndex=tParent?tParent.injectorIndex:-1;const tNode=ngDevMode?new TNodeDebug(tView,type,index,null,injectorIndex,-1,-1,-1,null,0,0,value,attrs,null,null,void 0,null,null,null,null,null,null,tParent,null,null,null,void 0,null,null,void 0,0,0):{type:type,index:index,insertBeforeIndex:null,injectorIndex:injectorIndex,directiveStart:-1,directiveEnd:-1,directiveStylingLast:-1,propertyBindings:null,flags:0,providerIndexes:0,value:value,attrs:attrs,mergedAttrs:null,localNames:null,initialInputs:void 0,inputs:null,outputs:null,tViews:null,next:null,projectionNext:null,child:null,parent:tParent,projection:null,styles:null,stylesWithoutHost:null,residualStyles:void 0,classes:null,classesWithoutHost:null,residualClasses:void 0,classBindings:0,styleBindings:0};ngDevMode&&Object.seal(tNode);return tNode}(tView,parent,type,index,name,attrs);return null===tView.firstChild&&(tView.firstChild=tNode),null!==currentTNode&&(isParent?null==currentTNode.child&&null!==tNode.parent&&(currentTNode.child=tNode):null===currentTNode.next&&(currentTNode.next=tNode)),tNode}function allocExpando(tView,lView,numSlotsToAlloc,initialValue){if(0===numSlotsToAlloc)return-1;ngDevMode&&(assertFirstCreatePass(tView),assertSame(tView,lView[1],"`LView` must be associated with `TView`!"),assertEqual(tView.data.length,lView.length,"Expecting LView to be same size as TView"),assertEqual(tView.data.length,tView.blueprint.length,"Expecting Blueprint to be same size as TView"),assertFirstUpdatePass(tView));const allocIdx=lView.length;for(let i=0;i<numSlotsToAlloc;i++)lView.push(initialValue),tView.blueprint.push(initialValue),tView.data.push(null);return allocIdx}function renderView(tView,lView,context){ngDevMode&&assertEqual(isCreationMode(lView),!0,"Should be run in creation mode"),enterView(lView);try{const viewQuery=tView.viewQuery;null!==viewQuery&&executeViewQueryFn(1,viewQuery,context);const templateFn=tView.template;null!==templateFn&&executeTemplate(tView,lView,templateFn,1,context),tView.firstCreatePass&&(tView.firstCreatePass=!1),tView.staticContentQueries&&refreshContentQueries(tView,lView),tView.staticViewQueries&&executeViewQueryFn(2,tView.viewQuery,context);const components=tView.components;null!==components&&function(hostLView,components){for(let i=0;i<components.length;i++)renderComponent(hostLView,components[i])}(lView,components)}catch(error){throw tView.firstCreatePass&&(tView.incompleteFirstPass=!0,tView.firstCreatePass=!1),error}finally{lView[2]&=-5,leaveView()}}function refreshView(tView,lView,templateFn,context){ngDevMode&&assertEqual(isCreationMode(lView),!1,"Should be run in update mode");const flags=lView[2];if(128==(128&flags))return;enterView(lView);const isInCheckNoChangesPass=ngDevMode&&isInCheckNoChangesMode();try{resetPreOrderHookFlags(lView),setBindingIndex(tView.bindingStartIndex),null!==templateFn&&executeTemplate(tView,lView,templateFn,2,context);const hooksInitPhaseCompleted=3==(3&flags);if(!isInCheckNoChangesPass)if(hooksInitPhaseCompleted){const preOrderCheckHooks=tView.preOrderCheckHooks;null!==preOrderCheckHooks&&executeCheckHooks(lView,preOrderCheckHooks,null)}else{const preOrderHooks=tView.preOrderHooks;null!==preOrderHooks&&executeInitAndCheckHooks(lView,preOrderHooks,0,null),incrementInitPhaseFlags(lView,0)}if(function(lView){for(let lContainer=getFirstLContainer(lView);null!==lContainer;lContainer=getNextLContainer(lContainer)){if(!lContainer[2])continue;const movedViews=lContainer[9];ngDevMode&&assertDefined(movedViews,"Transplanted View flags set but missing MOVED_VIEWS");for(let i=0;i<movedViews.length;i++){const movedLView=movedViews[i],insertionLContainer=movedLView[3];ngDevMode&&assertLContainer(insertionLContainer),0==(512&movedLView[2])&&updateTransplantedViewCount(insertionLContainer,1),movedLView[2]|=512}}}(lView),function(lView){for(let lContainer=getFirstLContainer(lView);null!==lContainer;lContainer=getNextLContainer(lContainer))for(let i=10;i<lContainer.length;i++){const embeddedLView=lContainer[i],embeddedTView=embeddedLView[1];ngDevMode&&assertDefined(embeddedTView,"TView must be allocated"),viewAttachedToChangeDetector(embeddedLView)&&refreshView(embeddedTView,embeddedLView,embeddedTView.template,embeddedLView[8])}}(lView),null!==tView.contentQueries&&refreshContentQueries(tView,lView),!isInCheckNoChangesPass)if(hooksInitPhaseCompleted){const contentCheckHooks=tView.contentCheckHooks;null!==contentCheckHooks&&executeCheckHooks(lView,contentCheckHooks)}else{const contentHooks=tView.contentHooks;null!==contentHooks&&executeInitAndCheckHooks(lView,contentHooks,1),incrementInitPhaseFlags(lView,1)}!function(tView,lView){const hostBindingOpCodes=tView.hostBindingOpCodes;if(null!==hostBindingOpCodes)try{for(let i=0;i<hostBindingOpCodes.length;i++){const opCode=hostBindingOpCodes[i];if(opCode<0)setSelectedIndex(~opCode);else{const directiveIdx=opCode,bindingRootIndx=hostBindingOpCodes[++i],hostBindingFn=hostBindingOpCodes[++i];setBindingRootForHostBindings(bindingRootIndx,directiveIdx),hostBindingFn(2,lView[directiveIdx])}}}finally{setSelectedIndex(-1)}}(tView,lView);const components=tView.components;null!==components&&function(hostLView,components){for(let i=0;i<components.length;i++)refreshComponent(hostLView,components[i])}(lView,components);const viewQuery=tView.viewQuery;if(null!==viewQuery&&executeViewQueryFn(2,viewQuery,context),!isInCheckNoChangesPass)if(hooksInitPhaseCompleted){const viewCheckHooks=tView.viewCheckHooks;null!==viewCheckHooks&&executeCheckHooks(lView,viewCheckHooks)}else{const viewHooks=tView.viewHooks;null!==viewHooks&&executeInitAndCheckHooks(lView,viewHooks,2),incrementInitPhaseFlags(lView,2)}!0===tView.firstUpdatePass&&(tView.firstUpdatePass=!1),isInCheckNoChangesPass||(lView[2]&=-41),512&lView[2]&&(lView[2]&=-513,updateTransplantedViewCount(lView[3],-1))}finally{leaveView()}}function executeTemplate(tView,lView,templateFn,rf,context){const prevSelectedIndex=getSelectedIndex(),isUpdatePhase=2&rf;try{setSelectedIndex(-1),isUpdatePhase&&lView.length>22&&selectIndexInternal(tView,lView,22,!!ngDevMode&&isInCheckNoChangesMode());profiler(isUpdatePhase?2:0,context),templateFn(rf,context)}finally{setSelectedIndex(prevSelectedIndex);profiler(isUpdatePhase?3:1,context)}}function executeContentQueries(tView,tNode,lView){if(isContentQueryHost(tNode)){const start=tNode.directiveStart,end=tNode.directiveEnd;for(let directiveIndex=start;directiveIndex<end;directiveIndex++){const def=tView.data[directiveIndex];def.contentQueries&&def.contentQueries(1,lView[directiveIndex],directiveIndex)}}}function createDirectivesInstances(tView,lView,tNode){getBindingsEnabled()&&(function(tView,lView,tNode,native){const start=tNode.directiveStart,end=tNode.directiveEnd;tView.firstCreatePass||getOrCreateNodeInjectorForNode(tNode,lView);attachPatchData(native,lView);const initialInputs=tNode.initialInputs;for(let i=start;i<end;i++){const def=tView.data[i],isComponent=isComponentDef(def);isComponent&&(ngDevMode&&assertTNodeType(tNode,3),addComponentLogic(lView,tNode,def));const directive=getNodeInjectable(lView,tView,i,tNode);if(attachPatchData(directive,lView),null!==initialInputs&&setInputsFromAttrs(lView,i-start,directive,def,tNode,initialInputs),isComponent){getComponentLViewByIndex(tNode.index,lView)[8]=directive}}}(tView,lView,tNode,getNativeByTNode(tNode,lView)),128==(128&tNode.flags)&&function(tView,lView,tNode){const start=tNode.directiveStart,end=tNode.directiveEnd,elementIndex=tNode.index,currentDirectiveIndex=instructionState.lFrame.currentDirectiveIndex;try{setSelectedIndex(elementIndex);for(let dirIndex=start;dirIndex<end;dirIndex++){const def=tView.data[dirIndex],directive=lView[dirIndex];setCurrentDirectiveIndex(dirIndex),null===def.hostBindings&&0===def.hostVars&&null===def.hostAttrs||invokeHostBindingsInCreationMode(def,directive)}}finally{setSelectedIndex(-1),setCurrentDirectiveIndex(currentDirectiveIndex)}}(tView,lView,tNode))}function saveResolvedLocalsInData(viewData,tNode,localRefExtractor=getNativeByTNode){const localNames=tNode.localNames;if(null!==localNames){let localIndex=tNode.index+1;for(let i=0;i<localNames.length;i+=2){const index=localNames[i+1],value=-1===index?localRefExtractor(tNode,viewData):viewData[index];viewData[localIndex++]=value}}}function getOrCreateComponentTView(def){const tView=def.tView;if(null===tView||tView.incompleteFirstPass){const declTNode=null;return def.tView=createTView(1,declTNode,def.template,def.decls,def.vars,def.directiveDefs,def.pipeDefs,def.viewQuery,def.schemas,def.consts)}return tView}function createTView(type,declTNode,templateFn,decls,vars,directives,pipes,viewQuery,schemas,constsOrFactory){ngDevMode&&ngDevMode.tView++;const bindingStartIndex=22+decls,initialViewLength=bindingStartIndex+vars,blueprint=function(bindingStartIndex,initialViewLength){const blueprint=ngDevMode?new LViewBlueprint:[];for(let i=0;i<initialViewLength;i++)blueprint.push(i<bindingStartIndex?null:NO_CHANGE);return blueprint}(bindingStartIndex,initialViewLength),consts="function"==typeof constsOrFactory?constsOrFactory():constsOrFactory,tView=blueprint[1]=ngDevMode?new class{constructor(type,blueprint,template,queries,viewQuery,declTNode,data,bindingStartIndex,expandoStartIndex,hostBindingOpCodes,firstCreatePass,firstUpdatePass,staticViewQueries,staticContentQueries,preOrderHooks,preOrderCheckHooks,contentHooks,contentCheckHooks,viewHooks,viewCheckHooks,destroyHooks,cleanup,contentQueries,components,directiveRegistry,pipeRegistry,firstChild,schemas,consts,incompleteFirstPass,_decls,_vars){this.type=type,this.blueprint=blueprint,this.template=template,this.queries=queries,this.viewQuery=viewQuery,this.declTNode=declTNode,this.data=data,this.bindingStartIndex=bindingStartIndex,this.expandoStartIndex=expandoStartIndex,this.hostBindingOpCodes=hostBindingOpCodes,this.firstCreatePass=firstCreatePass,this.firstUpdatePass=firstUpdatePass,this.staticViewQueries=staticViewQueries,this.staticContentQueries=staticContentQueries,this.preOrderHooks=preOrderHooks,this.preOrderCheckHooks=preOrderCheckHooks,this.contentHooks=contentHooks,this.contentCheckHooks=contentCheckHooks,this.viewHooks=viewHooks,this.viewCheckHooks=viewCheckHooks,this.destroyHooks=destroyHooks,this.cleanup=cleanup,this.contentQueries=contentQueries,this.components=components,this.directiveRegistry=directiveRegistry,this.pipeRegistry=pipeRegistry,this.firstChild=firstChild,this.schemas=schemas,this.consts=consts,this.incompleteFirstPass=incompleteFirstPass,this._decls=_decls,this._vars=_vars}get template_(){const buf=[];return processTNodeChildren(this.firstChild,buf),buf.join("")}get type_(){return TViewTypeAsString[this.type]||`TViewType.?${this.type}?`}}(type,blueprint,templateFn,null,viewQuery,declTNode,(list=blueprint,void 0===TVIEWDATA_EMPTY&&(TVIEWDATA_EMPTY=new TViewData),TVIEWDATA_EMPTY.concat(list)).fill(null,bindingStartIndex),bindingStartIndex,initialViewLength,null,!0,!0,!1,!1,null,null,null,null,null,null,null,null,null,null,"function"==typeof directives?directives():directives,"function"==typeof pipes?pipes():pipes,null,schemas,consts,!1,decls,vars):{type:type,blueprint:blueprint,template:templateFn,queries:null,viewQuery:viewQuery,declTNode:declTNode,data:blueprint.slice().fill(null,bindingStartIndex),bindingStartIndex:bindingStartIndex,expandoStartIndex:initialViewLength,hostBindingOpCodes:null,firstCreatePass:!0,firstUpdatePass:!0,staticViewQueries:!1,staticContentQueries:!1,preOrderHooks:null,preOrderCheckHooks:null,contentHooks:null,contentCheckHooks:null,viewHooks:null,viewCheckHooks:null,destroyHooks:null,cleanup:null,contentQueries:null,components:null,directiveRegistry:"function"==typeof directives?directives():directives,pipeRegistry:"function"==typeof pipes?pipes():pipes,firstChild:null,schemas:schemas,consts:consts,incompleteFirstPass:!1};var list;return ngDevMode&&Object.seal(tView),tView}function storeCleanupWithContext(tView,lView,context,cleanupFn){const lCleanup=getOrCreateLViewCleanup(lView);null===context?(ngDevMode&&Object.freeze(getOrCreateTViewCleanup(tView)),lCleanup.push(cleanupFn)):(lCleanup.push(context),tView.firstCreatePass&&getOrCreateTViewCleanup(tView).push(cleanupFn,lCleanup.length-1))}function generatePropertyAliases(inputAliasMap,directiveDefIdx,propStore){for(let publicName in inputAliasMap)if(inputAliasMap.hasOwnProperty(publicName)){propStore=null===propStore?{}:propStore;const internalName=inputAliasMap[publicName];propStore.hasOwnProperty(publicName)?propStore[publicName].push(directiveDefIdx,internalName):propStore[publicName]=[directiveDefIdx,internalName]}return propStore}function initializeInputAndOutputAliases(tView,tNode){ngDevMode&&assertFirstCreatePass(tView);const start=tNode.directiveStart,end=tNode.directiveEnd,tViewData=tView.data,tNodeAttrs=tNode.attrs,inputsFromAttrs=ngDevMode?new TNodeInitialInputs:[];let inputsStore=null,outputsStore=null;for(let i=start;i<end;i++){const directiveDef=tViewData[i],directiveInputs=directiveDef.inputs,initialInputs=null===tNodeAttrs||isInlineTemplate(tNode)?null:generateInitialInputs(directiveInputs,tNodeAttrs);inputsFromAttrs.push(initialInputs),inputsStore=generatePropertyAliases(directiveInputs,i,inputsStore),outputsStore=generatePropertyAliases(directiveDef.outputs,i,outputsStore)}null!==inputsStore&&(inputsStore.hasOwnProperty("class")&&(tNode.flags|=16),inputsStore.hasOwnProperty("style")&&(tNode.flags|=32)),tNode.initialInputs=inputsFromAttrs,tNode.inputs=inputsStore,tNode.outputs=outputsStore}function elementPropertyInternal(tView,tNode,lView,propName,value,renderer,sanitizer,nativeOnly){ngDevMode&&assertNotSame(value,NO_CHANGE,"Incoming value should never be NO_CHANGE.");const element=getNativeByTNode(tNode,lView);let dataValue,inputData=tNode.inputs;var name;!nativeOnly&&null!=inputData&&(dataValue=inputData[propName])?(setInputsForProperty(tView,lView,dataValue,propName,value),isComponentHost(tNode)&&markDirtyIfOnPush(lView,tNode.index),ngDevMode&&function(lView,element,type,dataValue,value){if(7&type)for(let i=0;i<dataValue.length;i+=2)setNgReflectProperty(lView,element,type,dataValue[i+1],value)}(lView,element,tNode.type,dataValue,value)):3&tNode.type?(propName="class"===(name=propName)?"className":"for"===name?"htmlFor":"formaction"===name?"formAction":"innerHtml"===name?"innerHTML":"readonly"===name?"readOnly":"tabindex"===name?"tabIndex":name,ngDevMode&&(!function(name){if(name.toLowerCase().startsWith("on")){const errorMessage=`Binding to event property '${name}' is disallowed for security reasons, please use (${name.slice(2)})=...\nIf '${name}' is a directive input, make sure the directive is imported by the current module.`;throw new RuntimeError(306,errorMessage)}}(propName),function(element,propName,tagName,schemas){return!(null!==schemas&&!(matchingSchemas(schemas,tagName)||propName in element||isAnimationProp(propName))&&"undefined"!=typeof Node&&null!==Node&&element instanceof Node)}(element,propName,tNode.value,tView.schemas)||handleUnknownPropertyError(propName,tNode.value,tNode.type,lView),ngDevMode.rendererSetProperty++),value=null!=sanitizer?sanitizer(value,tNode.value||"",propName):value,renderer.setProperty(element,propName,value)):12&tNode.type&&ngDevMode&&!matchingSchemas(tView.schemas,tNode.value)&&handleUnknownPropertyError(propName,tNode.value,tNode.type,lView)}function markDirtyIfOnPush(lView,viewIndex){ngDevMode&&assertLView(lView);const childComponentLView=getComponentLViewByIndex(viewIndex,lView);16&childComponentLView[2]||(childComponentLView[2]|=32)}function setNgReflectProperty(lView,element,type,attrName,value){const renderer=lView[11];attrName=normalizeDebugBindingName(attrName);const debugValue=function(value){try{return null!=value?value.toString().slice(0,30):value}catch(e){return"[ERROR] Exception while trying to serialize the value"}}(value);if(3&type)null==value?renderer.removeAttribute(element,attrName):renderer.setAttribute(element,attrName,debugValue);else{const textContent=escapeCommentText(`bindings=${JSON.stringify({[attrName]:debugValue},null,2)}`);renderer.setValue(element,textContent)}}function resolveDirectives(tView,lView,tNode,localRefs){ngDevMode&&assertFirstCreatePass(tView);let hasDirectives=!1;if(getBindingsEnabled()){const directiveDefs=function(tView,viewData,tNode){ngDevMode&&assertFirstCreatePass(tView),ngDevMode&&assertTNodeType(tNode,15);const registry=tView.directiveRegistry;let matches=null;if(registry)for(let i=0;i<registry.length;i++){const def=registry[i];isNodeMatchingSelectorList(tNode,def.selectors,!1)&&(matches||(matches=ngDevMode?new MatchesArray:[]),diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,viewData),tView,def.type),isComponentDef(def)?(ngDevMode&&(assertTNodeType(tNode,2,`"${tNode.value}" tags cannot be used as component hosts. Please use a different tag to activate the ${stringify(def.type)} component.`),2&tNode.flags&&throwMultipleComponentError(tNode,matches[0].type,def.type)),markAsComponentHost(tView,tNode),matches.unshift(def)):matches.push(def))}return matches}(tView,lView,tNode),exportsMap=null===localRefs?null:{"":-1};if(null!==directiveDefs){hasDirectives=!0,initTNodeFlags(tNode,tView.data.length,directiveDefs.length);for(let i=0;i<directiveDefs.length;i++){const def=directiveDefs[i];def.providersResolver&&def.providersResolver(def)}let preOrderHooksFound=!1,preOrderCheckHooksFound=!1,directiveIdx=allocExpando(tView,lView,directiveDefs.length,null);ngDevMode&&assertSame(directiveIdx,tNode.directiveStart,"TNode.directiveStart should point to just allocated space");for(let i=0;i<directiveDefs.length;i++){const def=directiveDefs[i];tNode.mergedAttrs=mergeHostAttrs(tNode.mergedAttrs,def.hostAttrs),configureViewWithDirective(tView,tNode,lView,directiveIdx,def),saveNameToExportMap(directiveIdx,def,exportsMap),null!==def.contentQueries&&(tNode.flags|=8),null===def.hostBindings&&null===def.hostAttrs&&0===def.hostVars||(tNode.flags|=128);const lifeCycleHooks=def.type.prototype;!preOrderHooksFound&&(lifeCycleHooks.ngOnChanges||lifeCycleHooks.ngOnInit||lifeCycleHooks.ngDoCheck)&&((tView.preOrderHooks||(tView.preOrderHooks=[])).push(tNode.index),preOrderHooksFound=!0),preOrderCheckHooksFound||!lifeCycleHooks.ngOnChanges&&!lifeCycleHooks.ngDoCheck||((tView.preOrderCheckHooks||(tView.preOrderCheckHooks=[])).push(tNode.index),preOrderCheckHooksFound=!0),directiveIdx++}initializeInputAndOutputAliases(tView,tNode)}exportsMap&&function(tNode,localRefs,exportsMap){if(localRefs){const localNames=tNode.localNames=ngDevMode?new TNodeLocalNames:[];for(let i=0;i<localRefs.length;i+=2){const index=exportsMap[localRefs[i+1]];if(null==index)throw new RuntimeError(-301,ngDevMode&&`Export of name '${localRefs[i+1]}' not found!`);localNames.push(localRefs[i],index)}}}(tNode,localRefs,exportsMap)}return tNode.mergedAttrs=mergeHostAttrs(tNode.mergedAttrs,tNode.attrs),hasDirectives}function registerHostBindingOpCodes(tView,tNode,lView,directiveIdx,directiveVarsIdx,def){ngDevMode&&assertFirstCreatePass(tView);const hostBindings=def.hostBindings;if(hostBindings){let hostBindingOpCodes=tView.hostBindingOpCodes;null===hostBindingOpCodes&&(hostBindingOpCodes=tView.hostBindingOpCodes=[]);const elementIndx=~tNode.index;(function(hostBindingOpCodes){let i=hostBindingOpCodes.length;for(;i>0;){const value=hostBindingOpCodes[--i];if("number"==typeof value&&value<0)return value}return 0})(hostBindingOpCodes)!=elementIndx&&hostBindingOpCodes.push(elementIndx),hostBindingOpCodes.push(directiveIdx,directiveVarsIdx,hostBindings)}}function invokeHostBindingsInCreationMode(def,directive){null!==def.hostBindings&&def.hostBindings(1,directive)}function markAsComponentHost(tView,hostTNode){ngDevMode&&assertFirstCreatePass(tView),hostTNode.flags|=2,(tView.components||(tView.components=ngDevMode?new TViewComponents:[])).push(hostTNode.index)}function saveNameToExportMap(directiveIdx,def,exportsMap){if(exportsMap){if(def.exportAs)for(let i=0;i<def.exportAs.length;i++)exportsMap[def.exportAs[i]]=directiveIdx;isComponentDef(def)&&(exportsMap[""]=directiveIdx)}}function initTNodeFlags(tNode,index,numberOfDirectives){ngDevMode&&assertNotEqual(numberOfDirectives,tNode.directiveEnd-tNode.directiveStart,"Reached the max number of directives"),tNode.flags|=1,tNode.directiveStart=index,tNode.directiveEnd=index+numberOfDirectives,tNode.providerIndexes=index}function configureViewWithDirective(tView,tNode,lView,directiveIndex,def){ngDevMode&&assertGreaterThanOrEqual(directiveIndex,22,"Must be in Expando section"),tView.data[directiveIndex]=def;const directiveFactory=def.factory||(def.factory=getFactoryDef(def.type,!0)),nodeInjectorFactory=new NodeInjectorFactory(directiveFactory,isComponentDef(def),ɵɵdirectiveInject);tView.blueprint[directiveIndex]=nodeInjectorFactory,lView[directiveIndex]=nodeInjectorFactory,registerHostBindingOpCodes(tView,tNode,0,directiveIndex,allocExpando(tView,lView,def.hostVars,NO_CHANGE),def)}function addComponentLogic(lView,hostTNode,def){const native=getNativeByTNode(hostTNode,lView),tView=getOrCreateComponentTView(def),rendererFactory=lView[10],componentView=addToViewTree(lView,createLView(lView,tView,null,def.onPush?32:16,native,hostTNode,rendererFactory,rendererFactory.createRenderer(native,def),null,null,null));lView[hostTNode.index]=componentView}function elementAttributeInternal(tNode,lView,name,value,sanitizer,namespace){ngDevMode&&(assertNotSame(value,NO_CHANGE,"Incoming value should never be NO_CHANGE."),function(name){if(name.toLowerCase().startsWith("on")){const errorMessage=`Binding to event attribute '${name}' is disallowed for security reasons, please use (${name.slice(2)})=...`;throw new RuntimeError(306,errorMessage)}}(name),assertTNodeType(tNode,2,`Attempted to set attribute \`${name}\` on a container node. Host bindings are not valid on ng-container or ng-template.`));const element=getNativeByTNode(tNode,lView);setElementAttribute(lView[11],element,namespace,tNode.value,name,value,sanitizer)}function setElementAttribute(renderer,element,namespace,tagName,name,value,sanitizer){if(null==value)ngDevMode&&ngDevMode.rendererRemoveAttribute++,renderer.removeAttribute(element,name,namespace);else{ngDevMode&&ngDevMode.rendererSetAttribute++;const strValue=null==sanitizer?renderStringify(value):sanitizer(value,tagName||"",name);renderer.setAttribute(element,name,strValue,namespace)}}function setInputsFromAttrs(lView,directiveIndex,instance,def,tNode,initialInputData){const initialInputs=initialInputData[directiveIndex];if(null!==initialInputs){const setInput=def.setInput;for(let i=0;i<initialInputs.length;){const publicName=initialInputs[i++],privateName=initialInputs[i++],value=initialInputs[i++];if(null!==setInput?def.setInput(instance,value,publicName,privateName):instance[privateName]=value,ngDevMode){setNgReflectProperty(lView,getNativeByTNode(tNode,lView),tNode.type,privateName,value)}}}}function generateInitialInputs(inputs,attrs){let inputsToStore=null,i=0;for(;i<attrs.length;){const attrName=attrs[i];if(0!==attrName){if(5!==attrName){if("number"==typeof attrName)break;inputs.hasOwnProperty(attrName)&&(null===inputsToStore&&(inputsToStore=[]),inputsToStore.push(attrName,inputs[attrName],attrs[i+1])),i+=2}else i+=2;}else i+=4}return inputsToStore}const LContainerArray=class extends Array{};function createLContainer(hostNative,currentView,native,tNode){ngDevMode&&assertLView(currentView);const lContainer=new(ngDevMode?LContainerArray:Array)(hostNative,!0,!1,currentView,null,0,tNode,native,null,null);return ngDevMode&&assertEqual(lContainer.length,10,"Should allocate correct number of slots for LContainer header."),ngDevMode&&function(lContainer){attachDebugObject(lContainer,new LContainerDebug(lContainer))}(lContainer),lContainer}function refreshComponent(hostLView,componentHostIdx){ngDevMode&&assertEqual(isCreationMode(hostLView),!1,"Should be run in update mode");const componentView=getComponentLViewByIndex(componentHostIdx,hostLView);if(viewAttachedToChangeDetector(componentView)){const tView=componentView[1];48&componentView[2]?refreshView(tView,componentView,tView.template,componentView[8]):componentView[5]>0&&refreshContainsDirtyView(componentView)}}function refreshContainsDirtyView(lView){for(let lContainer=getFirstLContainer(lView);null!==lContainer;lContainer=getNextLContainer(lContainer))for(let i=10;i<lContainer.length;i++){const embeddedLView=lContainer[i];if(viewAttachedToChangeDetector(embeddedLView))if(512&embeddedLView[2]){const embeddedTView=embeddedLView[1];ngDevMode&&assertDefined(embeddedTView,"TView must be allocated"),refreshView(embeddedTView,embeddedLView,embeddedTView.template,embeddedLView[8])}else embeddedLView[5]>0&&refreshContainsDirtyView(embeddedLView)}const components=lView[1].components;if(null!==components)for(let i=0;i<components.length;i++){const componentView=getComponentLViewByIndex(components[i],lView);viewAttachedToChangeDetector(componentView)&&componentView[5]>0&&refreshContainsDirtyView(componentView)}}function renderComponent(hostLView,componentHostIdx){ngDevMode&&assertEqual(isCreationMode(hostLView),!0,"Should be run in creation mode");const componentView=getComponentLViewByIndex(componentHostIdx,hostLView),componentTView=componentView[1];!function(tView,lView){for(let i=lView.length;i<tView.blueprint.length;i++)lView.push(tView.blueprint[i])}(componentTView,componentView),renderView(componentTView,componentView,componentView[8])}function addToViewTree(lView,lViewOrLContainer){return lView[13]?lView[14][4]=lViewOrLContainer:lView[13]=lViewOrLContainer,lView[14]=lViewOrLContainer,lViewOrLContainer}function markViewDirty(lView){for(;lView;){lView[2]|=32;const parent=getLViewParent(lView);if(0!=(256&lView[2])&&!parent)return lView;lView=parent}return null}function detectChangesInternal(tView,lView,context,notifyErrorHandler=!0){const rendererFactory=lView[10],checkNoChangesMode=!!ngDevMode&&isInCheckNoChangesMode();!checkNoChangesMode&&rendererFactory.begin&&rendererFactory.begin();try{refreshView(tView,lView,tView.template,context)}catch(error){throw notifyErrorHandler&&handleError(lView,error),error}finally{!checkNoChangesMode&&rendererFactory.end&&rendererFactory.end()}}function checkNoChangesInternal(tView,lView,context,notifyErrorHandler=!0){setIsInCheckNoChangesMode(!0);try{detectChangesInternal(tView,lView,context,notifyErrorHandler)}finally{setIsInCheckNoChangesMode(!1)}}function executeViewQueryFn(flags,viewQueryFn,component){ngDevMode&&assertDefined(viewQueryFn,"View queries function to execute must be defined."),setCurrentQueryIndex(0),viewQueryFn(flags,component)}function storePropertyBindingMetadata(tData,tNode,propertyName,bindingIndex,...interpolationParts){if(null===tData[bindingIndex]&&(null==tNode.inputs||!tNode.inputs[propertyName])){(tNode.propertyBindings||(tNode.propertyBindings=[])).push(bindingIndex);let bindingMetadata=propertyName;interpolationParts.length>0&&(bindingMetadata+="\uFFFD"+interpolationParts.join("\uFFFD")),tData[bindingIndex]=bindingMetadata}}function getOrCreateLViewCleanup(view){return view[7]||(view[7]=ngDevMode?new LCleanup:[])}function getOrCreateTViewCleanup(tView){return tView.cleanup||(tView.cleanup=ngDevMode?new TCleanup:[])}function loadComponentRenderer(currentDef,tNode,lView){return(null===currentDef||isComponentDef(currentDef))&&(lView=function(value){for(;Array.isArray(value);){if("object"==typeof value[1])return value;value=value[0]}return null}(lView[tNode.index])),lView[11]}function handleError(lView,error){const injector=lView[9],errorHandler=injector?injector.get(ErrorHandler,null):null;errorHandler&&errorHandler.handleError(error)}function setInputsForProperty(tView,lView,inputs,publicName,value){for(let i=0;i<inputs.length;){const index=inputs[i++],privateName=inputs[i++],instance=lView[index];ngDevMode&&assertIndexInRange(lView,index);const def=tView.data[index];null!==def.setInput?def.setInput(instance,value,publicName,privateName):instance[privateName]=value}}function textBindingInternal(lView,index,value){ngDevMode&&assertString(value,"Value should be a string"),ngDevMode&&assertNotSame(value,NO_CHANGE,"value should not be NO_CHANGE"),ngDevMode&&assertIndexInRange(lView,index);const element=getNativeByIndex(index,lView);ngDevMode&&assertDefined(element,"native element should exist"),updateTextNode(lView[11],element,value)}function computeStaticStyling(tNode,attrs,writeToHost){ngDevMode&&assertFirstCreatePass(getTView(),"Expecting to be called in first template pass only");let styles=writeToHost?tNode.styles:null,classes=writeToHost?tNode.classes:null,mode=0;if(null!==attrs)for(let i=0;i<attrs.length;i++){const value=attrs[i];if("number"==typeof value)mode=value;else if(1==mode)classes=concatStringsWithSpace(classes,value);else if(2==mode){styles=concatStringsWithSpace(styles,value+": "+attrs[++i]+";")}}writeToHost?tNode.styles=styles:tNode.stylesWithoutHost=styles,writeToHost?tNode.classes=classes:tNode.classesWithoutHost=classes}function collectNativeNodes(tView,lView,tNode,result,isProjection=!1){for(;null!==tNode;){ngDevMode&&assertTNodeType(tNode,63);const lNode=lView[tNode.index];if(null!==lNode&&result.push(unwrapRNode(lNode)),isLContainer(lNode))for(let i=10;i<lNode.length;i++){const lViewInAContainer=lNode[i],lViewFirstChildTNode=lViewInAContainer[1].firstChild;null!==lViewFirstChildTNode&&collectNativeNodes(lViewInAContainer[1],lViewInAContainer,lViewFirstChildTNode,result)}const tNodeType=tNode.type;if(8&tNodeType)collectNativeNodes(tView,lView,tNode.child,result);else if(32&tNodeType){const nextRNode=icuContainerIterate(tNode,lView);let rNode;for(;rNode=nextRNode();)result.push(rNode)}else if(16&tNodeType){const nodesInSlot=getProjectionNodes(lView,tNode);if(Array.isArray(nodesInSlot))result.push(...nodesInSlot);else{const parentView=getLViewParent(lView[16]);ngDevMode&&assertParentView(parentView),collectNativeNodes(parentView[1],parentView,nodesInSlot,result,!0)}}tNode=isProjection?tNode.projectionNext:tNode.next}return result}class ViewRef$1{constructor(_lView,_cdRefInjectingView){this._lView=_lView,this._cdRefInjectingView=_cdRefInjectingView,this._appRef=null,this._attachedToViewContainer=!1}get rootNodes(){const lView=this._lView,tView=lView[1];return collectNativeNodes(tView,lView,tView.firstChild,[])}get context(){return this._lView[8]}set context(value){this._lView[8]=value}get destroyed(){return 128==(128&this._lView[2])}destroy(){if(this._appRef)this._appRef.detachView(this);else if(this._attachedToViewContainer){const parent=this._lView[3];if(isLContainer(parent)){const viewRefs=parent[8],index=viewRefs?viewRefs.indexOf(this):-1;index>-1&&(ngDevMode&&assertEqual(index,parent.indexOf(this._lView)-10,"An attached view should be in the same position within its container as its ViewRef in the VIEW_REFS array."),detachView(parent,index),removeFromArray(viewRefs,index))}this._attachedToViewContainer=!1}destroyLView(this._lView[1],this._lView)}onDestroy(callback){storeCleanupWithContext(this._lView[1],this._lView,null,callback)}markForCheck(){markViewDirty(this._cdRefInjectingView||this._lView)}detach(){this._lView[2]&=-65}reattach(){this._lView[2]|=64}detectChanges(){detectChangesInternal(this._lView[1],this._lView,this.context)}checkNoChanges(){ngDevMode&&checkNoChangesInternal(this._lView[1],this._lView,this.context)}attachToViewContainerRef(){if(this._appRef)throw new RuntimeError(902,ngDevMode&&"This view is already attached directly to the ApplicationRef!");this._attachedToViewContainer=!0}detachFromAppRef(){var tView,lView;this._appRef=null,tView=this._lView[1],lView=this._lView,applyView(tView,lView,lView[11],2,null,null)}attachToAppRef(appRef){if(this._attachedToViewContainer)throw new RuntimeError(902,ngDevMode&&"This view is already attached to a ViewContainer!");this._appRef=appRef}}class RootViewRef extends ViewRef$1{constructor(_view){super(_view),this._view=_view}detectChanges(){const lView=this._view;detectChangesInternal(lView[1],lView,lView[8],!1)}checkNoChanges(){if(ngDevMode){const lView=this._view;checkNoChangesInternal(lView[1],lView,lView[8],!1)}}get context(){return null}}class ComponentFactoryResolver extends ComponentFactoryResolver$1{constructor(ngModule){super(),this.ngModule=ngModule}resolveComponentFactory(component){ngDevMode&&function(actual,msg="Type passed in is not ComponentType, it does not have '\u0275cmp' property."){getComponentDef(actual)||throwError(msg)}(component);const componentDef=getComponentDef(component);return new ComponentFactory(componentDef,this.ngModule)}}function toRefArray(map){const array=[];for(let nonMinified in map)if(map.hasOwnProperty(nonMinified)){const minified=map[nonMinified];array.push({propName:minified,templateName:nonMinified})}return array}class ChainedInjector{constructor(injector,parentInjector){this.injector=injector,this.parentInjector=parentInjector}get(token,notFoundValue,flags){const value=this.injector.get(token,NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,flags);return value!==NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR||notFoundValue===NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR?value:this.parentInjector.get(token,notFoundValue,flags)}}class ComponentFactory extends ComponentFactory$1{constructor(componentDef,ngModule){super(),this.componentDef=componentDef,this.ngModule=ngModule,this.componentType=componentDef.type,this.selector=componentDef.selectors.map(stringifyCSSSelector).join(","),this.ngContentSelectors=componentDef.ngContentSelectors?componentDef.ngContentSelectors:[],this.isBoundToModule=!!ngModule}get inputs(){return toRefArray(this.componentDef.inputs)}get outputs(){return toRefArray(this.componentDef.outputs)}create(injector,projectableNodes,rootSelectorOrNode,environmentInjector){let realEnvironmentInjector=(environmentInjector=environmentInjector||this.ngModule)instanceof EnvironmentInjector?environmentInjector:environmentInjector?.injector;realEnvironmentInjector&&null!==this.componentDef.getStandaloneInjector&&(realEnvironmentInjector=this.componentDef.getStandaloneInjector(realEnvironmentInjector)||realEnvironmentInjector);const rootViewInjector=realEnvironmentInjector?new ChainedInjector(injector,realEnvironmentInjector):injector,rendererFactory=rootViewInjector.get(RendererFactory2,null);if(null===rendererFactory)throw new RuntimeError(407,ngDevMode&&"Angular was not able to inject a renderer (RendererFactory2). Likely this is due to a broken DI hierarchy. Make sure that any injector used to create this component has a correct parent.");const sanitizer=rootViewInjector.get(Sanitizer,null),hostRenderer=rendererFactory.createRenderer(null,this.componentDef),elementName=this.componentDef.selectors[0][0]||"div",hostRNode=rootSelectorOrNode?function(renderer,elementOrSelector,encapsulation){const preserveContent=encapsulation===ViewEncapsulation$1.ShadowDom;return renderer.selectRootElement(elementOrSelector,preserveContent)}(hostRenderer,rootSelectorOrNode,this.componentDef.encapsulation):createElementNode(hostRenderer,elementName,function(elementName){const name=elementName.toLowerCase();return"svg"===name?"svg":"math"===name?"math":null}(elementName)),rootFlags=this.componentDef.onPush?288:272,rootTView=createTView(0,null,null,1,0,null,null,null,null,null),rootLView=createLView(null,rootTView,null,rootFlags,null,null,rendererFactory,hostRenderer,sanitizer,rootViewInjector,null);let component,tElementNode;enterView(rootLView);try{const componentView=function(rNode,def,rootView,rendererFactory,hostRenderer,sanitizer){const tView=rootView[1],index=22;ngDevMode&&assertIndexInRange(rootView,index),rootView[index]=rNode;const tNode=getOrCreateTNode(tView,index,2,"#host",null),mergedAttrs=tNode.mergedAttrs=def.hostAttrs;null!==mergedAttrs&&(computeStaticStyling(tNode,mergedAttrs,!0),null!==rNode&&(setUpAttributes(hostRenderer,rNode,mergedAttrs),null!==tNode.classes&&writeDirectClass(hostRenderer,rNode,tNode.classes),null!==tNode.styles&&writeDirectStyle(hostRenderer,rNode,tNode.styles)));const viewRenderer=rendererFactory.createRenderer(rNode,def),componentView=createLView(rootView,getOrCreateComponentTView(def),null,def.onPush?32:16,rootView[index],tNode,rendererFactory,viewRenderer,sanitizer||null,null,null);tView.firstCreatePass&&(diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,rootView),tView,def.type),markAsComponentHost(tView,tNode),initTNodeFlags(tNode,rootView.length,1));return addToViewTree(rootView,componentView),rootView[index]=componentView}(hostRNode,this.componentDef,rootLView,rendererFactory,hostRenderer);if(hostRNode)if(rootSelectorOrNode)setUpAttributes(hostRenderer,hostRNode,["ng-version",VERSION.full]);else{const{attrs:attrs,classes:classes}=function(selector){const attrs=[],classes=[];let i=1,mode=2;for(;i<selector.length;){let valueOrMarker=selector[i];if("string"==typeof valueOrMarker)2===mode?""!==valueOrMarker&&attrs.push(valueOrMarker,selector[++i]):8===mode&&classes.push(valueOrMarker);else{if(!isPositive(mode))break;mode=valueOrMarker}i++}return{attrs:attrs,classes:classes}}(this.componentDef.selectors[0]);attrs&&setUpAttributes(hostRenderer,hostRNode,attrs),classes&&classes.length>0&&writeDirectClass(hostRenderer,hostRNode,classes.join(" "))}if(tElementNode=getTNode(rootTView,22),void 0!==projectableNodes){const projection=tElementNode.projection=[];for(let i=0;i<this.ngContentSelectors.length;i++){const nodesforSlot=projectableNodes[i];projection.push(null!=nodesforSlot?Array.from(nodesforSlot):null)}}component=function(componentView,componentDef,rootLView,hostFeatures){const tView=rootLView[1],component=function(tView,lView,def){const rootTNode=getCurrentTNode();if(tView.firstCreatePass){def.providersResolver&&def.providersResolver(def);const directiveIndex=allocExpando(tView,lView,1,null);ngDevMode&&assertEqual(directiveIndex,rootTNode.directiveStart,"Because this is a root component the allocated expando should match the TNode component."),configureViewWithDirective(tView,rootTNode,lView,directiveIndex,def),initializeInputAndOutputAliases(tView,rootTNode)}const directive=getNodeInjectable(lView,tView,rootTNode.directiveStart,rootTNode);attachPatchData(directive,lView);const native=getNativeByTNode(rootTNode,lView);return native&&attachPatchData(native,lView),directive}(tView,rootLView,componentDef);if(componentView[8]=rootLView[8]=component,null!==hostFeatures)for(const feature of hostFeatures)feature(component,componentDef);if(componentDef.contentQueries){const tNode=getCurrentTNode();ngDevMode&&assertDefined(tNode,"TNode expected"),componentDef.contentQueries(1,component,tNode.directiveStart)}const rootTNode=getCurrentTNode();if(ngDevMode&&assertDefined(rootTNode,"tNode should have been already created"),tView.firstCreatePass&&(null!==componentDef.hostBindings||null!==componentDef.hostAttrs)){setSelectedIndex(rootTNode.index);registerHostBindingOpCodes(rootLView[1],rootTNode,0,rootTNode.directiveStart,rootTNode.directiveEnd,componentDef),invokeHostBindingsInCreationMode(componentDef,component)}return component}(componentView,this.componentDef,rootLView,[LifecycleHooksFeature]),renderView(rootTView,rootLView,null)}finally{leaveView()}return new ComponentRef(this.componentType,component,createElementRef(tElementNode,rootLView),rootLView,tElementNode)}}new ComponentFactoryResolver;class ComponentRef extends ComponentRef$1{constructor(componentType,instance,location,_rootLView,_tNode){super(),this.location=location,this._rootLView=_rootLView,this._tNode=_tNode,this.instance=instance,this.hostView=this.changeDetectorRef=new RootViewRef(_rootLView),this.componentType=componentType}setInput(name,value){const inputData=this._tNode.inputs;let dataValue;if(null!==inputData&&(dataValue=inputData[name])){const lView=this._rootLView;setInputsForProperty(lView[1],lView,dataValue,name,value),markDirtyIfOnPush(lView,this._tNode.index)}else if(ngDevMode){let message=`Can't set value of the '${name}' input on the '${stringifyForError(this.componentType)}' component. `;message+=`Make sure that the '${name}' property is annotated with @Input() or a mapped @Input('${name}') exists.`,reportUnknownPropertyError(message)}}get injector(){return new NodeInjector(this._tNode,this._rootLView)}destroy(){this.hostView.destroy()}onDestroy(callback){this.hostView.onDestroy(callback)}}function LifecycleHooksFeature(){const tNode=getCurrentTNode();ngDevMode&&assertDefined(tNode,"TNode is required"),registerPostOrderHooks(getLView()[1],tNode)}function getSuperType(type){return Object.getPrototypeOf(type.prototype).constructor}function ɵɵInheritDefinitionFeature(definition){let superType=getSuperType(definition.type),shouldInheritFields=!0;const inheritanceChain=[definition];for(;superType;){let superDef;if(isComponentDef(definition))superDef=superType.ɵcmp||superType.ɵdir;else{if(superType.ɵcmp)throw new RuntimeError(903,ngDevMode&&`Directives cannot inherit Components. Directive ${stringifyForError(definition.type)} is attempting to extend component ${stringifyForError(superType)}`);superDef=superType.ɵdir}if(superDef){if(shouldInheritFields){inheritanceChain.push(superDef);const writeableDef=definition;writeableDef.inputs=maybeUnwrapEmpty(definition.inputs),writeableDef.declaredInputs=maybeUnwrapEmpty(definition.declaredInputs),writeableDef.outputs=maybeUnwrapEmpty(definition.outputs);const superHostBindings=superDef.hostBindings;superHostBindings&&inheritHostBindings(definition,superHostBindings);const superViewQuery=superDef.viewQuery,superContentQueries=superDef.contentQueries;if(superViewQuery&&inheritViewQuery(definition,superViewQuery),superContentQueries&&inheritContentQueries(definition,superContentQueries),fillProperties(definition.inputs,superDef.inputs),fillProperties(definition.declaredInputs,superDef.declaredInputs),fillProperties(definition.outputs,superDef.outputs),isComponentDef(superDef)&&superDef.data.animation){const defData=definition.data;defData.animation=(defData.animation||[]).concat(superDef.data.animation)}}const features=superDef.features;if(features)for(let i=0;i<features.length;i++){const feature=features[i];feature&&feature.ngInherit&&feature(definition),feature===ɵɵInheritDefinitionFeature&&(shouldInheritFields=!1)}}superType=Object.getPrototypeOf(superType)}!function(inheritanceChain){let hostVars=0,hostAttrs=null;for(let i=inheritanceChain.length-1;i>=0;i--){const def=inheritanceChain[i];def.hostVars=hostVars+=def.hostVars,def.hostAttrs=mergeHostAttrs(def.hostAttrs,hostAttrs=mergeHostAttrs(hostAttrs,def.hostAttrs))}}(inheritanceChain)}function maybeUnwrapEmpty(value){return value===EMPTY_OBJ?{}:value===EMPTY_ARRAY?[]:value}function inheritViewQuery(definition,superViewQuery){const prevViewQuery=definition.viewQuery;definition.viewQuery=prevViewQuery?(rf,ctx)=>{superViewQuery(rf,ctx),prevViewQuery(rf,ctx)}:superViewQuery}function inheritContentQueries(definition,superContentQueries){const prevContentQueries=definition.contentQueries;definition.contentQueries=prevContentQueries?(rf,ctx,directiveIndex)=>{superContentQueries(rf,ctx,directiveIndex),prevContentQueries(rf,ctx,directiveIndex)}:superContentQueries}function inheritHostBindings(definition,superHostBindings){const prevHostBindings=definition.hostBindings;definition.hostBindings=prevHostBindings?(rf,ctx)=>{superHostBindings(rf,ctx),prevHostBindings(rf,ctx)}:superHostBindings}const COPY_DIRECTIVE_FIELDS=["providersResolver"],COPY_COMPONENT_FIELDS=["template","decls","consts","vars","onPush","ngContentSelectors","styles","encapsulation","schemas"];function ɵɵCopyDefinitionFeature(definition){let superDef,superType=getSuperType(definition.type);superDef=isComponentDef(definition)?superType.ɵcmp:superType.ɵdir;const defAny=definition;for(const field of COPY_DIRECTIVE_FIELDS)defAny[field]=superDef[field];if(isComponentDef(superDef))for(const field of COPY_COMPONENT_FIELDS)defAny[field]=superDef[field]}let _symbolIterator=null;function getSymbolIterator(){if(!_symbolIterator){const Symbol=_global.Symbol;if(Symbol&&Symbol.iterator)_symbolIterator=Symbol.iterator;else{const keys=Object.getOwnPropertyNames(Map.prototype);for(let i=0;i<keys.length;++i){const key=keys[i];"entries"!==key&&"size"!==key&&Map.prototype[key]===Map.prototype.entries&&(_symbolIterator=key)}}}return _symbolIterator}function isListLikeIterable(obj){return!!isJsObject(obj)&&(Array.isArray(obj)||!(obj instanceof Map)&&getSymbolIterator()in obj)}function isJsObject(o){return null!==o&&("function"==typeof o||"object"==typeof o)}function devModeEqual(a,b){const isListLikeIterableA=isListLikeIterable(a),isListLikeIterableB=isListLikeIterable(b);if(isListLikeIterableA&&isListLikeIterableB)return function(a,b,comparator){const iterator1=a[getSymbolIterator()](),iterator2=b[getSymbolIterator()]();for(;;){const item1=iterator1.next(),item2=iterator2.next();if(item1.done&&item2.done)return!0;if(item1.done||item2.done)return!1;if(!comparator(item1.value,item2.value))return!1}}(a,b,devModeEqual);return!(isListLikeIterableA||!(a&&("object"==typeof a||"function"==typeof a))||isListLikeIterableB||!(b&&("object"==typeof b||"function"==typeof b)))||Object.is(a,b)}function updateBinding(lView,bindingIndex,value){return lView[bindingIndex]=value}function getBinding(lView,bindingIndex){return ngDevMode&&assertIndexInRange(lView,bindingIndex),ngDevMode&&assertNotSame(lView[bindingIndex],NO_CHANGE,"Stored value should never be NO_CHANGE."),lView[bindingIndex]}function bindingUpdated(lView,bindingIndex,value){ngDevMode&&assertNotSame(value,NO_CHANGE,"Incoming value should never be NO_CHANGE."),ngDevMode&&assertLessThan(bindingIndex,lView.length,"Slot should have been initialized to NO_CHANGE");const oldValue=lView[bindingIndex];if(Object.is(oldValue,value))return!1;if(ngDevMode&&isInCheckNoChangesMode()){const oldValueToCompare=oldValue!==NO_CHANGE?oldValue:void 0;if(!devModeEqual(oldValueToCompare,value)){const details=function(lView,bindingIndex,oldValue,newValue){const tData=lView[1].data,metadata=tData[bindingIndex];if("string"==typeof metadata)return metadata.indexOf("\uFFFD")>-1?constructDetailsForInterpolation(lView,bindingIndex,bindingIndex,metadata,newValue):{propName:metadata,oldValue:oldValue,newValue:newValue};if(null===metadata){let idx=bindingIndex-1;for(;"string"!=typeof tData[idx]&&null===tData[idx+1];)idx--;const meta=tData[idx];if("string"==typeof meta){const matches=meta.match(new RegExp("\uFFFD","g"));if(matches&&matches.length-1>bindingIndex-idx)return constructDetailsForInterpolation(lView,idx,bindingIndex,meta,newValue)}}return{propName:void 0,oldValue:oldValue,newValue:newValue}}(lView,bindingIndex,oldValueToCompare,value);!function(creationMode,oldValue,currValue,propName){let msg=`ExpressionChangedAfterItHasBeenCheckedError: Expression has changed after it was checked. Previous value${propName?` for '${propName}'`:""}: '${oldValue}'. Current value: '${currValue}'.`;throw creationMode&&(msg+=" It seems like the view has been created after its parent and its children have been dirty checked. Has it been created in a change detection hook?"),new RuntimeError(-100,msg)}(oldValue===NO_CHANGE,details.oldValue,details.newValue,details.propName)}return!1}return lView[bindingIndex]=value,!0}function bindingUpdated2(lView,bindingIndex,exp1,exp2){const different=bindingUpdated(lView,bindingIndex,exp1);return bindingUpdated(lView,bindingIndex+1,exp2)||different}function bindingUpdated3(lView,bindingIndex,exp1,exp2,exp3){const different=bindingUpdated2(lView,bindingIndex,exp1,exp2);return bindingUpdated(lView,bindingIndex+2,exp3)||different}function bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4){const different=bindingUpdated2(lView,bindingIndex,exp1,exp2);return bindingUpdated2(lView,bindingIndex+2,exp3,exp4)||different}function ɵɵattribute(name,value,sanitizer,namespace){const lView=getLView(),bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){const tView=getTView(),tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,name,value,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,"attr."+name,bindingIndex)}return ɵɵattribute}function interpolationV(lView,values){ngDevMode&&assertLessThan(2,values.length,"should have at least 3 values"),ngDevMode&&assertEqual(values.length%2,1,"should have an odd number of values");let isBindingUpdated=!1,bindingIndex=getBindingIndex();for(let i=1;i<values.length;i+=2)isBindingUpdated=bindingUpdated(lView,bindingIndex++,values[i])||isBindingUpdated;if(setBindingIndex(bindingIndex),!isBindingUpdated)return NO_CHANGE;let content=values[0];for(let i=1;i<values.length;i+=2)content+=renderStringify(values[i])+values[i+1];return content}function interpolation1(lView,prefix,v0,suffix){return bindingUpdated(lView,nextBindingIndex(),v0)?prefix+renderStringify(v0)+suffix:NO_CHANGE}function interpolation2(lView,prefix,v0,i0,v1,suffix){const different=bindingUpdated2(lView,getBindingIndex(),v0,v1);return incrementBindingIndex(2),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+suffix:NO_CHANGE}function interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix){const different=bindingUpdated3(lView,getBindingIndex(),v0,v1,v2);return incrementBindingIndex(3),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+suffix:NO_CHANGE}function interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix){const different=bindingUpdated4(lView,getBindingIndex(),v0,v1,v2,v3);return incrementBindingIndex(4),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+suffix:NO_CHANGE}function interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){const bindingIndex=getBindingIndex();let different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);return different=bindingUpdated(lView,bindingIndex+4,v4)||different,incrementBindingIndex(5),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+suffix:NO_CHANGE}function interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){const bindingIndex=getBindingIndex();let different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);return different=bindingUpdated2(lView,bindingIndex+4,v4,v5)||different,incrementBindingIndex(6),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+i4+renderStringify(v5)+suffix:NO_CHANGE}function interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){const bindingIndex=getBindingIndex();let different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);return different=bindingUpdated3(lView,bindingIndex+4,v4,v5,v6)||different,incrementBindingIndex(7),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+i4+renderStringify(v5)+i5+renderStringify(v6)+suffix:NO_CHANGE}function interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){const bindingIndex=getBindingIndex();let different=bindingUpdated4(lView,bindingIndex,v0,v1,v2,v3);return different=bindingUpdated4(lView,bindingIndex+4,v4,v5,v6,v7)||different,incrementBindingIndex(8),different?prefix+renderStringify(v0)+i0+renderStringify(v1)+i1+renderStringify(v2)+i2+renderStringify(v3)+i3+renderStringify(v4)+i4+renderStringify(v5)+i5+renderStringify(v6)+i6+renderStringify(v7)+suffix:NO_CHANGE}function ɵɵattributeInterpolate1(attrName,prefix,v0,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation1(lView,prefix,v0,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-1,prefix,suffix)}return ɵɵattributeInterpolate1}function ɵɵattributeInterpolate2(attrName,prefix,v0,i0,v1,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-2,prefix,i0,suffix)}return ɵɵattributeInterpolate2}function ɵɵattributeInterpolate3(attrName,prefix,v0,i0,v1,i1,v2,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-3,prefix,i0,i1,suffix)}return ɵɵattributeInterpolate3}function ɵɵattributeInterpolate4(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-4,prefix,i0,i1,i2,suffix)}return ɵɵattributeInterpolate4}function ɵɵattributeInterpolate5(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-5,prefix,i0,i1,i2,i3,suffix)}return ɵɵattributeInterpolate5}function ɵɵattributeInterpolate6(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-6,prefix,i0,i1,i2,i3,i4,suffix)}return ɵɵattributeInterpolate6}function ɵɵattributeInterpolate7(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-7,prefix,i0,i1,i2,i3,i4,i5,suffix)}return ɵɵattributeInterpolate7}function ɵɵattributeInterpolate8(attrName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix,sanitizer,namespace){const lView=getLView(),interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);if(interpolatedValue!==NO_CHANGE){const tNode=getSelectedTNode();elementAttributeInternal(tNode,lView,attrName,interpolatedValue,sanitizer,namespace),ngDevMode&&storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-8,prefix,i0,i1,i2,i3,i4,i5,i6,suffix)}return ɵɵattributeInterpolate8}function ɵɵattributeInterpolateV(attrName,values,sanitizer,namespace){const lView=getLView(),interpolated=interpolationV(lView,values);if(interpolated!==NO_CHANGE){const tNode=getSelectedTNode();if(elementAttributeInternal(tNode,lView,attrName,interpolated,sanitizer,namespace),ngDevMode){const interpolationInBetween=[values[0]];for(let i=2;i<values.length;i+=2)interpolationInBetween.push(values[i]);storePropertyBindingMetadata(getTView().data,tNode,"attr."+attrName,getBindingIndex()-interpolationInBetween.length+1,...interpolationInBetween)}}return ɵɵattributeInterpolateV}function detectChanges(component){const view=getComponentViewByInstance(component);detectChangesInternal(view[1],view,component)}function ɵɵtemplate(index,templateFn,decls,vars,tagName,attrsIndex,localRefsIndex,localRefExtractor){const lView=getLView(),tView=getTView(),adjustedIndex=index+22,tNode=tView.firstCreatePass?function(index,tView,lView,templateFn,decls,vars,tagName,attrsIndex,localRefsIndex){ngDevMode&&assertFirstCreatePass(tView),ngDevMode&&ngDevMode.firstCreatePass++;const tViewConsts=tView.consts,tNode=getOrCreateTNode(tView,index,4,tagName||null,getConstant(tViewConsts,attrsIndex));resolveDirectives(tView,lView,tNode,getConstant(tViewConsts,localRefsIndex)),registerPostOrderHooks(tView,tNode);const embeddedTView=tNode.tViews=createTView(2,tNode,templateFn,decls,vars,tView.directiveRegistry,tView.pipeRegistry,null,tView.schemas,tViewConsts);return null!==tView.queries&&(tView.queries.template(tView,tNode),embeddedTView.queries=tView.queries.embeddedTView(tNode)),tNode}(adjustedIndex,tView,lView,templateFn,decls,vars,tagName,attrsIndex,localRefsIndex):tView.data[adjustedIndex];setCurrentTNode(tNode,!1);const comment=lView[11].createComment(ngDevMode?"container":"");appendChild(tView,lView,comment,tNode),attachPatchData(comment,lView),addToViewTree(lView,lView[adjustedIndex]=createLContainer(comment,lView,comment,tNode)),isDirectiveHost(tNode)&&createDirectivesInstances(tView,lView,tNode),null!=localRefsIndex&&saveResolvedLocalsInData(lView,tNode,localRefExtractor)}function store(tView,lView,index,value){index>=tView.data.length&&(tView.data[index]=null,tView.blueprint[index]=null),lView[index]=value}function ɵɵreference(index){return load(function(){const contextLView=instructionState.lFrame.contextLView;return ngDevMode&&assertDefined(contextLView,"contextLView must be defined."),contextLView}(),22+index)}function ɵɵproperty(propName,value,sanitizer){const lView=getLView(),bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,value,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,bindingIndex)}return ɵɵproperty}function setDirectiveInputsWhichShadowsStyling(tView,tNode,lView,value,isClassBased){const property=isClassBased?"class":"style";setInputsForProperty(tView,lView,tNode.inputs[property],property,value)}function elementStartFirstCreatePass(index,tView,lView,native,name,attrsIndex,localRefsIndex){ngDevMode&&assertFirstCreatePass(tView),ngDevMode&&ngDevMode.firstCreatePass++;const tViewConsts=tView.consts,tNode=getOrCreateTNode(tView,index,2,name,getConstant(tViewConsts,attrsIndex)),hasDirectives=resolveDirectives(tView,lView,tNode,getConstant(tViewConsts,localRefsIndex));return ngDevMode&&function(element,lView,tagName,schemas,hasDirectives){if(null!==schemas&&!hasDirectives&&null!==tagName&&("undefined"!=typeof HTMLUnknownElement&&HTMLUnknownElement&&element instanceof HTMLUnknownElement||"undefined"!=typeof customElements&&tagName.indexOf("-")>-1&&!customElements.get(tagName))&&!matchingSchemas(schemas,tagName)){const isHostStandalone=isHostComponentStandalone(lView),schemas=`'${isHostStandalone?"@Component":"@NgModule"}.schemas'`;let message=`'${tagName}' is not a known element${getTemplateLocationDetails(lView)}:\n`;if(message+=`1. If '${tagName}' is an Angular component, then verify that it is ${isHostStandalone?"included in the '@Component.imports' of this component":"a part of an @NgModule where this component is declared"}.\n`,tagName&&tagName.indexOf("-")>-1?message+=`2. If '${tagName}' is a Web Component then add 'CUSTOM_ELEMENTS_SCHEMA' to the ${schemas} of this component to suppress this message.`:message+=`2. To allow any element add 'NO_ERRORS_SCHEMA' to the ${schemas} of this component.`,shouldThrowErrorOnUnknownElement)throw new RuntimeError(304,message);console.error(formatRuntimeError(304,message))}}(native,lView,tNode.value,tView.schemas,hasDirectives),null!==tNode.attrs&&computeStaticStyling(tNode,tNode.attrs,!1),null!==tNode.mergedAttrs&&computeStaticStyling(tNode,tNode.mergedAttrs,!0),null!==tView.queries&&tView.queries.elementStart(tView,tNode),tNode}function ɵɵelementStart(index,name,attrsIndex,localRefsIndex){const lView=getLView(),tView=getTView(),adjustedIndex=22+index;ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,"elements should be created before any bindings"),ngDevMode&&assertIndexInRange(lView,adjustedIndex);const renderer=lView[11],native=lView[adjustedIndex]=createElementNode(renderer,name,instructionState.lFrame.currentNamespace),tNode=tView.firstCreatePass?elementStartFirstCreatePass(adjustedIndex,tView,lView,native,name,attrsIndex,localRefsIndex):tView.data[adjustedIndex];setCurrentTNode(tNode,!0);const mergedAttrs=tNode.mergedAttrs;null!==mergedAttrs&&setUpAttributes(renderer,native,mergedAttrs);const classes=tNode.classes;null!==classes&&writeDirectClass(renderer,native,classes);const styles=tNode.styles;return null!==styles&&writeDirectStyle(renderer,native,styles),64!=(64&tNode.flags)&&appendChild(tView,lView,native,tNode),0===instructionState.lFrame.elementDepthCount&&attachPatchData(native,lView),instructionState.lFrame.elementDepthCount++,isDirectiveHost(tNode)&&(createDirectivesInstances(tView,lView,tNode),executeContentQueries(tView,tNode,lView)),null!==localRefsIndex&&saveResolvedLocalsInData(lView,tNode),ɵɵelementStart}function ɵɵelementEnd(){let currentTNode=getCurrentTNode();ngDevMode&&assertDefined(currentTNode,"No parent node to close."),isCurrentTNodeParent()?setCurrentTNodeAsNotParent():(ngDevMode&&assertHasParent(getCurrentTNode()),currentTNode=currentTNode.parent,setCurrentTNode(currentTNode,!1));const tNode=currentTNode;ngDevMode&&assertTNodeType(tNode,3),instructionState.lFrame.elementDepthCount--;const tView=getTView();return tView.firstCreatePass&&(registerPostOrderHooks(tView,currentTNode),isContentQueryHost(currentTNode)&&tView.queries.elementEnd(currentTNode)),null!=tNode.classesWithoutHost&&function(tNode){return 0!=(16&tNode.flags)}(tNode)&&setDirectiveInputsWhichShadowsStyling(tView,tNode,getLView(),tNode.classesWithoutHost,!0),null!=tNode.stylesWithoutHost&&function(tNode){return 0!=(32&tNode.flags)}(tNode)&&setDirectiveInputsWhichShadowsStyling(tView,tNode,getLView(),tNode.stylesWithoutHost,!1),ɵɵelementEnd}function ɵɵelement(index,name,attrsIndex,localRefsIndex){return ɵɵelementStart(index,name,attrsIndex,localRefsIndex),ɵɵelementEnd(),ɵɵelement}function ɵɵelementContainerStart(index,attrsIndex,localRefsIndex){const lView=getLView(),tView=getTView(),adjustedIndex=index+22;ngDevMode&&assertIndexInRange(lView,adjustedIndex),ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,"element containers should be created before any bindings");const tNode=tView.firstCreatePass?function(index,tView,lView,attrsIndex,localRefsIndex){ngDevMode&&ngDevMode.firstCreatePass++;const tViewConsts=tView.consts,attrs=getConstant(tViewConsts,attrsIndex),tNode=getOrCreateTNode(tView,index,8,"ng-container",attrs);return null!==attrs&&computeStaticStyling(tNode,attrs,!0),resolveDirectives(tView,lView,tNode,getConstant(tViewConsts,localRefsIndex)),null!==tView.queries&&tView.queries.elementStart(tView,tNode),tNode}(adjustedIndex,tView,lView,attrsIndex,localRefsIndex):tView.data[adjustedIndex];setCurrentTNode(tNode,!0),ngDevMode&&ngDevMode.rendererCreateComment++;const native=lView[adjustedIndex]=lView[11].createComment(ngDevMode?"ng-container":"");return appendChild(tView,lView,native,tNode),attachPatchData(native,lView),isDirectiveHost(tNode)&&(createDirectivesInstances(tView,lView,tNode),executeContentQueries(tView,tNode,lView)),null!=localRefsIndex&&saveResolvedLocalsInData(lView,tNode),ɵɵelementContainerStart}function ɵɵelementContainerEnd(){let currentTNode=getCurrentTNode();const tView=getTView();return isCurrentTNodeParent()?setCurrentTNodeAsNotParent():(ngDevMode&&assertHasParent(currentTNode),currentTNode=currentTNode.parent,setCurrentTNode(currentTNode,!1)),ngDevMode&&assertTNodeType(currentTNode,8),tView.firstCreatePass&&(registerPostOrderHooks(tView,currentTNode),isContentQueryHost(currentTNode)&&tView.queries.elementEnd(currentTNode)),ɵɵelementContainerEnd}function ɵɵelementContainer(index,attrsIndex,localRefsIndex){return ɵɵelementContainerStart(index,attrsIndex,localRefsIndex),ɵɵelementContainerEnd(),ɵɵelementContainer}function ɵɵgetCurrentView(){return getLView()}function isPromise(obj){return!!obj&&"function"==typeof obj.then}function isSubscribable(obj){return!!obj&&"function"==typeof obj.subscribe}const isObservable=isSubscribable;function ɵɵlistener(eventName,listenerFn,useCapture,eventTargetResolver){const lView=getLView(),tView=getTView(),tNode=getCurrentTNode();return listenerInternal(tView,lView,lView[11],tNode,eventName,listenerFn,!!useCapture,eventTargetResolver),ɵɵlistener}function ɵɵsyntheticHostListener(eventName,listenerFn){const tNode=getCurrentTNode(),lView=getLView(),tView=getTView();return listenerInternal(tView,lView,loadComponentRenderer(getCurrentDirectiveDef(tView.data),tNode,lView),tNode,eventName,listenerFn),ɵɵsyntheticHostListener}function listenerInternal(tView,lView,renderer,tNode,eventName,listenerFn,useCapture,eventTargetResolver){const isTNodeDirectiveHost=isDirectiveHost(tNode),tCleanup=tView.firstCreatePass&&getOrCreateTViewCleanup(tView),context=lView[8],lCleanup=getOrCreateLViewCleanup(lView);ngDevMode&&assertTNodeType(tNode,15);let processOutputs=!0;if(3&tNode.type||eventTargetResolver){const native=getNativeByTNode(tNode,lView),target=eventTargetResolver?eventTargetResolver(native):native,lCleanupIndex=lCleanup.length,idxOrTargetGetter=eventTargetResolver?_lView=>eventTargetResolver(unwrapRNode(_lView[tNode.index])):tNode.index;let existingListener=null;if(!eventTargetResolver&&isTNodeDirectiveHost&&(existingListener=function(tView,lView,eventName,tNodeIdx){const tCleanup=tView.cleanup;if(null!=tCleanup)for(let i=0;i<tCleanup.length-1;i+=2){const cleanupEventName=tCleanup[i];if(cleanupEventName===eventName&&tCleanup[i+1]===tNodeIdx){const lCleanup=lView[7],listenerIdxInLCleanup=tCleanup[i+2];return lCleanup.length>listenerIdxInLCleanup?lCleanup[listenerIdxInLCleanup]:null}"string"==typeof cleanupEventName&&(i+=2)}return null}(tView,lView,eventName,tNode.index)),null!==existingListener){(existingListener.__ngLastListenerFn__||existingListener).__ngNextListenerFn__=listenerFn,existingListener.__ngLastListenerFn__=listenerFn,processOutputs=!1}else{listenerFn=wrapListener(tNode,lView,context,listenerFn,!1);const cleanupFn=renderer.listen(target,eventName,listenerFn);ngDevMode&&ngDevMode.rendererAddEventListener++,lCleanup.push(listenerFn,cleanupFn),tCleanup&&tCleanup.push(eventName,idxOrTargetGetter,lCleanupIndex,lCleanupIndex+1)}}else listenerFn=wrapListener(tNode,lView,context,listenerFn,!1);const outputs=tNode.outputs;let props;if(processOutputs&&null!==outputs&&(props=outputs[eventName])){const propsLength=props.length;if(propsLength)for(let i=0;i<propsLength;i+=2){const index=props[i];ngDevMode&&assertIndexInRange(lView,index);const minifiedName=props[i+1],directiveInstance=lView[index],output=directiveInstance[minifiedName];if(ngDevMode&&!isObservable(output))throw new Error(`@Output ${minifiedName} not initialized in '${directiveInstance.constructor.name}'.`);const subscription=output.subscribe(listenerFn),idx=lCleanup.length;lCleanup.push(listenerFn,subscription),tCleanup&&tCleanup.push(eventName,tNode.index,idx,-(idx+1))}}}function executeListenerWithErrorHandling(lView,context,listenerFn,e){try{return profiler(6,context,listenerFn),!1!==listenerFn(e)}catch(error){return handleError(lView,error),!1}finally{profiler(7,context,listenerFn)}}function wrapListener(tNode,lView,context,listenerFn,wrapWithPreventDefault){return function wrapListenerIn_markDirtyAndPreventDefault(e){if(e===Function)return listenerFn;markViewDirty(2&tNode.flags?getComponentLViewByIndex(tNode.index,lView):lView);let result=executeListenerWithErrorHandling(lView,context,listenerFn,e),nextListenerFn=wrapListenerIn_markDirtyAndPreventDefault.__ngNextListenerFn__;for(;nextListenerFn;)result=executeListenerWithErrorHandling(lView,context,nextListenerFn,e)&&result,nextListenerFn=nextListenerFn.__ngNextListenerFn__;return wrapWithPreventDefault&&!1===result&&(e.preventDefault(),e.returnValue=!1),result}}function ɵɵnextContext(level=1){return nextContextImpl(level)}function matchingProjectionSlotIndex(tNode,projectionSlots){let wildcardNgContentIndex=null;const ngProjectAsAttrVal=function(tNode){const nodeAttrs=tNode.attrs;if(null!=nodeAttrs){const ngProjectAsAttrIdx=nodeAttrs.indexOf(5);if(0==(1&ngProjectAsAttrIdx))return nodeAttrs[ngProjectAsAttrIdx+1]}return null}(tNode);for(let i=0;i<projectionSlots.length;i++){const slotValue=projectionSlots[i];if("*"!==slotValue){if(null===ngProjectAsAttrVal?isNodeMatchingSelectorList(tNode,slotValue,!0):isSelectorInSelectorList(ngProjectAsAttrVal,slotValue))return i}else wildcardNgContentIndex=i}return wildcardNgContentIndex}function ɵɵprojectionDef(projectionSlots){const componentNode=getLView()[16][6];if(!componentNode.projection){const numProjectionSlots=projectionSlots?projectionSlots.length:1,projectionHeads=componentNode.projection=newArray(numProjectionSlots,null),tails=projectionHeads.slice();let componentChild=componentNode.child;for(;null!==componentChild;){const slotIndex=projectionSlots?matchingProjectionSlotIndex(componentChild,projectionSlots):0;null!==slotIndex&&(tails[slotIndex]?tails[slotIndex].projectionNext=componentChild:projectionHeads[slotIndex]=componentChild,tails[slotIndex]=componentChild),componentChild=componentChild.next}}}function ɵɵprojection(nodeIndex,selectorIndex=0,attrs){const lView=getLView(),tView=getTView(),tProjectionNode=getOrCreateTNode(tView,22+nodeIndex,16,null,attrs||null);null===tProjectionNode.projection&&(tProjectionNode.projection=selectorIndex),setCurrentTNodeAsNotParent(),64!=(64&tProjectionNode.flags)&&function(tView,lView,tProjectionNode){applyProjectionRecursive(lView[11],0,lView,tProjectionNode,getParentRElement(tView,tProjectionNode,lView),getInsertInFrontOfRNode(tProjectionNode.parent||lView[6],tProjectionNode,lView))}(tView,lView,tProjectionNode)}function ɵɵpropertyInterpolate(propName,v0,sanitizer){return ɵɵpropertyInterpolate1(propName,"",v0,"",sanitizer),ɵɵpropertyInterpolate}function ɵɵpropertyInterpolate1(propName,prefix,v0,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation1(lView,prefix,v0,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-1,prefix,suffix)}return ɵɵpropertyInterpolate1}function ɵɵpropertyInterpolate2(propName,prefix,v0,i0,v1,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation2(lView,prefix,v0,i0,v1,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-2,prefix,i0,suffix)}return ɵɵpropertyInterpolate2}function ɵɵpropertyInterpolate3(propName,prefix,v0,i0,v1,i1,v2,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-3,prefix,i0,i1,suffix)}return ɵɵpropertyInterpolate3}function ɵɵpropertyInterpolate4(propName,prefix,v0,i0,v1,i1,v2,i2,v3,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-4,prefix,i0,i1,i2,suffix)}return ɵɵpropertyInterpolate4}function ɵɵpropertyInterpolate5(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-5,prefix,i0,i1,i2,i3,suffix)}return ɵɵpropertyInterpolate5}function ɵɵpropertyInterpolate6(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-6,prefix,i0,i1,i2,i3,i4,suffix)}return ɵɵpropertyInterpolate6}function ɵɵpropertyInterpolate7(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-7,prefix,i0,i1,i2,i3,i4,i5,suffix)}return ɵɵpropertyInterpolate7}function ɵɵpropertyInterpolate8(propName,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix,sanitizer){const lView=getLView(),interpolatedValue=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-8,prefix,i0,i1,i2,i3,i4,i5,i6,suffix)}return ɵɵpropertyInterpolate8}function ɵɵpropertyInterpolateV(propName,values,sanitizer){const lView=getLView(),interpolatedValue=interpolationV(lView,values);if(interpolatedValue!==NO_CHANGE){const tView=getTView(),tNode=getSelectedTNode();if(elementPropertyInternal(tView,tNode,lView,propName,interpolatedValue,lView[11],sanitizer,!1),ngDevMode){const interpolationInBetween=[values[0]];for(let i=2;i<values.length;i+=2)interpolationInBetween.push(values[i]);storePropertyBindingMetadata(tView.data,tNode,propName,getBindingIndex()-interpolationInBetween.length+1,...interpolationInBetween)}}return ɵɵpropertyInterpolateV}function insertTStylingBinding(tData,tNode,tStylingKeyWithStatic,index,isHostBinding,isClassBinding){ngDevMode&&assertFirstUpdatePass(getTView());let tBindings=isClassBinding?tNode.classBindings:tNode.styleBindings,tmplHead=getTStylingRangePrev(tBindings),tmplTail=getTStylingRangeNext(tBindings);tData[index]=tStylingKeyWithStatic;let tStylingKey,isKeyDuplicateOfStatic=!1;if(Array.isArray(tStylingKeyWithStatic)){const staticKeyValueArray=tStylingKeyWithStatic;tStylingKey=staticKeyValueArray[1],(null===tStylingKey||keyValueArrayIndexOf(staticKeyValueArray,tStylingKey)>0)&&(isKeyDuplicateOfStatic=!0)}else tStylingKey=tStylingKeyWithStatic;if(isHostBinding){if(0!==tmplTail){const previousNode=getTStylingRangePrev(tData[tmplHead+1]);tData[index+1]=toTStylingRange(previousNode,tmplHead),0!==previousNode&&(tData[previousNode+1]=setTStylingRangeNext(tData[previousNode+1],index)),tData[tmplHead+1]=(tStylingRange=tData[tmplHead+1],previous=index,ngDevMode&&assertNumber(tStylingRange,"expected number"),ngDevMode&&assertNumberInRange(previous,0,32767),131071&tStylingRange|previous<<17)}else tData[index+1]=toTStylingRange(tmplHead,0),0!==tmplHead&&(tData[tmplHead+1]=setTStylingRangeNext(tData[tmplHead+1],index)),tmplHead=index}else tData[index+1]=toTStylingRange(tmplTail,0),ngDevMode&&assertEqual(0!==tmplHead&&0===tmplTail,!1,"Adding template bindings after hostBindings is not allowed."),0===tmplHead?tmplHead=index:tData[tmplTail+1]=setTStylingRangeNext(tData[tmplTail+1],index),tmplTail=index;var tStylingRange,previous;isKeyDuplicateOfStatic&&(tData[index+1]=setTStylingRangePrevDuplicate(tData[index+1])),markDuplicates(tData,tStylingKey,index,!0),markDuplicates(tData,tStylingKey,index,!1),function(tNode,tStylingKey,tData,index,isClassBinding){const residual=isClassBinding?tNode.residualClasses:tNode.residualStyles;null!=residual&&"string"==typeof tStylingKey&&keyValueArrayIndexOf(residual,tStylingKey)>=0&&(tData[index+1]=setTStylingRangeNextDuplicate(tData[index+1]))}(tNode,tStylingKey,tData,index,isClassBinding),tBindings=toTStylingRange(tmplHead,tmplTail),isClassBinding?tNode.classBindings=tBindings:tNode.styleBindings=tBindings}function markDuplicates(tData,tStylingKey,index,isPrevDir,isClassBinding){const tStylingAtIndex=tData[index+1],isMap=null===tStylingKey;let cursor=isPrevDir?getTStylingRangePrev(tStylingAtIndex):getTStylingRangeNext(tStylingAtIndex),foundDuplicate=!1;for(;0!==cursor&&(!1===foundDuplicate||isMap);){ngDevMode&&assertIndexInRange(tData,cursor);const tStylingValueAtCursor=tData[cursor],tStyleRangeAtCursor=tData[cursor+1];isStylingMatch(tStylingValueAtCursor,tStylingKey)&&(foundDuplicate=!0,tData[cursor+1]=isPrevDir?setTStylingRangeNextDuplicate(tStyleRangeAtCursor):setTStylingRangePrevDuplicate(tStyleRangeAtCursor)),cursor=isPrevDir?getTStylingRangePrev(tStyleRangeAtCursor):getTStylingRangeNext(tStyleRangeAtCursor)}foundDuplicate&&(tData[index+1]=isPrevDir?setTStylingRangePrevDuplicate(tStylingAtIndex):setTStylingRangeNextDuplicate(tStylingAtIndex))}function isStylingMatch(tStylingKeyCursor,tStylingKey){return ngDevMode&&assertNotEqual(Array.isArray(tStylingKey),!0,"Expected that 'tStylingKey' has been unwrapped"),null===tStylingKeyCursor||null==tStylingKey||(Array.isArray(tStylingKeyCursor)?tStylingKeyCursor[1]:tStylingKeyCursor)===tStylingKey||!(!Array.isArray(tStylingKeyCursor)||"string"!=typeof tStylingKey)&&keyValueArrayIndexOf(tStylingKeyCursor,tStylingKey)>=0}const parserState={textEnd:0,key:0,keyEnd:0,value:0,valueEnd:0};function getLastParsedKey(text){return text.substring(parserState.key,parserState.keyEnd)}function getLastParsedValue(text){return text.substring(parserState.value,parserState.valueEnd)}function parseClassNameNext(text,index){const end=parserState.textEnd;return end===index?-1:(index=parserState.keyEnd=function(text,startIndex,endIndex){for(;startIndex<endIndex&&text.charCodeAt(startIndex)>32;)startIndex++;return startIndex}(text,parserState.key=index,end),consumeWhitespace(text,index,end))}function parseStyleNext(text,startIndex){const end=parserState.textEnd;let index=parserState.key=consumeWhitespace(text,startIndex,end);return end===index?-1:(index=parserState.keyEnd=function(text,startIndex,endIndex){let ch;for(;startIndex<endIndex&&(45===(ch=text.charCodeAt(startIndex))||95===ch||(-33&ch)>=65&&(-33&ch)<=90||ch>=48&&ch<=57);)startIndex++;return startIndex}(text,index,end),index=consumeSeparator(text,index,end,58),index=parserState.value=consumeWhitespace(text,index,end),index=parserState.valueEnd=function(text,startIndex,endIndex){let ch1=-1,ch2=-1,ch3=-1,i=startIndex,lastChIndex=i;for(;i<endIndex;){const ch=text.charCodeAt(i++);if(59===ch)return lastChIndex;34===ch||39===ch?lastChIndex=i=consumeQuotedText(text,ch,i,endIndex):startIndex===i-4&&85===ch3&&82===ch2&&76===ch1&&40===ch?lastChIndex=i=consumeQuotedText(text,41,i,endIndex):ch>32&&(lastChIndex=i),ch3=ch2,ch2=ch1,ch1=-33&ch}return lastChIndex}(text,index,end),consumeSeparator(text,index,end,59))}function resetParserState(text){parserState.key=0,parserState.keyEnd=0,parserState.value=0,parserState.valueEnd=0,parserState.textEnd=text.length}function consumeWhitespace(text,startIndex,endIndex){for(;startIndex<endIndex&&text.charCodeAt(startIndex)<=32;)startIndex++;return startIndex}function consumeSeparator(text,startIndex,endIndex,separator){return(startIndex=consumeWhitespace(text,startIndex,endIndex))<endIndex&&(ngDevMode&&text.charCodeAt(startIndex)!==separator&&malformedStyleError(text,String.fromCharCode(separator),startIndex),startIndex++),startIndex}function consumeQuotedText(text,quoteCharCode,startIndex,endIndex){let ch1=-1,index=startIndex;for(;index<endIndex;){const ch=text.charCodeAt(index++);if(ch==quoteCharCode&&92!==ch1)return index;ch1=92==ch&&92===ch1?0:ch}throw ngDevMode?malformedStyleError(text,String.fromCharCode(quoteCharCode),endIndex):new Error}function malformedStyleError(text,expecting,index){throw ngDevMode&&assertEqual("string"==typeof text,!0,"String expected here"),throwError(`Malformed style at location ${index} in string '`+text.substring(0,index)+"[>>"+text.substring(index,index+1)+"<<]"+text.slice(index+1)+`'. Expecting '${expecting}'.`)}function ɵɵstyleProp(prop,value,suffix){return checkStylingProperty(prop,value,suffix,!1),ɵɵstyleProp}function ɵɵclassProp(className,value){return checkStylingProperty(className,value,null,!0),ɵɵclassProp}function ɵɵstyleMap(styles){checkStylingMap(styleKeyValueArraySet,styleStringParser,styles,!1)}function styleStringParser(keyValueArray,text){for(let i=function(text){return resetParserState(text),parseStyleNext(text,consumeWhitespace(text,0,parserState.textEnd))}(text);i>=0;i=parseStyleNext(text,i))styleKeyValueArraySet(keyValueArray,getLastParsedKey(text),getLastParsedValue(text))}function ɵɵclassMap(classes){checkStylingMap(keyValueArraySet,classStringParser,classes,!0)}function classStringParser(keyValueArray,text){for(let i=function(text){return resetParserState(text),parseClassNameNext(text,consumeWhitespace(text,0,parserState.textEnd))}(text);i>=0;i=parseClassNameNext(text,i))keyValueArraySet(keyValueArray,getLastParsedKey(text),!0)}function checkStylingProperty(prop,value,suffix,isClassBased){const lView=getLView(),tView=getTView(),bindingIndex=incrementBindingIndex(2);if(tView.firstUpdatePass&&stylingFirstUpdatePass(tView,prop,bindingIndex,isClassBased),value!==NO_CHANGE&&bindingUpdated(lView,bindingIndex,value)){updateStyling(tView,tView.data[getSelectedIndex()],lView,lView[11],prop,lView[bindingIndex+1]=function(value,suffix){null==value||("string"==typeof suffix?value+=suffix:"object"==typeof value&&(value=stringify(unwrapSafeValue(value))));return value}(value,suffix),isClassBased,bindingIndex)}}function checkStylingMap(keyValueArraySet,stringParser,value,isClassBased){const tView=getTView(),bindingIndex=incrementBindingIndex(2);tView.firstUpdatePass&&stylingFirstUpdatePass(tView,null,bindingIndex,isClassBased);const lView=getLView();if(value!==NO_CHANGE&&bindingUpdated(lView,bindingIndex,value)){const tNode=tView.data[getSelectedIndex()];if(hasStylingInputShadow(tNode,isClassBased)&&!isInHostBindings(tView,bindingIndex)){if(ngDevMode){const tStylingKey=tView.data[bindingIndex];assertEqual(Array.isArray(tStylingKey)?tStylingKey[1]:tStylingKey,!1,"Styling linked list shadow input should be marked as 'false'")}let staticPrefix=isClassBased?tNode.classesWithoutHost:tNode.stylesWithoutHost;ngDevMode&&!1===isClassBased&&null!==staticPrefix&&assertEqual(staticPrefix.endsWith(";"),!0,"Expecting static portion to end with ';'"),null!==staticPrefix&&(value=concatStringsWithSpace(staticPrefix,value||"")),setDirectiveInputsWhichShadowsStyling(tView,tNode,lView,value,isClassBased)}else!function(tView,tNode,lView,renderer,oldKeyValueArray,newKeyValueArray,isClassBased,bindingIndex){oldKeyValueArray===NO_CHANGE&&(oldKeyValueArray=EMPTY_ARRAY);let oldIndex=0,newIndex=0,oldKey=0<oldKeyValueArray.length?oldKeyValueArray[0]:null,newKey=0<newKeyValueArray.length?newKeyValueArray[0]:null;for(;null!==oldKey||null!==newKey;){ngDevMode&&assertLessThan(oldIndex,999,"Are we stuck in infinite loop?"),ngDevMode&&assertLessThan(newIndex,999,"Are we stuck in infinite loop?");const oldValue=oldIndex<oldKeyValueArray.length?oldKeyValueArray[oldIndex+1]:void 0,newValue=newIndex<newKeyValueArray.length?newKeyValueArray[newIndex+1]:void 0;let setValue,setKey=null;oldKey===newKey?(oldIndex+=2,newIndex+=2,oldValue!==newValue&&(setKey=newKey,setValue=newValue)):null===newKey||null!==oldKey&&oldKey<newKey?(oldIndex+=2,setKey=oldKey):(ngDevMode&&assertDefined(newKey,"Expecting to have a valid key"),newIndex+=2,setKey=newKey,setValue=newValue),null!==setKey&&updateStyling(tView,tNode,lView,renderer,setKey,setValue,isClassBased,bindingIndex),oldKey=oldIndex<oldKeyValueArray.length?oldKeyValueArray[oldIndex]:null,newKey=newIndex<newKeyValueArray.length?newKeyValueArray[newIndex]:null}}(tView,tNode,lView,lView[11],lView[bindingIndex+1],lView[bindingIndex+1]=function(keyValueArraySet,stringParser,value){if(null==value||""===value)return EMPTY_ARRAY;const styleKeyValueArray=[],unwrappedValue=unwrapSafeValue(value);if(Array.isArray(unwrappedValue))for(let i=0;i<unwrappedValue.length;i++)keyValueArraySet(styleKeyValueArray,unwrappedValue[i],!0);else if("object"==typeof unwrappedValue)for(const key in unwrappedValue)unwrappedValue.hasOwnProperty(key)&&keyValueArraySet(styleKeyValueArray,key,unwrappedValue[key]);else"string"==typeof unwrappedValue?stringParser(styleKeyValueArray,unwrappedValue):ngDevMode&&throwError("Unsupported styling type "+typeof unwrappedValue+": "+unwrappedValue);return styleKeyValueArray}(keyValueArraySet,stringParser,value),isClassBased,bindingIndex)}}function isInHostBindings(tView,bindingIndex){return bindingIndex>=tView.expandoStartIndex}function stylingFirstUpdatePass(tView,tStylingKey,bindingIndex,isClassBased){ngDevMode&&assertFirstUpdatePass(tView);const tData=tView.data;if(null===tData[bindingIndex+1]){const tNode=tData[getSelectedIndex()];ngDevMode&&assertDefined(tNode,"TNode expected");const isHostBindings=isInHostBindings(tView,bindingIndex);hasStylingInputShadow(tNode,isClassBased)&&null===tStylingKey&&!isHostBindings&&(tStylingKey=!1),tStylingKey=function(tData,tNode,stylingKey,isClassBased){const hostDirectiveDef=getCurrentDirectiveDef(tData);let residual=isClassBased?tNode.residualClasses:tNode.residualStyles;if(null===hostDirectiveDef){0===(isClassBased?tNode.classBindings:tNode.styleBindings)&&(stylingKey=collectStylingFromTAttrs(stylingKey=collectStylingFromDirectives(null,tData,tNode,stylingKey,isClassBased),tNode.attrs,isClassBased),residual=null)}else{const directiveStylingLast=tNode.directiveStylingLast;if(-1===directiveStylingLast||tData[directiveStylingLast]!==hostDirectiveDef)if(stylingKey=collectStylingFromDirectives(hostDirectiveDef,tData,tNode,stylingKey,isClassBased),null===residual){let templateStylingKey=function(tData,tNode,isClassBased){const bindings=isClassBased?tNode.classBindings:tNode.styleBindings;if(0===getTStylingRangeNext(bindings))return;return tData[getTStylingRangePrev(bindings)]}(tData,tNode,isClassBased);void 0!==templateStylingKey&&Array.isArray(templateStylingKey)&&(templateStylingKey=collectStylingFromDirectives(null,tData,tNode,templateStylingKey[1],isClassBased),templateStylingKey=collectStylingFromTAttrs(templateStylingKey,tNode.attrs,isClassBased),function(tData,tNode,isClassBased,tStylingKey){const bindings=isClassBased?tNode.classBindings:tNode.styleBindings;ngDevMode&&assertNotEqual(getTStylingRangeNext(bindings),0,"Expecting to have at least one template styling binding."),tData[getTStylingRangePrev(bindings)]=tStylingKey}(tData,tNode,isClassBased,templateStylingKey))}else residual=function(tData,tNode,isClassBased){let residual;const directiveEnd=tNode.directiveEnd;ngDevMode&&assertNotEqual(tNode.directiveStylingLast,-1,"By the time this function gets called at least one hostBindings-node styling instruction must have executed.");for(let i=1+tNode.directiveStylingLast;i<directiveEnd;i++){residual=collectStylingFromTAttrs(residual,tData[i].hostAttrs,isClassBased)}return collectStylingFromTAttrs(residual,tNode.attrs,isClassBased)}(tData,tNode,isClassBased)}void 0!==residual&&(isClassBased?tNode.residualClasses=residual:tNode.residualStyles=residual);return stylingKey}(tData,tNode,tStylingKey,isClassBased),insertTStylingBinding(tData,tNode,tStylingKey,bindingIndex,isHostBindings,isClassBased)}}function collectStylingFromDirectives(hostDirectiveDef,tData,tNode,stylingKey,isClassBased){let currentDirective=null;const directiveEnd=tNode.directiveEnd;let directiveStylingLast=tNode.directiveStylingLast;for(-1===directiveStylingLast?directiveStylingLast=tNode.directiveStart:directiveStylingLast++;directiveStylingLast<directiveEnd&&(currentDirective=tData[directiveStylingLast],ngDevMode&&assertDefined(currentDirective,"expected to be defined"),stylingKey=collectStylingFromTAttrs(stylingKey,currentDirective.hostAttrs,isClassBased),currentDirective!==hostDirectiveDef);)directiveStylingLast++;return null!==hostDirectiveDef&&(tNode.directiveStylingLast=directiveStylingLast),stylingKey}function collectStylingFromTAttrs(stylingKey,attrs,isClassBased){const desiredMarker=isClassBased?1:2;let currentMarker=-1;if(null!==attrs)for(let i=0;i<attrs.length;i++){const item=attrs[i];"number"==typeof item?currentMarker=item:currentMarker===desiredMarker&&(Array.isArray(stylingKey)||(stylingKey=void 0===stylingKey?[]:["",stylingKey]),keyValueArraySet(stylingKey,item,!!isClassBased||attrs[++i]))}return void 0===stylingKey?null:stylingKey}function styleKeyValueArraySet(keyValueArray,key,value){keyValueArraySet(keyValueArray,key,unwrapSafeValue(value))}function updateStyling(tView,tNode,lView,renderer,prop,value,isClassBased,bindingIndex){if(!(3&tNode.type))return;const tData=tView.data,tRange=tData[bindingIndex+1];if(!isStylingValuePresent(getTStylingRangeNextDuplicate(tRange)?findStylingValue(tData,tNode,lView,prop,getTStylingRangeNext(tRange),isClassBased):void 0)){isStylingValuePresent(value)||getTStylingRangePrevDuplicate(tRange)&&(value=findStylingValue(tData,null,lView,prop,bindingIndex,isClassBased));!function(renderer,isClassBased,rNode,prop,value){if(isClassBased)value?(ngDevMode&&ngDevMode.rendererAddClass++,renderer.addClass(rNode,prop)):(ngDevMode&&ngDevMode.rendererRemoveClass++,renderer.removeClass(rNode,prop));else{let flags=-1===prop.indexOf("-")?void 0:RendererStyleFlags2.DashCase;null==value?(ngDevMode&&ngDevMode.rendererRemoveStyle++,renderer.removeStyle(rNode,prop,flags)):("string"==typeof value&&value.endsWith("!important")&&(value=value.slice(0,-10),flags|=RendererStyleFlags2.Important),ngDevMode&&ngDevMode.rendererSetStyle++,renderer.setStyle(rNode,prop,value,flags))}}(renderer,isClassBased,getNativeByIndex(getSelectedIndex(),lView),prop,value)}}function findStylingValue(tData,tNode,lView,prop,index,isClassBased){const isPrevDirection=null===tNode;let value;for(;index>0;){const rawKey=tData[index],containsStatics=Array.isArray(rawKey),key=containsStatics?rawKey[1]:rawKey,isStylingMap=null===key;let valueAtLViewIndex=lView[index+1];valueAtLViewIndex===NO_CHANGE&&(valueAtLViewIndex=isStylingMap?EMPTY_ARRAY:void 0);let currentValue=isStylingMap?keyValueArrayGet(valueAtLViewIndex,prop):key===prop?valueAtLViewIndex:void 0;if(containsStatics&&!isStylingValuePresent(currentValue)&&(currentValue=keyValueArrayGet(rawKey,prop)),isStylingValuePresent(currentValue)&&(value=currentValue,isPrevDirection))return value;const tRange=tData[index+1];index=isPrevDirection?getTStylingRangePrev(tRange):getTStylingRangeNext(tRange)}if(null!==tNode){let residual=isClassBased?tNode.residualClasses:tNode.residualStyles;null!=residual&&(value=keyValueArrayGet(residual,prop))}return value}function isStylingValuePresent(value){return void 0!==value}function hasStylingInputShadow(tNode,isClassBased){return 0!=(tNode.flags&(isClassBased?16:32))}function ɵɵtext(index,value=""){const lView=getLView(),tView=getTView(),adjustedIndex=index+22;ngDevMode&&assertEqual(getBindingIndex(),tView.bindingStartIndex,"text nodes should be created before any bindings"),ngDevMode&&assertIndexInRange(lView,adjustedIndex);const tNode=tView.firstCreatePass?getOrCreateTNode(tView,adjustedIndex,1,value,null):tView.data[adjustedIndex],textNative=lView[adjustedIndex]=createTextNode(lView[11],value);appendChild(tView,lView,textNative,tNode),setCurrentTNode(tNode,!1)}function ɵɵtextInterpolate(v0){return ɵɵtextInterpolate1("",v0,""),ɵɵtextInterpolate}function ɵɵtextInterpolate1(prefix,v0,suffix){const lView=getLView(),interpolated=interpolation1(lView,prefix,v0,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate1}function ɵɵtextInterpolate2(prefix,v0,i0,v1,suffix){const lView=getLView(),interpolated=interpolation2(lView,prefix,v0,i0,v1,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate2}function ɵɵtextInterpolate3(prefix,v0,i0,v1,i1,v2,suffix){const lView=getLView(),interpolated=interpolation3(lView,prefix,v0,i0,v1,i1,v2,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate3}function ɵɵtextInterpolate4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){const lView=getLView(),interpolated=interpolation4(lView,prefix,v0,i0,v1,i1,v2,i2,v3,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate4}function ɵɵtextInterpolate5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){const lView=getLView(),interpolated=interpolation5(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate5}function ɵɵtextInterpolate6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){const lView=getLView(),interpolated=interpolation6(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate6}function ɵɵtextInterpolate7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){const lView=getLView(),interpolated=interpolation7(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate7}function ɵɵtextInterpolate8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){const lView=getLView(),interpolated=interpolation8(lView,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolate8}function ɵɵtextInterpolateV(values){const lView=getLView(),interpolated=interpolationV(lView,values);return interpolated!==NO_CHANGE&&textBindingInternal(lView,getSelectedIndex(),interpolated),ɵɵtextInterpolateV}function ɵɵclassMapInterpolate1(prefix,v0,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation1(getLView(),prefix,v0,suffix),!0)}function ɵɵclassMapInterpolate2(prefix,v0,i0,v1,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation2(getLView(),prefix,v0,i0,v1,suffix),!0)}function ɵɵclassMapInterpolate3(prefix,v0,i0,v1,i1,v2,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation3(getLView(),prefix,v0,i0,v1,i1,v2,suffix),!0)}function ɵɵclassMapInterpolate4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation4(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,suffix),!0)}function ɵɵclassMapInterpolate5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation5(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix),!0)}function ɵɵclassMapInterpolate6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation6(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix),!0)}function ɵɵclassMapInterpolate7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation7(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix),!0)}function ɵɵclassMapInterpolate8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){checkStylingMap(keyValueArraySet,classStringParser,interpolation8(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix),!0)}function ɵɵclassMapInterpolateV(values){checkStylingMap(keyValueArraySet,classStringParser,interpolationV(getLView(),values),!0)}function ɵɵstyleMapInterpolate1(prefix,v0,suffix){ɵɵstyleMap(interpolation1(getLView(),prefix,v0,suffix))}function ɵɵstyleMapInterpolate2(prefix,v0,i0,v1,suffix){ɵɵstyleMap(interpolation2(getLView(),prefix,v0,i0,v1,suffix))}function ɵɵstyleMapInterpolate3(prefix,v0,i0,v1,i1,v2,suffix){ɵɵstyleMap(interpolation3(getLView(),prefix,v0,i0,v1,i1,v2,suffix))}function ɵɵstyleMapInterpolate4(prefix,v0,i0,v1,i1,v2,i2,v3,suffix){ɵɵstyleMap(interpolation4(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,suffix))}function ɵɵstyleMapInterpolate5(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix){ɵɵstyleMap(interpolation5(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix))}function ɵɵstyleMapInterpolate6(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix){ɵɵstyleMap(interpolation6(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix))}function ɵɵstyleMapInterpolate7(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix){ɵɵstyleMap(interpolation7(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix))}function ɵɵstyleMapInterpolate8(prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix){ɵɵstyleMap(interpolation8(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix))}function ɵɵstyleMapInterpolateV(values){ɵɵstyleMap(interpolationV(getLView(),values))}function ɵɵstylePropInterpolate1(prop,prefix,v0,suffix,valueSuffix){return checkStylingProperty(prop,interpolation1(getLView(),prefix,v0,suffix),valueSuffix,!1),ɵɵstylePropInterpolate1}function ɵɵstylePropInterpolate2(prop,prefix,v0,i0,v1,suffix,valueSuffix){return checkStylingProperty(prop,interpolation2(getLView(),prefix,v0,i0,v1,suffix),valueSuffix,!1),ɵɵstylePropInterpolate2}function ɵɵstylePropInterpolate3(prop,prefix,v0,i0,v1,i1,v2,suffix,valueSuffix){return checkStylingProperty(prop,interpolation3(getLView(),prefix,v0,i0,v1,i1,v2,suffix),valueSuffix,!1),ɵɵstylePropInterpolate3}function ɵɵstylePropInterpolate4(prop,prefix,v0,i0,v1,i1,v2,i2,v3,suffix,valueSuffix){return checkStylingProperty(prop,interpolation4(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,suffix),valueSuffix,!1),ɵɵstylePropInterpolate4}function ɵɵstylePropInterpolate5(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix,valueSuffix){return checkStylingProperty(prop,interpolation5(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,suffix),valueSuffix,!1),ɵɵstylePropInterpolate5}function ɵɵstylePropInterpolate6(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix,valueSuffix){return checkStylingProperty(prop,interpolation6(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,suffix),valueSuffix,!1),ɵɵstylePropInterpolate6}function ɵɵstylePropInterpolate7(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix,valueSuffix){return checkStylingProperty(prop,interpolation7(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,suffix),valueSuffix,!1),ɵɵstylePropInterpolate7}function ɵɵstylePropInterpolate8(prop,prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix,valueSuffix){return checkStylingProperty(prop,interpolation8(getLView(),prefix,v0,i0,v1,i1,v2,i2,v3,i3,v4,i4,v5,i5,v6,i6,v7,suffix),valueSuffix,!1),ɵɵstylePropInterpolate8}function ɵɵstylePropInterpolateV(prop,values,valueSuffix){return checkStylingProperty(prop,interpolationV(getLView(),values),valueSuffix,!1),ɵɵstylePropInterpolateV}function ɵɵhostProperty(propName,value,sanitizer){const lView=getLView(),bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,value,lView[11],sanitizer,!0),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,bindingIndex)}return ɵɵhostProperty}function ɵɵsyntheticHostProperty(propName,value,sanitizer){const lView=getLView(),bindingIndex=nextBindingIndex();if(bindingUpdated(lView,bindingIndex,value)){const tView=getTView(),tNode=getSelectedTNode();elementPropertyInternal(tView,tNode,lView,propName,value,loadComponentRenderer(getCurrentDirectiveDef(tView.data),tNode,lView),sanitizer,!0),ngDevMode&&storePropertyBindingMetadata(tView.data,tNode,propName,bindingIndex)}return ɵɵsyntheticHostProperty}"undefined"==typeof ngI18nClosureMode&&(_global.ngI18nClosureMode="undefined"!=typeof goog&&"function"==typeof goog.getMsg);const u=void 0;var localeEn=["en",[["a","p"],["AM","PM"],u],[["AM","PM"],u,u],[["S","M","T","W","T","F","S"],["Sun","Mon","Tue","Wed","Thu","Fri","Sat"],["Sunday","Monday","Tuesday","Wednesday","Thursday","Friday","Saturday"],["Su","Mo","Tu","We","Th","Fr","Sa"]],u,[["J","F","M","A","M","J","J","A","S","O","N","D"],["Jan","Feb","Mar","Apr","May","Jun","Jul","Aug","Sep","Oct","Nov","Dec"],["January","February","March","April","May","June","July","August","September","October","November","December"]],u,[["B","A"],["BC","AD"],["Before Christ","Anno Domini"]],0,[6,0],["M/d/yy","MMM d, y","MMMM d, y","EEEE, MMMM d, y"],["h:mm a","h:mm:ss a","h:mm:ss a z","h:mm:ss a zzzz"],["{1}, {0}",u,"{1} 'at' {0}",u],[".",",",";","%","+","-","E","\xD7","\u2030","\u221E","NaN",":"],["#,##0.###","#,##0%","\xA4#,##0.00","#E0"],"USD","$","US Dollar",{},"ltr",function(val){const i=Math.floor(Math.abs(val)),v=val.toString().replace(/^[^.]*\.?/,"").length;return 1===i&&0===v?1:5}];let LOCALE_DATA={};function registerLocaleData(data,localeId,extraData){"string"!=typeof localeId&&(extraData=localeId,localeId=data[LocaleDataIndex.LocaleId]),localeId=localeId.toLowerCase().replace(/_/g,"-"),LOCALE_DATA[localeId]=data,extraData&&(LOCALE_DATA[localeId][LocaleDataIndex.ExtraData]=extraData)}function findLocaleData(locale){const normalizedLocale=function(locale){return locale.toLowerCase().replace(/_/g,"-")}(locale);let match=getLocaleData(normalizedLocale);if(match)return match;const parentLocale=normalizedLocale.split("-")[0];if(match=getLocaleData(parentLocale),match)return match;if("en"===parentLocale)return localeEn;throw new RuntimeError(701,ngDevMode&&`Missing locale data for the locale "${locale}".`)}function getLocaleCurrencyCode(locale){return findLocaleData(locale)[LocaleDataIndex.CurrencyCode]||null}function getLocalePluralCase(locale){return findLocaleData(locale)[LocaleDataIndex.PluralCase]}function getLocaleData(normalizedLocale){return normalizedLocale in LOCALE_DATA||(LOCALE_DATA[normalizedLocale]=_global.ng&&_global.ng.common&&_global.ng.common.locales&&_global.ng.common.locales[normalizedLocale]),LOCALE_DATA[normalizedLocale]}function unregisterAllLocaleData(){LOCALE_DATA={}}var LocaleDataIndex;!function(LocaleDataIndex){LocaleDataIndex[LocaleDataIndex.LocaleId=0]="LocaleId",LocaleDataIndex[LocaleDataIndex.DayPeriodsFormat=1]="DayPeriodsFormat",LocaleDataIndex[LocaleDataIndex.DayPeriodsStandalone=2]="DayPeriodsStandalone",LocaleDataIndex[LocaleDataIndex.DaysFormat=3]="DaysFormat",LocaleDataIndex[LocaleDataIndex.DaysStandalone=4]="DaysStandalone",LocaleDataIndex[LocaleDataIndex.MonthsFormat=5]="MonthsFormat",LocaleDataIndex[LocaleDataIndex.MonthsStandalone=6]="MonthsStandalone",LocaleDataIndex[LocaleDataIndex.Eras=7]="Eras",LocaleDataIndex[LocaleDataIndex.FirstDayOfWeek=8]="FirstDayOfWeek",LocaleDataIndex[LocaleDataIndex.WeekendRange=9]="WeekendRange",LocaleDataIndex[LocaleDataIndex.DateFormat=10]="DateFormat",LocaleDataIndex[LocaleDataIndex.TimeFormat=11]="TimeFormat",LocaleDataIndex[LocaleDataIndex.DateTimeFormat=12]="DateTimeFormat",LocaleDataIndex[LocaleDataIndex.NumberSymbols=13]="NumberSymbols",LocaleDataIndex[LocaleDataIndex.NumberFormats=14]="NumberFormats",LocaleDataIndex[LocaleDataIndex.CurrencyCode=15]="CurrencyCode",LocaleDataIndex[LocaleDataIndex.CurrencySymbol=16]="CurrencySymbol",LocaleDataIndex[LocaleDataIndex.CurrencyName=17]="CurrencyName",LocaleDataIndex[LocaleDataIndex.Currencies=18]="Currencies",LocaleDataIndex[LocaleDataIndex.Directionality=19]="Directionality",LocaleDataIndex[LocaleDataIndex.PluralCase=20]="PluralCase",LocaleDataIndex[LocaleDataIndex.ExtraData=21]="ExtraData"}(LocaleDataIndex||(LocaleDataIndex={}));const pluralMapping=["zero","one","two","few","many"];const DEFAULT_LOCALE_ID="en-US",ELEMENT_MARKER={marker:"element"},ICU_MARKER={marker:"ICU"};var I18nCreateOpCode;!function(I18nCreateOpCode){I18nCreateOpCode[I18nCreateOpCode.SHIFT=2]="SHIFT",I18nCreateOpCode[I18nCreateOpCode.APPEND_EAGERLY=1]="APPEND_EAGERLY",I18nCreateOpCode[I18nCreateOpCode.COMMENT=2]="COMMENT"}(I18nCreateOpCode||(I18nCreateOpCode={}));let LOCALE_ID$1="en-US";function setLocaleId(localeId){assertDefined(localeId,"Expected localeId to be defined"),"string"==typeof localeId&&(LOCALE_ID$1=localeId.toLowerCase().replace(/_/g,"-"))}function getInsertInFrontOfRNodeWithI18n(parentTNode,currentTNode,lView){const tNodeInsertBeforeIndex=currentTNode.insertBeforeIndex,insertBeforeIndex=Array.isArray(tNodeInsertBeforeIndex)?tNodeInsertBeforeIndex[0]:tNodeInsertBeforeIndex;return null===insertBeforeIndex?getInsertInFrontOfRNodeWithNoI18n(parentTNode,0,lView):(ngDevMode&&assertIndexInRange(lView,insertBeforeIndex),unwrapRNode(lView[insertBeforeIndex]))}function processI18nInsertBefore(renderer,childTNode,lView,childRNode,parentRElement){const tNodeInsertBeforeIndex=childTNode.insertBeforeIndex;if(Array.isArray(tNodeInsertBeforeIndex)){ngDevMode&&assertDomNode(childRNode);let i18nParent=childRNode,anchorRNode=null;if(3&childTNode.type||(anchorRNode=i18nParent,i18nParent=parentRElement),null!==i18nParent&&0==(2&childTNode.flags))for(let i=1;i<tNodeInsertBeforeIndex.length;i++){nativeInsertBefore(renderer,i18nParent,lView[tNodeInsertBeforeIndex[i]],anchorRNode,!1)}}}function addTNodeAndUpdateInsertBeforeIndex(previousTNodes,newTNode){if(ngDevMode&&assertEqual(newTNode.insertBeforeIndex,null,"We expect that insertBeforeIndex is not set"),previousTNodes.push(newTNode),previousTNodes.length>1)for(let i=previousTNodes.length-2;i>=0;i--){const existingTNode=previousTNodes[i];isI18nText(existingTNode)||isNewTNodeCreatedBefore(existingTNode,newTNode)&&null===getInsertBeforeIndex(existingTNode)&&setInsertBeforeIndex(existingTNode,newTNode.index)}}function isI18nText(tNode){return!(64&tNode.type)}function isNewTNodeCreatedBefore(existingTNode,newTNode){return isI18nText(newTNode)||existingTNode.index>newTNode.index}function getInsertBeforeIndex(tNode){const index=tNode.insertBeforeIndex;return Array.isArray(index)?index[0]:index}function setInsertBeforeIndex(tNode,value){const index=tNode.insertBeforeIndex;Array.isArray(index)?index[0]=value:(setI18nHandling(getInsertInFrontOfRNodeWithI18n,processI18nInsertBefore),tNode.insertBeforeIndex=value)}function getTIcu(tView,index){const value=tView.data[index];if(null===value||"string"==typeof value)return null;!ngDevMode||value.hasOwnProperty("tViews")||value.hasOwnProperty("currentCaseLViewIndex")||throwError("We expect to get 'null'|'TIcu'|'TIcuContainer', but got: "+value);const tIcu=value.hasOwnProperty("currentCaseLViewIndex")?value:value.value;return ngDevMode&&assertTIcu(tIcu),tIcu}function createTNodePlaceholder(tView,previousTNodes,index){const tNode=createTNodeAtIndex(tView,index,64,null,null);return addTNodeAndUpdateInsertBeforeIndex(previousTNodes,tNode),tNode}function getCurrentICUCaseIndex(tIcu,lView){const currentCase=lView[tIcu.currentCaseLViewIndex];return null===currentCase?currentCase:currentCase<0?~currentCase:currentCase}function getParentFromIcuCreateOpCode(mergedCode){return mergedCode>>>17}function getRefFromIcuCreateOpCode(mergedCode){return(131070&mergedCode)>>>1}function getInstructionFromIcuCreateOpCode(mergedCode){return 1&mergedCode}let changeMask=0,changeMaskCounter=0;function applyMutableOpCodes(tView,mutableOpCodes,lView,anchorRNode){ngDevMode&&assertDomNode(anchorRNode);const renderer=lView[11];let rootRNode,rootIdx=null;for(let i=0;i<mutableOpCodes.length;i++){const opCode=mutableOpCodes[i];if("string"==typeof opCode){const textNodeIndex=mutableOpCodes[++i];null===lView[textNodeIndex]&&(ngDevMode&&ngDevMode.rendererCreateTextNode++,ngDevMode&&assertIndexInRange(lView,textNodeIndex),lView[textNodeIndex]=createTextNode(renderer,opCode))}else if("number"==typeof opCode)switch(1&opCode){case 0:const parentIdx=getParentFromIcuCreateOpCode(opCode);let insertInFrontOf,parentRNode;if(null===rootIdx&&(rootIdx=parentIdx,rootRNode=nativeParentNode(renderer,anchorRNode)),parentIdx===rootIdx?(insertInFrontOf=anchorRNode,parentRNode=rootRNode):(insertInFrontOf=null,parentRNode=unwrapRNode(lView[parentIdx])),null!==parentRNode){ngDevMode&&assertDomNode(parentRNode);const refIdx=getRefFromIcuCreateOpCode(opCode);ngDevMode&&assertGreaterThan(refIdx,22,"Missing ref");const child=lView[refIdx];ngDevMode&&assertDomNode(child),nativeInsertBefore(renderer,parentRNode,child,insertInFrontOf,!1);const tIcu=getTIcu(tView,refIdx);if(null!==tIcu&&"object"==typeof tIcu){ngDevMode&&assertTIcu(tIcu);const caseIndex=getCurrentICUCaseIndex(tIcu,lView);null!==caseIndex&&applyMutableOpCodes(tView,tIcu.create[caseIndex],lView,lView[tIcu.anchorIdx])}}break;case 1:const elementNodeIndex=opCode>>>1,attrName=mutableOpCodes[++i],attrValue=mutableOpCodes[++i];setElementAttribute(renderer,getNativeByIndex(elementNodeIndex,lView),null,null,attrName,attrValue,null);break;default:if(ngDevMode)throw new RuntimeError(700,`Unable to determine the type of mutate operation for "${opCode}"`);}else switch(opCode){case ICU_MARKER:const commentValue=mutableOpCodes[++i],commentNodeIndex=mutableOpCodes[++i];if(null===lView[commentNodeIndex]){ngDevMode&&assertEqual(typeof commentValue,"string",`Expected "${commentValue}" to be a comment node value`),ngDevMode&&ngDevMode.rendererCreateComment++,ngDevMode&&assertIndexInExpandoRange(lView,commentNodeIndex);attachPatchData(lView[commentNodeIndex]=createCommentNode(renderer,commentValue),lView)}break;case ELEMENT_MARKER:const tagName=mutableOpCodes[++i],elementNodeIndex=mutableOpCodes[++i];if(null===lView[elementNodeIndex]){ngDevMode&&assertEqual(typeof tagName,"string",`Expected "${tagName}" to be an element node tag name`),ngDevMode&&ngDevMode.rendererCreateElement++,ngDevMode&&assertIndexInExpandoRange(lView,elementNodeIndex);attachPatchData(lView[elementNodeIndex]=createElementNode(renderer,tagName,null),lView)}break;default:ngDevMode&&throwError(`Unable to determine the type of mutate operation for "${opCode}"`);}}}function applyUpdateOpCodes(tView,lView,updateOpCodes,bindingsStartIndex,changeMask){for(let i=0;i<updateOpCodes.length;i++){const checkBit=updateOpCodes[i],skipCodes=updateOpCodes[++i];if(checkBit&changeMask){let value="";for(let j=i+1;j<=i+skipCodes;j++){const opCode=updateOpCodes[j];if("string"==typeof opCode)value+=opCode;else if("number"==typeof opCode)if(opCode<0)value+=renderStringify(lView[bindingsStartIndex-opCode]);else{const nodeIndex=opCode>>>2;switch(3&opCode){case 1:const propName=updateOpCodes[++j],sanitizeFn=updateOpCodes[++j],tNodeOrTagName=tView.data[nodeIndex];ngDevMode&&assertDefined(tNodeOrTagName,"Experting TNode or string"),"string"==typeof tNodeOrTagName?setElementAttribute(lView[11],lView[nodeIndex],null,tNodeOrTagName,propName,value,sanitizeFn):elementPropertyInternal(tView,tNodeOrTagName,lView,propName,value,lView[11],sanitizeFn,!1);break;case 0:const rText=lView[nodeIndex];null!==rText&&updateTextNode(lView[11],rText,value);break;case 2:applyIcuSwitchCase(tView,getTIcu(tView,nodeIndex),lView,value);break;case 3:applyIcuUpdateCase(tView,getTIcu(tView,nodeIndex),bindingsStartIndex,lView);}}}}else{const opCode=updateOpCodes[i+1];if(opCode>0&&3==(3&opCode)){const tIcu=getTIcu(tView,opCode>>>2);lView[tIcu.currentCaseLViewIndex]<0&&applyIcuUpdateCase(tView,tIcu,bindingsStartIndex,lView)}}i+=skipCodes}}function applyIcuUpdateCase(tView,tIcu,bindingsStartIndex,lView){ngDevMode&&assertIndexInRange(lView,tIcu.currentCaseLViewIndex);let activeCaseIndex=lView[tIcu.currentCaseLViewIndex];if(null!==activeCaseIndex){let mask=changeMask;activeCaseIndex<0&&(activeCaseIndex=lView[tIcu.currentCaseLViewIndex]=~activeCaseIndex,mask=-1),applyUpdateOpCodes(tView,lView,tIcu.update[activeCaseIndex],bindingsStartIndex,mask)}}function applyIcuSwitchCase(tView,tIcu,lView,value){const caseIndex=function(icuExpression,bindingValue){let index=icuExpression.cases.indexOf(bindingValue);if(-1===index)switch(icuExpression.type){case 1:{const resolvedCase=function(value,locale){const plural=getLocalePluralCase(locale)(parseInt(value,10)),result=pluralMapping[plural];return void 0!==result?result:"other"}(bindingValue,LOCALE_ID$1);index=icuExpression.cases.indexOf(resolvedCase),-1===index&&"other"!==resolvedCase&&(index=icuExpression.cases.indexOf("other"));break}case 0:index=icuExpression.cases.indexOf("other");}return-1===index?null:index}(tIcu,value);if(getCurrentICUCaseIndex(tIcu,lView)!==caseIndex&&(applyIcuSwitchCaseRemove(tView,tIcu,lView),lView[tIcu.currentCaseLViewIndex]=null===caseIndex?null:~caseIndex,null!==caseIndex)){const anchorRNode=lView[tIcu.anchorIdx];anchorRNode&&(ngDevMode&&assertDomNode(anchorRNode),applyMutableOpCodes(tView,tIcu.create[caseIndex],lView,anchorRNode))}}function applyIcuSwitchCaseRemove(tView,tIcu,lView){let activeCaseIndex=getCurrentICUCaseIndex(tIcu,lView);if(null!==activeCaseIndex){const removeCodes=tIcu.remove[activeCaseIndex];for(let i=0;i<removeCodes.length;i++){const nodeOrIcuIndex=removeCodes[i];if(nodeOrIcuIndex>0){const rNode=getNativeByIndex(nodeOrIcuIndex,lView);null!==rNode&&nativeRemoveNode(lView[11],rNode)}else applyIcuSwitchCaseRemove(tView,getTIcu(tView,~nodeOrIcuIndex),lView)}}}function loadIcuContainerVisitor(){const _stack=[];let _lView,_removes,_index=-1;function enterIcu(tIcu,lView){_index=0;const currentCase=getCurrentICUCaseIndex(tIcu,lView);null!==currentCase?(ngDevMode&&assertNumberInRange(currentCase,0,tIcu.cases.length-1),_removes=tIcu.remove[currentCase]):_removes=EMPTY_ARRAY}function icuContainerIteratorNext(){if(_index<_removes.length){const removeOpCode=_removes[_index++];if(ngDevMode&&assertNumber(removeOpCode,"Expecting OpCode number"),removeOpCode>0){const rNode=_lView[removeOpCode];return ngDevMode&&assertDomNode(rNode),rNode}{_stack.push(_index,_removes);const tIcuIndex=~removeOpCode,tIcu=_lView[1].data[tIcuIndex];return ngDevMode&&assertTIcu(tIcu),enterIcu(tIcu,_lView),icuContainerIteratorNext()}}return 0===_stack.length?null:(_removes=_stack.pop(),_index=_stack.pop(),icuContainerIteratorNext())}return function(tIcuContainerNode,lView){for(_lView=lView;_stack.length;)_stack.pop();return ngDevMode&&assertTNodeForLView(tIcuContainerNode,lView),enterIcu(tIcuContainerNode.value,lView),icuContainerIteratorNext}}function i18nCreateOpCodesToString(opcodes){const createOpCodes=opcodes||(Array.isArray(this)?this:[]);let lines=[];for(let i=0;i<createOpCodes.length;i++){const opCode=createOpCodes[i++],text=createOpCodes[i],isComment=(opCode&I18nCreateOpCode.COMMENT)===I18nCreateOpCode.COMMENT,appendNow=(opCode&I18nCreateOpCode.APPEND_EAGERLY)===I18nCreateOpCode.APPEND_EAGERLY,index=opCode>>>I18nCreateOpCode.SHIFT;lines.push(`lView[${index}] = document.${isComment?"createComment":"createText"}(${JSON.stringify(text)});`),appendNow&&lines.push(`parent.appendChild(lView[${index}]);`)}return lines}function i18nUpdateOpCodesToString(opcodes){const parser=new OpCodeParser(opcodes||(Array.isArray(this)?this:[]));let lines=[];function consumeOpCode(value){const ref=value>>>2,opCode=3&value;switch(opCode){case 0:return`(lView[${ref}] as Text).textContent = $$$`;case 1:const attrName=parser.consumeString(),sanitizationFn=parser.consumeFunction();return`(lView[${ref}] as Element).setAttribute('${attrName}', ${sanitizationFn?`(${sanitizationFn})($$$)`:"$$$"})`;case 2:return`icuSwitchCase(${ref}, $$$)`;case 3:return`icuUpdateCase(${ref})`;}throw new Error("unexpected OpCode")}for(;parser.hasMore();){let mask=parser.consumeNumber(),size=parser.consumeNumber();const end=parser.i+size,statements=[];let statement="";for(;parser.i<end;){let value=parser.consumeNumberOrString();if("string"==typeof value)statement+=value;else if(value<0)statement+="${lView[i"+value+"]}";else{const opCodeText=consumeOpCode(value);statements.push(opCodeText.replace("$$$","`"+statement+"`")+";"),statement=""}}lines.push(`if (mask & 0b${mask.toString(2)}) { ${statements.join(" ")} }`)}return lines}function icuCreateOpCodesToString(opcodes){const parser=new OpCodeParser(opcodes||(Array.isArray(this)?this:[]));let lines=[];function consumeOpCode(opCode){const parent=getParentFromIcuCreateOpCode(opCode),ref=getRefFromIcuCreateOpCode(opCode);switch(getInstructionFromIcuCreateOpCode(opCode)){case 0:return`(lView[${parent}] as Element).appendChild(lView[${lastRef}])`;case 1:return`(lView[${ref}] as Element).setAttribute("${parser.consumeString()}", "${parser.consumeString()}")`;}throw new Error("Unexpected OpCode: "+getInstructionFromIcuCreateOpCode(opCode))}let lastRef=-1;for(;parser.hasMore();){let value=parser.consumeNumberStringOrMarker();if(value===ICU_MARKER){const text=parser.consumeString();lastRef=parser.consumeNumber(),lines.push(`lView[${lastRef}] = document.createComment("${text}")`)}else if(value===ELEMENT_MARKER){const text=parser.consumeString();lastRef=parser.consumeNumber(),lines.push(`lView[${lastRef}] = document.createElement("${text}")`)}else if("string"==typeof value)lastRef=parser.consumeNumber(),lines.push(`lView[${lastRef}] = document.createTextNode("${value}")`);else{if("number"!=typeof value)throw new Error("Unexpected value");{const line=consumeOpCode(value);line&&lines.push(line)}}}return lines}function i18nRemoveOpCodesToString(opcodes){const removeCodes=opcodes||(Array.isArray(this)?this:[]);let lines=[];for(let i=0;i<removeCodes.length;i++){const nodeOrIcuIndex=removeCodes[i];nodeOrIcuIndex>0?lines.push(`remove(lView[${nodeOrIcuIndex}])`):lines.push(`removeNestedICU(${~nodeOrIcuIndex})`)}return lines}class OpCodeParser{constructor(codes){this.i=0,this.codes=codes}hasMore(){return this.i<this.codes.length}consumeNumber(){let value=this.codes[this.i++];return assertNumber(value,"expecting number in OpCode"),value}consumeString(){let value=this.codes[this.i++];return assertString(value,"expecting string in OpCode"),value}consumeFunction(){let value=this.codes[this.i++];if(null===value||"function"==typeof value)return value;throw new Error("expecting function in OpCode")}consumeNumberOrString(){let value=this.codes[this.i++];return"string"==typeof value||assertNumber(value,"expecting number or string in OpCode"),value}consumeNumberStringOrMarker(){let value=this.codes[this.i++];return"string"==typeof value||"number"==typeof value||value==ICU_MARKER||value==ELEMENT_MARKER||assertNumber(value,"expecting number, string, ICU_MARKER or ELEMENT_MARKER in OpCode"),value}}const BINDING_REGEXP=/�(\d+):?\d*�/gi,ICU_REGEXP=/({\s*�\d+:?\d*�\s*,\s*\S{6}\s*,[\s\S]*})/gi,NESTED_ICU=/�(\d+)�/,ICU_BLOCK_REGEXP=/^\s*(�\d+:?\d*�)\s*,\s*(select|plural)\s*,/,SUBTEMPLATE_REGEXP=/�\/?\*(\d+:\d+)�/gi,PH_REGEXP=/�(\/?[#*]\d+):?\d*�/gi,NGSP_UNICODE_REGEXP=/\uE500/g;function i18nStartFirstCreatePass(tView,parentTNodeIndex,lView,index,message,subTemplateIndex){const rootTNode=getCurrentParentTNode(),createOpCodes=[],updateOpCodes=[],existingTNodeStack=[[]];ngDevMode&&(attachDebugGetter(createOpCodes,i18nCreateOpCodesToString),attachDebugGetter(updateOpCodes,i18nUpdateOpCodesToString)),message=function(message,subTemplateIndex){if(function(subTemplateIndex){return-1===subTemplateIndex}(subTemplateIndex))return removeInnerTemplateTranslation(message);{const start=message.indexOf(`:${subTemplateIndex}�`)+2+subTemplateIndex.toString().length,end=message.search(new RegExp(`�\\/\\*\\d+:${subTemplateIndex}�`));return removeInnerTemplateTranslation(message.substring(start,end))}}(message,subTemplateIndex);const msgParts=(value=message,value.replace(NGSP_UNICODE_REGEXP," ")).split(PH_REGEXP);var value;for(let i=0;i<msgParts.length;i++){let value=msgParts[i];if(0==(1&i)){const parts=i18nParseTextIntoPartsAndICU(value);for(let j=0;j<parts.length;j++){let part=parts[j];if(0==(1&j)){const text=part;ngDevMode&&assertString(text,"Parsed ICU part should be string"),""!==text&&i18nStartFirstCreatePassProcessTextNode(tView,rootTNode,existingTNodeStack[0],createOpCodes,updateOpCodes,lView,text)}else{const icuExpression=part;if("object"!=typeof icuExpression)throw new Error(`Unable to parse ICU expression in "${message}" message.`);const icuNodeIndex=createTNodeAndAddOpCode(tView,rootTNode,existingTNodeStack[0],lView,createOpCodes,ngDevMode?`ICU ${index}:${icuExpression.mainBinding}`:"",!0).index;ngDevMode&&assertGreaterThanOrEqual(icuNodeIndex,22,"Index must be in absolute LView offset"),icuStart(tView,lView,updateOpCodes,parentTNodeIndex,icuExpression,icuNodeIndex)}}}else{const isClosing=47===value.charCodeAt(0),type=value.charCodeAt(isClosing?1:0);ngDevMode&&assertOneOf(type,42,35);const index=22+Number.parseInt(value.substring(isClosing?2:1));if(isClosing)existingTNodeStack.shift(),setCurrentTNode(getCurrentParentTNode(),!1);else{const tNode=createTNodePlaceholder(tView,existingTNodeStack[0],index);existingTNodeStack.unshift([]),setCurrentTNode(tNode,!0)}}}tView.data[index]={create:createOpCodes,update:updateOpCodes}}function createTNodeAndAddOpCode(tView,rootTNode,existingTNodes,lView,createOpCodes,text,isICU){const i18nNodeIdx=allocExpando(tView,lView,1,null);let opCode=i18nNodeIdx<<I18nCreateOpCode.SHIFT,parentTNode=getCurrentParentTNode();var loader;rootTNode===parentTNode&&(parentTNode=null),null===parentTNode&&(opCode|=I18nCreateOpCode.APPEND_EAGERLY),isICU&&(opCode|=I18nCreateOpCode.COMMENT,loader=loadIcuContainerVisitor,void 0===_icuContainerIterate&&(_icuContainerIterate=loader())),createOpCodes.push(opCode,null===text?"":text);const tNode=createTNodeAtIndex(tView,i18nNodeIdx,isICU?32:1,null===text?ngDevMode?"{{?}}":"":text,null);addTNodeAndUpdateInsertBeforeIndex(existingTNodes,tNode);const tNodeIdx=tNode.index;return setCurrentTNode(tNode,!1),null!==parentTNode&&rootTNode!==parentTNode&&function(tNode,index){ngDevMode&&assertTNode(tNode);let insertBeforeIndex=tNode.insertBeforeIndex;null===insertBeforeIndex?(setI18nHandling(getInsertInFrontOfRNodeWithI18n,processI18nInsertBefore),insertBeforeIndex=tNode.insertBeforeIndex=[null,index]):(assertEqual(Array.isArray(insertBeforeIndex),!0,"Expecting array here"),insertBeforeIndex.push(index))}(parentTNode,tNodeIdx),tNode}function i18nStartFirstCreatePassProcessTextNode(tView,rootTNode,existingTNodes,createOpCodes,updateOpCodes,lView,text){const hasBinding=text.match(BINDING_REGEXP),tNode=createTNodeAndAddOpCode(tView,rootTNode,existingTNodes,lView,createOpCodes,hasBinding?null:text,!1);hasBinding&&generateBindingUpdateOpCodes(updateOpCodes,text,tNode.index,null,0,null)}function generateBindingUpdateOpCodes(updateOpCodes,str,destinationNode,attrName,bindingStart,sanitizeFn){ngDevMode&&assertGreaterThanOrEqual(destinationNode,22,"Index must be in absolute LView offset");const maskIndex=updateOpCodes.length,sizeIndex=maskIndex+1;updateOpCodes.push(null,null);const startIndex=maskIndex+2;ngDevMode&&attachDebugGetter(updateOpCodes,i18nUpdateOpCodesToString);const textParts=str.split(BINDING_REGEXP);let mask=0;for(let j=0;j<textParts.length;j++){const textValue=textParts[j];if(1&j){const bindingIndex=bindingStart+parseInt(textValue,10);updateOpCodes.push(-1-bindingIndex),mask|=toMaskBit(bindingIndex)}else""!==textValue&&updateOpCodes.push(textValue)}return updateOpCodes.push(destinationNode<<2|(attrName?1:0)),attrName&&updateOpCodes.push(attrName,sanitizeFn),updateOpCodes[maskIndex]=mask,updateOpCodes[sizeIndex]=updateOpCodes.length-startIndex,mask}function countBindings(opCodes){let count=0;for(let i=0;i<opCodes.length;i++){const opCode=opCodes[i];"number"==typeof opCode&&opCode<0&&count++}return count}function toMaskBit(bindingIndex){return 1<<Math.min(bindingIndex,31)}function removeInnerTemplateTranslation(message){let match,tagMatched,res="",index=0,inTemplate=!1;for(;null!==(match=SUBTEMPLATE_REGEXP.exec(message));)inTemplate?match[0]===`�/*${tagMatched}�`&&(index=match.index,inTemplate=!1):(res+=message.substring(index,match.index+match[0].length),tagMatched=match[1],inTemplate=!0);return ngDevMode&&assertEqual(inTemplate,!1,`Tag mismatch: unable to find the end of the sub-template in the translation "${message}"`),res+=message.slice(index),res}function icuStart(tView,lView,updateOpCodes,parentIdx,icuExpression,anchorIdx){ngDevMode&&assertDefined(icuExpression,"ICU expression must be defined");let bindingMask=0;const tIcu={type:icuExpression.type,currentCaseLViewIndex:allocExpando(tView,lView,1,null),anchorIdx:anchorIdx,cases:[],create:[],remove:[],update:[]};!function(update,icuExpression,index){update.push(toMaskBit(icuExpression.mainBinding),2,-1-icuExpression.mainBinding,index<<2|2)}(updateOpCodes,icuExpression,anchorIdx),function(tView,index,tIcu){const tNode=tView.data[index];ngDevMode&&assertEqual(null===tNode||tNode.hasOwnProperty("tViews"),!0,"We expect to get 'null'|'TIcuContainer'"),null===tNode?tView.data[index]=tIcu:(ngDevMode&&assertTNodeType(tNode,32),tNode.value=tIcu)}(tView,anchorIdx,tIcu);const values=icuExpression.values;for(let i=0;i<values.length;i++){const valueArr=values[i],nestedIcus=[];for(let j=0;j<valueArr.length;j++){const value=valueArr[j];if("string"!=typeof value){const icuIndex=nestedIcus.push(value)-1;valueArr[j]=`\x3c!--�${icuIndex}�--\x3e`}}bindingMask=parseIcuCase(tView,tIcu,lView,updateOpCodes,parentIdx,icuExpression.cases[i],valueArr.join(""),nestedIcus)|bindingMask}bindingMask&&function(update,bindingMask,index){update.push(bindingMask,1,index<<2|3)}(updateOpCodes,bindingMask,anchorIdx)}function parseICUBlock(pattern){const cases=[],values=[];let icuType=1,mainBinding=0;const parts=i18nParseTextIntoPartsAndICU(pattern=pattern.replace(ICU_BLOCK_REGEXP,function(str,binding,type){return icuType="select"===type?0:1,mainBinding=parseInt(binding.slice(1),10),""}));for(let pos=0;pos<parts.length;){let key=parts[pos++].trim();1===icuType&&(key=key.replace(/\s*(?:=)?(\w+)\s*/,"$1")),key.length&&cases.push(key);const blocks=i18nParseTextIntoPartsAndICU(parts[pos++]);cases.length>values.length&&values.push(blocks)}return{type:icuType,mainBinding:mainBinding,cases:cases,values:values}}function i18nParseTextIntoPartsAndICU(pattern){if(!pattern)return[];let prevPos=0;const braceStack=[],results=[],braces=/[{}]/g;let match;for(braces.lastIndex=0;match=braces.exec(pattern);){const pos=match.index;if("}"==match[0]){if(braceStack.pop(),0==braceStack.length){const block=pattern.substring(prevPos,pos);ICU_BLOCK_REGEXP.test(block)?results.push(parseICUBlock(block)):results.push(block),prevPos=pos+1}}else{if(0==braceStack.length){const substring=pattern.substring(prevPos,pos);results.push(substring),prevPos=pos+1}braceStack.push("{")}}const substring=pattern.substring(prevPos);return results.push(substring),results}function parseIcuCase(tView,tIcu,lView,updateOpCodes,parentIdx,caseName,unsafeCaseHtml,nestedIcus){const create=[],remove=[],update=[];ngDevMode&&(attachDebugGetter(create,icuCreateOpCodesToString),attachDebugGetter(remove,i18nRemoveOpCodesToString),attachDebugGetter(update,i18nUpdateOpCodesToString)),tIcu.cases.push(caseName),tIcu.create.push(create),tIcu.remove.push(remove),tIcu.update.push(update);const inertBodyElement=getInertBodyHelper(getDocument()).getInertBodyElement(unsafeCaseHtml);ngDevMode&&assertDefined(inertBodyElement,"Unable to generate inert body element");const inertRootNode=getTemplateContent(inertBodyElement)||inertBodyElement;return inertRootNode?walkIcuTree(tView,tIcu,lView,updateOpCodes,create,remove,update,inertRootNode,parentIdx,nestedIcus,0):0}function walkIcuTree(tView,tIcu,lView,sharedUpdateOpCodes,create,remove,update,parentNode,parentIdx,nestedIcus,depth){let bindingMask=0,currentNode=parentNode.firstChild;for(;currentNode;){const newIndex=allocExpando(tView,lView,1,null);switch(currentNode.nodeType){case Node.ELEMENT_NODE:const element=currentNode,tagName=element.tagName.toLowerCase();if(VALID_ELEMENTS.hasOwnProperty(tagName)){addCreateNodeAndAppend(create,ELEMENT_MARKER,tagName,parentIdx,newIndex),tView.data[newIndex]=tagName;const elAttrs=element.attributes;for(let i=0;i<elAttrs.length;i++){const attr=elAttrs.item(i),lowerAttrName=attr.name.toLowerCase();!!attr.value.match(BINDING_REGEXP)?VALID_ATTRS.hasOwnProperty(lowerAttrName)?URI_ATTRS[lowerAttrName]?generateBindingUpdateOpCodes(update,attr.value,newIndex,attr.name,0,_sanitizeUrl):generateBindingUpdateOpCodes(update,attr.value,newIndex,attr.name,0,null):ngDevMode&&console.warn(`WARNING: ignoring unsafe attribute value ${lowerAttrName} on element ${tagName} (see https://g.co/ng/security#xss)`):addCreateAttribute(create,newIndex,attr)}bindingMask=walkIcuTree(tView,tIcu,lView,sharedUpdateOpCodes,create,remove,update,currentNode,newIndex,nestedIcus,depth+1)|bindingMask,addRemoveNode(remove,newIndex,depth)}break;case Node.TEXT_NODE:const value=currentNode.textContent||"",hasBinding=value.match(BINDING_REGEXP);addCreateNodeAndAppend(create,null,hasBinding?"":value,parentIdx,newIndex),addRemoveNode(remove,newIndex,depth),hasBinding&&(bindingMask=generateBindingUpdateOpCodes(update,value,newIndex,null,0,null)|bindingMask);break;case Node.COMMENT_NODE:const isNestedIcu=NESTED_ICU.exec(currentNode.textContent||"");if(isNestedIcu){const nestedIcuIndex=parseInt(isNestedIcu[1],10),icuExpression=nestedIcus[nestedIcuIndex];addCreateNodeAndAppend(create,ICU_MARKER,ngDevMode?`nested ICU ${nestedIcuIndex}`:"",parentIdx,newIndex),icuStart(tView,lView,sharedUpdateOpCodes,parentIdx,icuExpression,newIndex),addRemoveNestedIcu(remove,newIndex,depth)}}currentNode=currentNode.nextSibling}return bindingMask}function addRemoveNode(remove,index,depth){0===depth&&remove.push(index)}function addRemoveNestedIcu(remove,index,depth){0===depth&&(remove.push(~index),remove.push(index))}function addCreateNodeAndAppend(create,marker,text,appendToParentIdx,createAtIdx){var opCode,parentIdx,refIdx;null!==marker&&create.push(marker),create.push(text,createAtIdx,(opCode=0,parentIdx=appendToParentIdx,refIdx=createAtIdx,ngDevMode&&assertGreaterThanOrEqual(parentIdx,0,"Missing parent index"),ngDevMode&&assertGreaterThan(refIdx,0,"Missing ref index"),opCode|parentIdx<<17|refIdx<<1))}function addCreateAttribute(create,newIndex,attr){create.push(newIndex<<1|1,attr.name,attr.value)}const PP_MULTI_VALUE_PLACEHOLDERS_REGEXP=/\[(�.+?�?)\]/,PP_PLACEHOLDERS_REGEXP=/\[(�.+?�?)\]|(�\/?\*\d+:\d+�)/g,PP_ICU_VARS_REGEXP=/({\s*)(VAR_(PLURAL|SELECT)(_\d+)?)(\s*,)/g,PP_ICU_PLACEHOLDERS_REGEXP=/{([A-Z0-9_]+)}/g,PP_ICUS_REGEXP=/�I18N_EXP_(ICU(_\d+)?)�/g,PP_CLOSE_TEMPLATE_REGEXP=/\/\*/,PP_TEMPLATE_ID_REGEXP=/\d+\:(\d+)/;function ɵɵi18nStart(index,messageIndex,subTemplateIndex=-1){const tView=getTView(),lView=getLView(),adjustedIndex=22+index;ngDevMode&&assertDefined(tView,"tView should be defined");const message=getConstant(tView.consts,messageIndex),parentTNode=getCurrentParentTNode();tView.firstCreatePass&&i18nStartFirstCreatePass(tView,null===parentTNode?0:parentTNode.index,lView,adjustedIndex,message,subTemplateIndex);const tI18n=tView.data[adjustedIndex],parentRNode=getClosestRElement(tView,parentTNode===lView[6]?null:parentTNode,lView),insertInFrontOf=parentTNode&&8&parentTNode.type?lView[parentTNode.index]:null;!function(lView,createOpCodes,parentRNode,insertInFrontOf){const renderer=lView[11];for(let i=0;i<createOpCodes.length;i++){const opCode=createOpCodes[i++],text=createOpCodes[i],isComment=(opCode&I18nCreateOpCode.COMMENT)===I18nCreateOpCode.COMMENT,appendNow=(opCode&I18nCreateOpCode.APPEND_EAGERLY)===I18nCreateOpCode.APPEND_EAGERLY,index=opCode>>>I18nCreateOpCode.SHIFT;let rNode=lView[index];null===rNode&&(rNode=lView[index]=isComment?renderer.createComment(text):createTextNode(renderer,text)),appendNow&&null!==parentRNode&&nativeInsertBefore(renderer,parentRNode,rNode,insertInFrontOf,!1)}}(lView,tI18n.create,parentRNode,insertInFrontOf),setInI18nBlock(!0)}function ɵɵi18nEnd(){setInI18nBlock(!1)}function ɵɵi18n(index,messageIndex,subTemplateIndex){ɵɵi18nStart(index,messageIndex,subTemplateIndex),ɵɵi18nEnd()}function ɵɵi18nAttributes(index,attrsIndex){const tView=getTView();ngDevMode&&assertDefined(tView,"tView should be defined");!function(tView,index,values){const previousElementIndex=getCurrentTNode().index,updateOpCodes=[];if(ngDevMode&&attachDebugGetter(updateOpCodes,i18nUpdateOpCodesToString),tView.firstCreatePass&&null===tView.data[index]){for(let i=0;i<values.length;i+=2){const attrName=values[i],message=values[i+1];if(""!==message){if(ICU_REGEXP.test(message))throw new Error(`ICU expressions are not supported in attributes. Message: "${message}".`);generateBindingUpdateOpCodes(updateOpCodes,message,previousElementIndex,attrName,countBindings(updateOpCodes),null)}}tView.data[index]=updateOpCodes}}(tView,index+22,getConstant(tView.consts,attrsIndex))}function ɵɵi18nExp(value){const lView=getLView();return bindingUpdated(lView,nextBindingIndex(),value)&&(changeMask|=1<<Math.min(changeMaskCounter,31)),changeMaskCounter++,ɵɵi18nExp}function ɵɵi18nApply(index){!function(tView,lView,index){if(changeMaskCounter>0){ngDevMode&&assertDefined(tView,"tView should be defined");const tI18n=tView.data[index];applyUpdateOpCodes(tView,lView,Array.isArray(tI18n)?tI18n:tI18n.update,getBindingIndex()-changeMaskCounter-1,changeMask)}changeMask=0,changeMaskCounter=0}(getTView(),getLView(),index+22)}function ɵɵi18nPostprocess(message,replacements={}){return function(message,replacements={}){let result=message;if(PP_MULTI_VALUE_PLACEHOLDERS_REGEXP.test(message)){const matches={},templateIdsStack=[0];result=result.replace(PP_PLACEHOLDERS_REGEXP,(m,phs,tmpl)=>{const content=phs||tmpl,placeholders=matches[content]||[];if(placeholders.length||(content.split("|").forEach(placeholder=>{const match=placeholder.match(PP_TEMPLATE_ID_REGEXP),templateId=match?parseInt(match[1],10):0,isCloseTemplateTag=PP_CLOSE_TEMPLATE_REGEXP.test(placeholder);placeholders.push([templateId,isCloseTemplateTag,placeholder])}),matches[content]=placeholders),!placeholders.length)throw new Error(`i18n postprocess: unmatched placeholder - ${content}`);const currentTemplateId=templateIdsStack[templateIdsStack.length-1];let idx=0;for(let i=0;i<placeholders.length;i++)if(placeholders[i][0]===currentTemplateId){idx=i;break}const[templateId,isCloseTemplateTag,placeholder]=placeholders[idx];return isCloseTemplateTag?templateIdsStack.pop():currentTemplateId!==templateId&&templateIdsStack.push(templateId),placeholders.splice(idx,1),placeholder})}return Object.keys(replacements).length?(result=result.replace(PP_ICU_VARS_REGEXP,(match,start,key,_type,_idx,end)=>replacements.hasOwnProperty(key)?`${start}${replacements[key]}${end}`:match),result=result.replace(PP_ICU_PLACEHOLDERS_REGEXP,(match,key)=>replacements.hasOwnProperty(key)?replacements[key]:match),result=result.replace(PP_ICUS_REGEXP,(match,key)=>{if(replacements.hasOwnProperty(key)){const list=replacements[key];if(!list.length)throw new Error(`i18n postprocess: unmatched ICU - ${match} with key: ${key}`);return list.shift()}return match}),result):result}(message,replacements)}function resolveProvider(provider,tInjectables,lInjectablesBlueprint,isComponent,isViewProvider){if(provider=resolveForwardRef(provider),Array.isArray(provider))for(let i=0;i<provider.length;i++)resolveProvider(provider[i],tInjectables,lInjectablesBlueprint,isComponent,isViewProvider);else{const tView=getTView(),lView=getLView();let token=isTypeProvider(provider)?provider:resolveForwardRef(provider.provide),providerFactory=providerToFactory(provider);const tNode=getCurrentTNode(),beginIndex=1048575&tNode.providerIndexes,endIndex=tNode.directiveStart,cptViewProvidersCount=tNode.providerIndexes>>20;if(isTypeProvider(provider)||!provider.multi){const factory=new NodeInjectorFactory(providerFactory,isViewProvider,ɵɵdirectiveInject),existingFactoryIndex=indexOf(token,tInjectables,isViewProvider?beginIndex:beginIndex+cptViewProvidersCount,endIndex);-1===existingFactoryIndex?(diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,lView),tView,token),registerDestroyHooksIfSupported(tView,provider,tInjectables.length),tInjectables.push(token),tNode.directiveStart++,tNode.directiveEnd++,isViewProvider&&(tNode.providerIndexes+=1048576),lInjectablesBlueprint.push(factory),lView.push(factory)):(lInjectablesBlueprint[existingFactoryIndex]=factory,lView[existingFactoryIndex]=factory)}else{const existingProvidersFactoryIndex=indexOf(token,tInjectables,beginIndex+cptViewProvidersCount,endIndex),existingViewProvidersFactoryIndex=indexOf(token,tInjectables,beginIndex,beginIndex+cptViewProvidersCount),doesProvidersFactoryExist=existingProvidersFactoryIndex>=0&&lInjectablesBlueprint[existingProvidersFactoryIndex],doesViewProvidersFactoryExist=existingViewProvidersFactoryIndex>=0&&lInjectablesBlueprint[existingViewProvidersFactoryIndex];if(isViewProvider&&!doesViewProvidersFactoryExist||!isViewProvider&&!doesProvidersFactoryExist){diPublicInInjector(getOrCreateNodeInjectorForNode(tNode,lView),tView,token);const factory=function(factoryFn,index,isViewProvider,isComponent,f){const factory=new NodeInjectorFactory(factoryFn,isViewProvider,ɵɵdirectiveInject);return factory.multi=[],factory.index=index,factory.componentProviders=0,multiFactoryAdd(factory,f,isComponent&&!isViewProvider),factory}(isViewProvider?multiViewProvidersFactoryResolver:multiProvidersFactoryResolver,lInjectablesBlueprint.length,isViewProvider,isComponent,providerFactory);!isViewProvider&&doesViewProvidersFactoryExist&&(lInjectablesBlueprint[existingViewProvidersFactoryIndex].providerFactory=factory),registerDestroyHooksIfSupported(tView,provider,tInjectables.length,0),tInjectables.push(token),tNode.directiveStart++,tNode.directiveEnd++,isViewProvider&&(tNode.providerIndexes+=1048576),lInjectablesBlueprint.push(factory),lView.push(factory)}else{registerDestroyHooksIfSupported(tView,provider,existingProvidersFactoryIndex>-1?existingProvidersFactoryIndex:existingViewProvidersFactoryIndex,multiFactoryAdd(lInjectablesBlueprint[isViewProvider?existingViewProvidersFactoryIndex:existingProvidersFactoryIndex],providerFactory,!isViewProvider&&isComponent))}!isViewProvider&&isComponent&&doesViewProvidersFactoryExist&&lInjectablesBlueprint[existingViewProvidersFactoryIndex].componentProviders++}}}function registerDestroyHooksIfSupported(tView,provider,contextIndex,indexInFactory){const providerIsTypeProvider=isTypeProvider(provider),providerIsClassProvider=!!provider.useClass;if(providerIsTypeProvider||providerIsClassProvider){const ngOnDestroy=(providerIsClassProvider?resolveForwardRef(provider.useClass):provider).prototype.ngOnDestroy;if(ngOnDestroy){const hooks=tView.destroyHooks||(tView.destroyHooks=[]);if(!providerIsTypeProvider&&provider.multi){ngDevMode&&assertDefined(indexInFactory,"indexInFactory when registering multi factory destroy hook");const existingCallbacksIndex=hooks.indexOf(contextIndex);-1===existingCallbacksIndex?hooks.push(contextIndex,[indexInFactory,ngOnDestroy]):hooks[existingCallbacksIndex+1].push(indexInFactory,ngOnDestroy)}else hooks.push(contextIndex,ngOnDestroy)}}}function multiFactoryAdd(multiFactory,factory,isComponentProvider){return isComponentProvider&&multiFactory.componentProviders++,multiFactory.multi.push(factory)-1}function indexOf(item,arr,begin,end){for(let i=begin;i<end;i++)if(arr[i]===item)return i;return-1}function multiProvidersFactoryResolver(_,tData,lData,tNode){return multiResolve(this.multi,[])}function multiViewProvidersFactoryResolver(_,tData,lView,tNode){const factories=this.multi;let result;if(this.providerFactory){const componentCount=this.providerFactory.componentProviders,multiProviders=getNodeInjectable(lView,lView[1],this.providerFactory.index,tNode);result=multiProviders.slice(0,componentCount),multiResolve(factories,result);for(let i=componentCount;i<multiProviders.length;i++)result.push(multiProviders[i])}else result=[],multiResolve(factories,result);return result}function multiResolve(factories,result){for(let i=0;i<factories.length;i++){const factory=factories[i];result.push(factory())}return result}function ɵɵProvidersFeature(providers,viewProviders=[]){return definition=>{definition.providersResolver=(def,processProvidersFn)=>function(def,providers,viewProviders){const tView=getTView();if(tView.firstCreatePass){const isComponent=isComponentDef(def);resolveProvider(viewProviders,tView.data,tView.blueprint,isComponent,!0),resolveProvider(providers,tView.data,tView.blueprint,isComponent,!1)}}(def,processProvidersFn?processProvidersFn(providers):providers,viewProviders)}}class NgModuleRef$1{}class NgModuleFactory$1{}function createNgModule(ngModule,parentInjector){return new NgModuleRef(ngModule,parentInjector??null)}const createNgModuleRef=createNgModule;class NgModuleRef extends NgModuleRef$1{constructor(ngModuleType,_parent){super(),this._parent=_parent,this._bootstrapComponents=[],this.destroyCbs=[],this.componentFactoryResolver=new ComponentFactoryResolver(this);const ngModuleDef=getNgModuleDef(ngModuleType);ngDevMode&&assertDefined(ngModuleDef,`NgModule '${stringify(ngModuleType)}' is not a subtype of 'NgModuleType'.`),this._bootstrapComponents=maybeUnwrapFn(ngModuleDef.bootstrap),this._r3Injector=createInjectorWithoutInjectorInstances(ngModuleType,_parent,[{provide:NgModuleRef$1,useValue:this},{provide:ComponentFactoryResolver$1,useValue:this.componentFactoryResolver}],stringify(ngModuleType),new Set(["environment"])),this._r3Injector.resolveInjectorInitializers(),this.instance=this._r3Injector.get(ngModuleType)}get injector(){return this._r3Injector}destroy(){ngDevMode&&assertDefined(this.destroyCbs,"NgModule already destroyed");const injector=this._r3Injector;!injector.destroyed&&injector.destroy(),this.destroyCbs.forEach(fn=>fn()),this.destroyCbs=null}onDestroy(callback){ngDevMode&&assertDefined(this.destroyCbs,"NgModule already destroyed"),this.destroyCbs.push(callback)}}class NgModuleFactory extends NgModuleFactory$1{constructor(moduleType){super(),this.moduleType=moduleType}create(parentInjector){return new NgModuleRef(this.moduleType,parentInjector)}}class EnvironmentNgModuleRefAdapter extends NgModuleRef$1{constructor(providers,parent,source){super(),this.componentFactoryResolver=new ComponentFactoryResolver(this),this.instance=null;const injector=new R3Injector([...providers,{provide:NgModuleRef$1,useValue:this},{provide:ComponentFactoryResolver$1,useValue:this.componentFactoryResolver}],parent||getNullInjector(),source,new Set(["environment"]));this.injector=injector,injector.resolveInjectorInitializers()}destroy(){this.injector.destroy()}onDestroy(callback){this.injector.onDestroy(callback)}}function createEnvironmentInjector(providers,parent,debugName=null){return new EnvironmentNgModuleRefAdapter(providers,parent,debugName).injector}class StandaloneService{constructor(_injector){this._injector=_injector,this.cachedInjectors=new Map}getOrCreateStandaloneInjector(componentDef){if(!componentDef.standalone)return null;if(!this.cachedInjectors.has(componentDef.id)){const providers=internalImportProvidersFrom(!1,componentDef.type),standaloneInjector=providers.length>0?createEnvironmentInjector([providers],this._injector,`Standalone[${componentDef.type.name}]`):null;this.cachedInjectors.set(componentDef.id,standaloneInjector)}return this.cachedInjectors.get(componentDef.id)}ngOnDestroy(){try{for(const injector of this.cachedInjectors.values())null!==injector&&injector.destroy()}finally{this.cachedInjectors.clear()}}}function ɵɵStandaloneFeature(definition){definition.getStandaloneInjector=parentInjector=>parentInjector.get(StandaloneService).getOrCreateStandaloneInjector(definition)}function getComponent(element){ngDevMode&&assertDomElement(element);const context=getLContext(element);if(null===context)return null;if(void 0===context.component){const lView=context.lView;if(null===lView)return null;context.component=function(nodeIndex,lView){const tNode=lView[1].data[nodeIndex];let directiveStartIndex=tNode.directiveStart;return 2&tNode.flags?lView[directiveStartIndex]:null}(context.nodeIndex,lView)}return context.component}function getContext(element){assertDomElement(element);const context=getLContext(element),lView=context?context.lView:null;return null===lView?null:lView[8]}function getOwningComponent(elementOrDir){const context=getLContext(elementOrDir);let parent,lView=context?context.lView:null;if(null===lView)return null;for(;2===lView[1].type&&(parent=getLViewParent(lView));)lView=parent;return 256&lView[2]?null:lView[8]}function getRootComponents(elementOrDir){const lView=readPatchedLView(elementOrDir);return null!==lView?[getRootContext(lView)]:[]}function getInjector(elementOrDir){const context=getLContext(elementOrDir),lView=context?context.lView:null;if(null===lView)return Injector.NULL;const tNode=lView[1].data[context.nodeIndex];return new NodeInjector(tNode,lView)}function getDirectives(node){if(node instanceof Text)return[];const context=getLContext(node),lView=context?context.lView:null;if(null===lView)return[];const tView=lView[1],nodeIndex=context.nodeIndex;return tView?.data[nodeIndex]?(void 0===context.directives&&(context.directives=getDirectivesAtNodeIndex(nodeIndex,lView,!1)),null===context.directives?[]:[...context.directives]):[]}function getDirectiveMetadata$1(directiveOrComponentInstance){const{constructor:constructor}=directiveOrComponentInstance;if(!constructor)throw new Error("Unable to find the instance constructor");const componentDef=getComponentDef(constructor);if(componentDef)return{inputs:componentDef.inputs,outputs:componentDef.outputs,encapsulation:componentDef.encapsulation,changeDetection:componentDef.onPush?ChangeDetectionStrategy.OnPush:ChangeDetectionStrategy.Default};const directiveDef=getDirectiveDef(constructor);return directiveDef?{inputs:directiveDef.inputs,outputs:directiveDef.outputs}:null}function getHostElement(componentOrDirective){return getLContext(componentOrDirective).native}function getListeners(element){ngDevMode&&assertDomElement(element);const lContext=getLContext(element),lView=null===lContext?null:lContext.lView;if(null===lView)return[];const tView=lView[1],lCleanup=lView[7],tCleanup=tView.cleanup,listeners=[];if(tCleanup&&lCleanup)for(let i=0;i<tCleanup.length;){const firstParam=tCleanup[i++],secondParam=tCleanup[i++];if("string"==typeof firstParam){const name=firstParam,listenerElement=unwrapRNode(lView[secondParam]),callback=lCleanup[tCleanup[i++]],useCaptureOrIndx=tCleanup[i++],type="boolean"==typeof useCaptureOrIndx||useCaptureOrIndx>=0?"dom":"output",useCapture="boolean"==typeof useCaptureOrIndx&&useCaptureOrIndx;element==listenerElement&&listeners.push({element:element,name:name,callback:callback,useCapture:useCapture,type:type})}}return listeners.sort(sortListeners),listeners}function sortListeners(a,b){return a.name==b.name?0:a.name<b.name?-1:1}function assertDomElement(value){if("undefined"!=typeof Element&&!(value instanceof Element))throw new Error("Expecting instance of DOM Element")}function setClassMetadata(type,decorators,ctorParameters,propDecorators){return noSideEffects(()=>{const clazz=type;null!==decorators&&(clazz.hasOwnProperty("decorators")&&void 0!==clazz.decorators?clazz.decorators.push(...decorators):clazz.decorators=decorators),null!==ctorParameters&&(clazz.ctorParameters=ctorParameters),null!==propDecorators&&(clazz.hasOwnProperty("propDecorators")&&void 0!==clazz.propDecorators?clazz.propDecorators={...clazz.propDecorators,...propDecorators}:clazz.propDecorators=propDecorators)})}function ɵɵpureFunction0(slotOffset,pureFn,thisArg){const bindingIndex=getBindingRoot()+slotOffset,lView=getLView();return lView[bindingIndex]===NO_CHANGE?updateBinding(lView,bindingIndex,thisArg?pureFn.call(thisArg):pureFn()):getBinding(lView,bindingIndex)}function ɵɵpureFunction1(slotOffset,pureFn,exp,thisArg){return pureFunction1Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp,thisArg)}function ɵɵpureFunction2(slotOffset,pureFn,exp1,exp2,thisArg){return pureFunction2Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp1,exp2,thisArg)}function ɵɵpureFunction3(slotOffset,pureFn,exp1,exp2,exp3,thisArg){return pureFunction3Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp1,exp2,exp3,thisArg)}function ɵɵpureFunction4(slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg){return pureFunction4Internal(getLView(),getBindingRoot(),slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg)}function ɵɵpureFunction5(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,thisArg){const bindingIndex=getBindingRoot()+slotOffset,lView=getLView(),different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated(lView,bindingIndex+4,exp5)||different?updateBinding(lView,bindingIndex+5,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5):pureFn(exp1,exp2,exp3,exp4,exp5)):getBinding(lView,bindingIndex+5)}function ɵɵpureFunction6(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,thisArg){const bindingIndex=getBindingRoot()+slotOffset,lView=getLView(),different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated2(lView,bindingIndex+4,exp5,exp6)||different?updateBinding(lView,bindingIndex+6,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6):pureFn(exp1,exp2,exp3,exp4,exp5,exp6)):getBinding(lView,bindingIndex+6)}function ɵɵpureFunction7(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,thisArg){const bindingIndex=getBindingRoot()+slotOffset,lView=getLView();let different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated3(lView,bindingIndex+4,exp5,exp6,exp7)||different?updateBinding(lView,bindingIndex+7,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7)):getBinding(lView,bindingIndex+7)}function ɵɵpureFunction8(slotOffset,pureFn,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8,thisArg){const bindingIndex=getBindingRoot()+slotOffset,lView=getLView(),different=bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4);return bindingUpdated4(lView,bindingIndex+4,exp5,exp6,exp7,exp8)||different?updateBinding(lView,bindingIndex+8,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8):pureFn(exp1,exp2,exp3,exp4,exp5,exp6,exp7,exp8)):getBinding(lView,bindingIndex+8)}function ɵɵpureFunctionV(slotOffset,pureFn,exps,thisArg){return pureFunctionVInternal(getLView(),getBindingRoot(),slotOffset,pureFn,exps,thisArg)}function getPureFunctionReturnValue(lView,returnValueIndex){ngDevMode&&assertIndexInRange(lView,returnValueIndex);const lastReturnValue=lView[returnValueIndex];return lastReturnValue===NO_CHANGE?void 0:lastReturnValue}function pureFunction1Internal(lView,bindingRoot,slotOffset,pureFn,exp,thisArg){const bindingIndex=bindingRoot+slotOffset;return bindingUpdated(lView,bindingIndex,exp)?updateBinding(lView,bindingIndex+1,thisArg?pureFn.call(thisArg,exp):pureFn(exp)):getPureFunctionReturnValue(lView,bindingIndex+1)}function pureFunction2Internal(lView,bindingRoot,slotOffset,pureFn,exp1,exp2,thisArg){const bindingIndex=bindingRoot+slotOffset;return bindingUpdated2(lView,bindingIndex,exp1,exp2)?updateBinding(lView,bindingIndex+2,thisArg?pureFn.call(thisArg,exp1,exp2):pureFn(exp1,exp2)):getPureFunctionReturnValue(lView,bindingIndex+2)}function pureFunction3Internal(lView,bindingRoot,slotOffset,pureFn,exp1,exp2,exp3,thisArg){const bindingIndex=bindingRoot+slotOffset;return bindingUpdated3(lView,bindingIndex,exp1,exp2,exp3)?updateBinding(lView,bindingIndex+3,thisArg?pureFn.call(thisArg,exp1,exp2,exp3):pureFn(exp1,exp2,exp3)):getPureFunctionReturnValue(lView,bindingIndex+3)}function pureFunction4Internal(lView,bindingRoot,slotOffset,pureFn,exp1,exp2,exp3,exp4,thisArg){const bindingIndex=bindingRoot+slotOffset;return bindingUpdated4(lView,bindingIndex,exp1,exp2,exp3,exp4)?updateBinding(lView,bindingIndex+4,thisArg?pureFn.call(thisArg,exp1,exp2,exp3,exp4):pureFn(exp1,exp2,exp3,exp4)):getPureFunctionReturnValue(lView,bindingIndex+4)}function pureFunctionVInternal(lView,bindingRoot,slotOffset,pureFn,exps,thisArg){let bindingIndex=bindingRoot+slotOffset,different=!1;for(let i=0;i<exps.length;i++)bindingUpdated(lView,bindingIndex++,exps[i])&&(different=!0);return different?updateBinding(lView,bindingIndex,pureFn.apply(thisArg,exps)):getPureFunctionReturnValue(lView,bindingIndex)}function ɵɵpipe(index,pipeName){const tView=getTView();let pipeDef;const adjustedIndex=index+22;tView.firstCreatePass?(pipeDef=function(name,registry){if(registry)for(let i=registry.length-1;i>=0;i--){const pipeDef=registry[i];if(name===pipeDef.name)return pipeDef}if(ngDevMode)throw new RuntimeError(-302,function(name){const lView=getLView(),context=lView[16][8],hostIsStandalone=isHostComponentStandalone(lView),componentInfoMessage=context?` in the '${context.constructor.name}' component`:"",errorMessage=`The pipe '${name}' could not be found${componentInfoMessage}. ${"Verify that it is "+(hostIsStandalone?"included in the '@Component.imports' of this component":"declared or imported in this module")}`;return errorMessage}(name))}(pipeName,tView.pipeRegistry),tView.data[adjustedIndex]=pipeDef,pipeDef.onDestroy&&(tView.destroyHooks||(tView.destroyHooks=[])).push(adjustedIndex,pipeDef.onDestroy)):pipeDef=tView.data[adjustedIndex];const pipeFactory=pipeDef.factory||(pipeDef.factory=getFactoryDef(pipeDef.type,!0)),previousInjectImplementation=setInjectImplementation(ɵɵdirectiveInject);try{const previousIncludeViewProviders=setIncludeViewProviders(!1),pipeInstance=pipeFactory();return setIncludeViewProviders(previousIncludeViewProviders),store(tView,getLView(),adjustedIndex,pipeInstance),pipeInstance}finally{setInjectImplementation(previousInjectImplementation)}}function ɵɵpipeBind1(index,slotOffset,v1){const adjustedIndex=index+22,lView=getLView(),pipeInstance=load(lView,adjustedIndex);return isPure(lView,adjustedIndex)?pureFunction1Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,pipeInstance):pipeInstance.transform(v1)}function ɵɵpipeBind2(index,slotOffset,v1,v2){const adjustedIndex=index+22,lView=getLView(),pipeInstance=load(lView,adjustedIndex);return isPure(lView,adjustedIndex)?pureFunction2Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,v2,pipeInstance):pipeInstance.transform(v1,v2)}function ɵɵpipeBind3(index,slotOffset,v1,v2,v3){const adjustedIndex=index+22,lView=getLView(),pipeInstance=load(lView,adjustedIndex);return isPure(lView,adjustedIndex)?pureFunction3Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,v2,v3,pipeInstance):pipeInstance.transform(v1,v2,v3)}function ɵɵpipeBind4(index,slotOffset,v1,v2,v3,v4){const adjustedIndex=index+22,lView=getLView(),pipeInstance=load(lView,adjustedIndex);return isPure(lView,adjustedIndex)?pureFunction4Internal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,v1,v2,v3,v4,pipeInstance):pipeInstance.transform(v1,v2,v3,v4)}function ɵɵpipeBindV(index,slotOffset,values){const adjustedIndex=index+22,lView=getLView(),pipeInstance=load(lView,adjustedIndex);return isPure(lView,adjustedIndex)?pureFunctionVInternal(lView,getBindingRoot(),slotOffset,pipeInstance.transform,values,pipeInstance):pipeInstance.transform.apply(pipeInstance,values)}function isPure(lView,index){return lView[1].data[index].pure}StandaloneService.ɵprov=ɵɵdefineInjectable({token:StandaloneService,providedIn:"environment",factory:()=>new StandaloneService(ɵɵinject(EnvironmentInjector))});function _wrapInTimeout(fn){return value=>{setTimeout(fn,void 0,value)}}const EventEmitter=class extends Subject{constructor(isAsync=!1){super(),this.__isAsync=isAsync}emit(value){super.next(value)}subscribe(observerOrNext,error,complete){let nextFn=observerOrNext,errorFn=error||(()=>null),completeFn=complete;if(observerOrNext&&"object"==typeof observerOrNext){const observer=observerOrNext;nextFn=observer.next?.bind(observer),errorFn=observer.error?.bind(observer),completeFn=observer.complete?.bind(observer)}this.__isAsync&&(errorFn=_wrapInTimeout(errorFn),nextFn&&(nextFn=_wrapInTimeout(nextFn)),completeFn&&(completeFn=_wrapInTimeout(completeFn)));const sink=super.subscribe({next:nextFn,error:errorFn,complete:completeFn});return observerOrNext instanceof Subscription&&observerOrNext.add(sink),sink}};function symbolIterator(){return this._results[getSymbolIterator()]()}class QueryList{constructor(_emitDistinctChangesOnly=!1){this._emitDistinctChangesOnly=_emitDistinctChangesOnly,this.dirty=!0,this._results=[],this._changesDetected=!1,this._changes=null,this.length=0,this.first=void 0,this.last=void 0;const symbol=getSymbolIterator(),proto=QueryList.prototype;proto[symbol]||(proto[symbol]=symbolIterator)}get changes(){return this._changes||(this._changes=new EventEmitter)}get(index){return this._results[index]}map(fn){return this._results.map(fn)}filter(fn){return this._results.filter(fn)}find(fn){return this._results.find(fn)}reduce(fn,init){return this._results.reduce(fn,init)}forEach(fn){this._results.forEach(fn)}some(fn){return this._results.some(fn)}toArray(){return this._results.slice()}toString(){return this._results.toString()}reset(resultsTree,identityAccessor){const self=this;self.dirty=!1;const newResultFlat=flatten(resultsTree);(this._changesDetected=!function(a,b,identityAccessor){if(a.length!==b.length)return!1;for(let i=0;i<a.length;i++){let valueA=a[i],valueB=b[i];if(identityAccessor&&(valueA=identityAccessor(valueA),valueB=identityAccessor(valueB)),valueB!==valueA)return!1}return!0}(self._results,newResultFlat,identityAccessor))&&(self._results=newResultFlat,self.length=newResultFlat.length,self.last=newResultFlat[this.length-1],self.first=newResultFlat[0])}notifyOnChanges(){!this._changes||!this._changesDetected&&this._emitDistinctChangesOnly||this._changes.emit(this)}setDirty(){this.dirty=!0}destroy(){this.changes.complete(),this.changes.unsubscribe()}}class TemplateRef{}TemplateRef.__NG_ELEMENT_ID__=function(){return createTemplateRef(getCurrentTNode(),getLView())};const ViewEngineTemplateRef=TemplateRef,R3TemplateRef=class extends ViewEngineTemplateRef{constructor(_declarationLView,_declarationTContainer,elementRef){super(),this._declarationLView=_declarationLView,this._declarationTContainer=_declarationTContainer,this.elementRef=elementRef}createEmbeddedView(context,injector){const embeddedTView=this._declarationTContainer.tViews,embeddedLView=createLView(this._declarationLView,embeddedTView,context,16,null,embeddedTView.declTNode,null,null,null,null,injector||null),declarationLContainer=this._declarationLView[this._declarationTContainer.index];ngDevMode&&assertLContainer(declarationLContainer),embeddedLView[17]=declarationLContainer;const declarationViewLQueries=this._declarationLView[19];return null!==declarationViewLQueries&&(embeddedLView[19]=declarationViewLQueries.createEmbeddedView(embeddedTView)),renderView(embeddedTView,embeddedLView,context),new ViewRef$1(embeddedLView)}};function createTemplateRef(hostTNode,hostLView){return 4&hostTNode.type?(ngDevMode&&assertDefined(hostTNode.tViews,"TView must be allocated"),new R3TemplateRef(hostLView,hostTNode,createElementRef(hostTNode,hostLView))):null}class ViewContainerRef{}ViewContainerRef.__NG_ELEMENT_ID__=function(){return createContainerRef(getCurrentTNode(),getLView())};const VE_ViewContainerRef=ViewContainerRef,R3ViewContainerRef=class extends VE_ViewContainerRef{constructor(_lContainer,_hostTNode,_hostLView){super(),this._lContainer=_lContainer,this._hostTNode=_hostTNode,this._hostLView=_hostLView}get element(){return createElementRef(this._hostTNode,this._hostLView)}get injector(){return new NodeInjector(this._hostTNode,this._hostLView)}get parentInjector(){const parentLocation=getParentInjectorLocation(this._hostTNode,this._hostLView);if(hasParentInjector(parentLocation)){const parentView=getParentInjectorView(parentLocation,this._hostLView),injectorIndex=getParentInjectorIndex(parentLocation);ngDevMode&&assertNodeInjector(parentView,injectorIndex);const parentTNode=parentView[1].data[injectorIndex+8];return new NodeInjector(parentTNode,parentView)}return new NodeInjector(null,this._hostLView)}clear(){for(;this.length>0;)this.remove(this.length-1)}get(index){const viewRefs=getViewRefs(this._lContainer);return null!==viewRefs&&viewRefs[index]||null}get length(){return this._lContainer.length-10}createEmbeddedView(templateRef,context,indexOrOptions){let index,injector;"number"==typeof indexOrOptions?index=indexOrOptions:null!=indexOrOptions&&(index=indexOrOptions.index,injector=indexOrOptions.injector);const viewRef=templateRef.createEmbeddedView(context||{},injector);return this.insert(viewRef,index),viewRef}createComponent(componentFactoryOrType,indexOrOptions,injector,projectableNodes,environmentInjector){const isComponentFactory=componentFactoryOrType&&!isType(componentFactoryOrType);let index;if(isComponentFactory)ngDevMode&&assertEqual("object"!=typeof indexOrOptions,!0,"It looks like Component factory was provided as the first argument and an options object as the second argument. This combination of arguments is incompatible. You can either change the first argument to provide Component type or change the second argument to be a number (representing an index at which to insert the new component's host view into this container)"),index=indexOrOptions;else{ngDevMode&&(assertDefined(getComponentDef(componentFactoryOrType),"Provided Component class doesn't contain Component definition. Please check whether provided class has @Component decorator."),assertEqual("number"!=typeof indexOrOptions,!0,"It looks like Component type was provided as the first argument and a number (representing an index at which to insert the new component's host view into this container as the second argument. This combination of arguments is incompatible. Please use an object as the second argument instead."));const options=indexOrOptions||{};ngDevMode&&options.environmentInjector&&options.ngModuleRef&&throwError("Cannot pass both environmentInjector and ngModuleRef options to createComponent()."),index=options.index,injector=options.injector,projectableNodes=options.projectableNodes,environmentInjector=options.environmentInjector||options.ngModuleRef}const componentFactory=isComponentFactory?componentFactoryOrType:new ComponentFactory(getComponentDef(componentFactoryOrType)),contextInjector=injector||this.parentInjector;if(!environmentInjector&&null==componentFactory.ngModule){const result=(isComponentFactory?contextInjector:this.parentInjector).get(EnvironmentInjector,null);result&&(environmentInjector=result)}const componentRef=componentFactory.create(contextInjector,projectableNodes,void 0,environmentInjector);return this.insert(componentRef.hostView,index),componentRef}insert(viewRef,index){const lView=viewRef._lView,tView=lView[1];if(ngDevMode&&viewRef.destroyed)throw new Error("Cannot insert a destroyed View in a ViewContainer!");if(isLContainer(lView[3])){const prevIdx=this.indexOf(viewRef);if(-1!==prevIdx)this.detach(prevIdx);else{const prevLContainer=lView[3];ngDevMode&&assertEqual(isLContainer(prevLContainer),!0,"An attached view should have its PARENT point to a container.");const prevVCRef=new R3ViewContainerRef(prevLContainer,prevLContainer[6],prevLContainer[3]);prevVCRef.detach(prevVCRef.indexOf(viewRef))}}const adjustedIdx=this._adjustIndex(index),lContainer=this._lContainer;insertView(tView,lView,lContainer,adjustedIdx);const beforeNode=getBeforeNodeForView(adjustedIdx,lContainer),renderer=lView[11],parentRNode=nativeParentNode(renderer,lContainer[7]);return null!==parentRNode&&function(tView,parentTNode,renderer,lView,parentNativeNode,beforeNode){lView[0]=parentNativeNode,lView[6]=parentTNode,applyView(tView,lView,renderer,1,parentNativeNode,beforeNode)}(tView,lContainer[6],renderer,lView,parentRNode,beforeNode),viewRef.attachToViewContainerRef(),addToArray(getOrCreateViewRefs(lContainer),adjustedIdx,viewRef),viewRef}move(viewRef,newIndex){if(ngDevMode&&viewRef.destroyed)throw new Error("Cannot move a destroyed View in a ViewContainer!");return this.insert(viewRef,newIndex)}indexOf(viewRef){const viewRefsArr=getViewRefs(this._lContainer);return null!==viewRefsArr?viewRefsArr.indexOf(viewRef):-1}remove(index){const adjustedIdx=this._adjustIndex(index,-1),detachedView=detachView(this._lContainer,adjustedIdx);detachedView&&(removeFromArray(getOrCreateViewRefs(this._lContainer),adjustedIdx),destroyLView(detachedView[1],detachedView))}detach(index){const adjustedIdx=this._adjustIndex(index,-1),view=detachView(this._lContainer,adjustedIdx);return view&&null!=removeFromArray(getOrCreateViewRefs(this._lContainer),adjustedIdx)?new ViewRef$1(view):null}_adjustIndex(index,shift=0){return null==index?this.length+shift:(ngDevMode&&(assertGreaterThan(index,-1,`ViewRef index must be positive, got ${index}`),assertLessThan(index,this.length+1+shift,"index")),index)}};function getViewRefs(lContainer){return lContainer[8]}function getOrCreateViewRefs(lContainer){return lContainer[8]||(lContainer[8]=[])}function createContainerRef(hostTNode,hostLView){let lContainer;ngDevMode&&assertTNodeType(hostTNode,15);const slotValue=hostLView[hostTNode.index];if(isLContainer(slotValue))lContainer=slotValue;else{let commentNode;if(8&hostTNode.type)commentNode=unwrapRNode(slotValue);else{const renderer=hostLView[11];ngDevMode&&ngDevMode.rendererCreateComment++,commentNode=renderer.createComment(ngDevMode?"container":"");const hostNative=getNativeByTNode(hostTNode,hostLView);nativeInsertBefore(renderer,nativeParentNode(renderer,hostNative),commentNode,function(renderer,node){return renderer.nextSibling(node)}(renderer,hostNative),!1)}hostLView[hostTNode.index]=lContainer=createLContainer(slotValue,hostLView,commentNode,hostTNode),addToViewTree(hostLView,lContainer)}return new R3ViewContainerRef(lContainer,hostTNode,hostLView)}class LQuery_{constructor(queryList){this.queryList=queryList,this.matches=null}clone(){return new LQuery_(this.queryList)}setDirty(){this.queryList.setDirty()}}class LQueries_{constructor(queries=[]){this.queries=queries}createEmbeddedView(tView){const tQueries=tView.queries;if(null!==tQueries){const noOfInheritedQueries=null!==tView.contentQueries?tView.contentQueries[0]:tQueries.length,viewLQueries=[];for(let i=0;i<noOfInheritedQueries;i++){const tQuery=tQueries.getByIndex(i),parentLQuery=this.queries[tQuery.indexInDeclarationView];viewLQueries.push(parentLQuery.clone())}return new LQueries_(viewLQueries)}return null}insertView(tView){this.dirtyQueriesWithMatches(tView)}detachView(tView){this.dirtyQueriesWithMatches(tView)}dirtyQueriesWithMatches(tView){for(let i=0;i<this.queries.length;i++)null!==getTQuery(tView,i).matches&&this.queries[i].setDirty()}}class TQueryMetadata_{constructor(predicate,flags,read=null){this.predicate=predicate,this.flags=flags,this.read=read}}class TQueries_{constructor(queries=[]){this.queries=queries}elementStart(tView,tNode){ngDevMode&&assertFirstCreatePass(tView,"Queries should collect results on the first template pass only");for(let i=0;i<this.queries.length;i++)this.queries[i].elementStart(tView,tNode)}elementEnd(tNode){for(let i=0;i<this.queries.length;i++)this.queries[i].elementEnd(tNode)}embeddedTView(tNode){let queriesForTemplateRef=null;for(let i=0;i<this.length;i++){const childQueryIndex=null!==queriesForTemplateRef?queriesForTemplateRef.length:0,tqueryClone=this.getByIndex(i).embeddedTView(tNode,childQueryIndex);tqueryClone&&(tqueryClone.indexInDeclarationView=i,null!==queriesForTemplateRef?queriesForTemplateRef.push(tqueryClone):queriesForTemplateRef=[tqueryClone])}return null!==queriesForTemplateRef?new TQueries_(queriesForTemplateRef):null}template(tView,tNode){ngDevMode&&assertFirstCreatePass(tView,"Queries should collect results on the first template pass only");for(let i=0;i<this.queries.length;i++)this.queries[i].template(tView,tNode)}getByIndex(index){return ngDevMode&&assertIndexInRange(this.queries,index),this.queries[index]}get length(){return this.queries.length}track(tquery){this.queries.push(tquery)}}class TQuery_{constructor(metadata,nodeIndex=-1){this.metadata=metadata,this.matches=null,this.indexInDeclarationView=-1,this.crossesNgTemplate=!1,this._appliesToNextNode=!0,this._declarationNodeIndex=nodeIndex}elementStart(tView,tNode){this.isApplyingToNode(tNode)&&this.matchTNode(tView,tNode)}elementEnd(tNode){this._declarationNodeIndex===tNode.index&&(this._appliesToNextNode=!1)}template(tView,tNode){this.elementStart(tView,tNode)}embeddedTView(tNode,childQueryIndex){return this.isApplyingToNode(tNode)?(this.crossesNgTemplate=!0,this.addMatch(-tNode.index,childQueryIndex),new TQuery_(this.metadata)):null}isApplyingToNode(tNode){if(this._appliesToNextNode&&1!=(1&this.metadata.flags)){const declarationNodeIdx=this._declarationNodeIndex;let parent=tNode.parent;for(;null!==parent&&8&parent.type&&parent.index!==declarationNodeIdx;)parent=parent.parent;return declarationNodeIdx===(null!==parent?parent.index:-1)}return this._appliesToNextNode}matchTNode(tView,tNode){const predicate=this.metadata.predicate;if(Array.isArray(predicate))for(let i=0;i<predicate.length;i++){const name=predicate[i];this.matchTNodeWithReadOption(tView,tNode,getIdxOfMatchingSelector(tNode,name)),this.matchTNodeWithReadOption(tView,tNode,locateDirectiveOrProvider(tNode,tView,name,!1,!1))}else predicate===TemplateRef?4&tNode.type&&this.matchTNodeWithReadOption(tView,tNode,-1):this.matchTNodeWithReadOption(tView,tNode,locateDirectiveOrProvider(tNode,tView,predicate,!1,!1))}matchTNodeWithReadOption(tView,tNode,nodeMatchIdx){if(null!==nodeMatchIdx){const read=this.metadata.read;if(null!==read){if(read===ElementRef||read===ViewContainerRef||read===TemplateRef&&4&tNode.type)this.addMatch(tNode.index,-2);else{const directiveOrProviderIdx=locateDirectiveOrProvider(tNode,tView,read,!1,!1);null!==directiveOrProviderIdx&&this.addMatch(tNode.index,directiveOrProviderIdx)}}else this.addMatch(tNode.index,nodeMatchIdx)}}addMatch(tNodeIdx,matchIdx){null===this.matches?this.matches=[tNodeIdx,matchIdx]:this.matches.push(tNodeIdx,matchIdx)}}function getIdxOfMatchingSelector(tNode,selector){const localNames=tNode.localNames;if(null!==localNames)for(let i=0;i<localNames.length;i+=2)if(localNames[i]===selector)return localNames[i+1];return null}function createResultForNode(lView,tNode,matchingIdx,read){return-1===matchingIdx?function(tNode,currentView){return 11&tNode.type?createElementRef(tNode,currentView):4&tNode.type?createTemplateRef(tNode,currentView):null}(tNode,lView):-2===matchingIdx?function(lView,tNode,read){if(read===ElementRef)return createElementRef(tNode,lView);if(read===TemplateRef)return createTemplateRef(tNode,lView);if(read===ViewContainerRef)return ngDevMode&&assertTNodeType(tNode,15),createContainerRef(tNode,lView);ngDevMode&&throwError(`Special token to read should be one of ElementRef, TemplateRef or ViewContainerRef but got ${stringify(read)}.`)}(lView,tNode,read):getNodeInjectable(lView,lView[1],matchingIdx,tNode)}function materializeViewResults(tView,lView,tQuery,queryIndex){const lQuery=lView[19].queries[queryIndex];if(null===lQuery.matches){const tViewData=tView.data,tQueryMatches=tQuery.matches,result=[];for(let i=0;i<tQueryMatches.length;i+=2){const matchedNodeIdx=tQueryMatches[i];if(matchedNodeIdx<0)result.push(null);else{ngDevMode&&assertIndexInRange(tViewData,matchedNodeIdx);const tNode=tViewData[matchedNodeIdx];result.push(createResultForNode(lView,tNode,tQueryMatches[i+1],tQuery.metadata.read))}}lQuery.matches=result}return lQuery.matches}function collectQueryResults(tView,lView,queryIndex,result){const tQuery=tView.queries.getByIndex(queryIndex),tQueryMatches=tQuery.matches;if(null!==tQueryMatches){const lViewResults=materializeViewResults(tView,lView,tQuery,queryIndex);for(let i=0;i<tQueryMatches.length;i+=2){const tNodeIdx=tQueryMatches[i];if(tNodeIdx>0)result.push(lViewResults[i/2]);else{const childQueryIndex=tQueryMatches[i+1],declarationLContainer=lView[-tNodeIdx];ngDevMode&&assertLContainer(declarationLContainer);for(let i=10;i<declarationLContainer.length;i++){const embeddedLView=declarationLContainer[i];embeddedLView[17]===embeddedLView[3]&&collectQueryResults(embeddedLView[1],embeddedLView,childQueryIndex,result)}if(null!==declarationLContainer[9]){const embeddedLViews=declarationLContainer[9];for(let i=0;i<embeddedLViews.length;i++){const embeddedLView=embeddedLViews[i];collectQueryResults(embeddedLView[1],embeddedLView,childQueryIndex,result)}}}}}return result}function ɵɵqueryRefresh(queryList){const lView=getLView(),tView=getTView(),queryIndex=getCurrentQueryIndex();setCurrentQueryIndex(queryIndex+1);const tQuery=getTQuery(tView,queryIndex);if(queryList.dirty&&isCreationMode(lView)===(2==(2&tQuery.metadata.flags))){if(null===tQuery.matches)queryList.reset([]);else{const result=tQuery.crossesNgTemplate?collectQueryResults(tView,lView,queryIndex,[]):materializeViewResults(tView,lView,tQuery,queryIndex);queryList.reset(result,unwrapElementRef),queryList.notifyOnChanges()}return!0}return!1}function ɵɵviewQuery(predicate,flags,read){ngDevMode&&assertNumber(flags,"Expecting flags");const tView=getTView();tView.firstCreatePass&&(createTQuery(tView,new TQueryMetadata_(predicate,flags,read),-1),2==(2&flags)&&(tView.staticViewQueries=!0)),createLQuery(tView,getLView(),flags)}function ɵɵcontentQuery(directiveIndex,predicate,flags,read){ngDevMode&&assertNumber(flags,"Expecting flags");const tView=getTView();if(tView.firstCreatePass){const tNode=getCurrentTNode();createTQuery(tView,new TQueryMetadata_(predicate,flags,read),tNode.index),function(tView,directiveIndex){const tViewContentQueries=tView.contentQueries||(tView.contentQueries=[]),lastSavedDirectiveIndex=tViewContentQueries.length?tViewContentQueries[tViewContentQueries.length-1]:-1;directiveIndex!==lastSavedDirectiveIndex&&tViewContentQueries.push(tView.queries.length-1,directiveIndex)}(tView,directiveIndex),2==(2&flags)&&(tView.staticContentQueries=!0)}createLQuery(tView,getLView(),flags)}function ɵɵloadQuery(){return lView=getLView(),queryIndex=getCurrentQueryIndex(),ngDevMode&&assertDefined(lView[19],"LQueries should be defined when trying to load a query"),ngDevMode&&assertIndexInRange(lView[19].queries,queryIndex),lView[19].queries[queryIndex].queryList;var lView,queryIndex}function createLQuery(tView,lView,flags){const queryList=new QueryList(4==(4&flags));storeCleanupWithContext(tView,lView,queryList,queryList.destroy),null===lView[19]&&(lView[19]=new LQueries_),lView[19].queries.push(new LQuery_(queryList))}function createTQuery(tView,metadata,nodeIndex){null===tView.queries&&(tView.queries=new TQueries_),tView.queries.track(new TQuery_(metadata,nodeIndex))}function getTQuery(tView,index){return ngDevMode&&assertDefined(tView.queries,"TQueries must be defined to retrieve a TQuery"),tView.queries.getByIndex(index)}function ɵɵtemplateRefExtractor(tNode,lView){return createTemplateRef(tNode,lView)}const angularCoreEnv={"\u0275\u0275attribute":ɵɵattribute,"\u0275\u0275attributeInterpolate1":ɵɵattributeInterpolate1,"\u0275\u0275attributeInterpolate2":ɵɵattributeInterpolate2,"\u0275\u0275attributeInterpolate3":ɵɵattributeInterpolate3,"\u0275\u0275attributeInterpolate4":ɵɵattributeInterpolate4,"\u0275\u0275attributeInterpolate5":ɵɵattributeInterpolate5,"\u0275\u0275attributeInterpolate6":ɵɵattributeInterpolate6,"\u0275\u0275attributeInterpolate7":ɵɵattributeInterpolate7,"\u0275\u0275attributeInterpolate8":ɵɵattributeInterpolate8,"\u0275\u0275attributeInterpolateV":ɵɵattributeInterpolateV,"\u0275\u0275defineComponent":ɵɵdefineComponent,"\u0275\u0275defineDirective":ɵɵdefineDirective,"\u0275\u0275defineInjectable":ɵɵdefineInjectable,"\u0275\u0275defineInjector":ɵɵdefineInjector,"\u0275\u0275defineNgModule":ɵɵdefineNgModule,"\u0275\u0275definePipe":ɵɵdefinePipe,"\u0275\u0275directiveInject":ɵɵdirectiveInject,"\u0275\u0275getInheritedFactory":ɵɵgetInheritedFactory,"\u0275\u0275inject":ɵɵinject,"\u0275\u0275injectAttribute":ɵɵinjectAttribute,"\u0275\u0275invalidFactory":ɵɵinvalidFactory,"\u0275\u0275invalidFactoryDep":ɵɵinvalidFactoryDep,"\u0275\u0275templateRefExtractor":ɵɵtemplateRefExtractor,"\u0275\u0275resetView":ɵɵresetView,"\u0275\u0275NgOnChangesFeature":ɵɵNgOnChangesFeature,"\u0275\u0275ProvidersFeature":ɵɵProvidersFeature,"\u0275\u0275CopyDefinitionFeature":ɵɵCopyDefinitionFeature,"\u0275\u0275InheritDefinitionFeature":ɵɵInheritDefinitionFeature,"\u0275\u0275StandaloneFeature":ɵɵStandaloneFeature,"\u0275\u0275nextContext":ɵɵnextContext,"\u0275\u0275namespaceHTML":ɵɵnamespaceHTML,"\u0275\u0275namespaceMathML":ɵɵnamespaceMathML,"\u0275\u0275namespaceSVG":ɵɵnamespaceSVG,"\u0275\u0275enableBindings":ɵɵenableBindings,"\u0275\u0275disableBindings":ɵɵdisableBindings,"\u0275\u0275elementStart":ɵɵelementStart,"\u0275\u0275elementEnd":ɵɵelementEnd,"\u0275\u0275element":ɵɵelement,"\u0275\u0275elementContainerStart":ɵɵelementContainerStart,"\u0275\u0275elementContainerEnd":ɵɵelementContainerEnd,"\u0275\u0275elementContainer":ɵɵelementContainer,"\u0275\u0275pureFunction0":ɵɵpureFunction0,"\u0275\u0275pureFunction1":ɵɵpureFunction1,"\u0275\u0275pureFunction2":ɵɵpureFunction2,"\u0275\u0275pureFunction3":ɵɵpureFunction3,"\u0275\u0275pureFunction4":ɵɵpureFunction4,"\u0275\u0275pureFunction5":ɵɵpureFunction5,"\u0275\u0275pureFunction6":ɵɵpureFunction6,"\u0275\u0275pureFunction7":ɵɵpureFunction7,"\u0275\u0275pureFunction8":ɵɵpureFunction8,"\u0275\u0275pureFunctionV":ɵɵpureFunctionV,"\u0275\u0275getCurrentView":ɵɵgetCurrentView,"\u0275\u0275restoreView":ɵɵrestoreView,"\u0275\u0275listener":ɵɵlistener,"\u0275\u0275projection":ɵɵprojection,"\u0275\u0275syntheticHostProperty":ɵɵsyntheticHostProperty,"\u0275\u0275syntheticHostListener":ɵɵsyntheticHostListener,"\u0275\u0275pipeBind1":ɵɵpipeBind1,"\u0275\u0275pipeBind2":ɵɵpipeBind2,"\u0275\u0275pipeBind3":ɵɵpipeBind3,"\u0275\u0275pipeBind4":ɵɵpipeBind4,"\u0275\u0275pipeBindV":ɵɵpipeBindV,"\u0275\u0275projectionDef":ɵɵprojectionDef,"\u0275\u0275hostProperty":ɵɵhostProperty,"\u0275\u0275property":ɵɵproperty,"\u0275\u0275propertyInterpolate":ɵɵpropertyInterpolate,"\u0275\u0275propertyInterpolate1":ɵɵpropertyInterpolate1,"\u0275\u0275propertyInterpolate2":ɵɵpropertyInterpolate2,"\u0275\u0275propertyInterpolate3":ɵɵpropertyInterpolate3,"\u0275\u0275propertyInterpolate4":ɵɵpropertyInterpolate4,"\u0275\u0275propertyInterpolate5":ɵɵpropertyInterpolate5,"\u0275\u0275propertyInterpolate6":ɵɵpropertyInterpolate6,"\u0275\u0275propertyInterpolate7":ɵɵpropertyInterpolate7,"\u0275\u0275propertyInterpolate8":ɵɵpropertyInterpolate8,"\u0275\u0275propertyInterpolateV":ɵɵpropertyInterpolateV,"\u0275\u0275pipe":ɵɵpipe,"\u0275\u0275queryRefresh":ɵɵqueryRefresh,"\u0275\u0275viewQuery":ɵɵviewQuery,"\u0275\u0275loadQuery":ɵɵloadQuery,"\u0275\u0275contentQuery":ɵɵcontentQuery,"\u0275\u0275reference":ɵɵreference,"\u0275\u0275classMap":ɵɵclassMap,"\u0275\u0275classMapInterpolate1":ɵɵclassMapInterpolate1,"\u0275\u0275classMapInterpolate2":ɵɵclassMapInterpolate2,"\u0275\u0275classMapInterpolate3":ɵɵclassMapInterpolate3,"\u0275\u0275classMapInterpolate4":ɵɵclassMapInterpolate4,"\u0275\u0275classMapInterpolate5":ɵɵclassMapInterpolate5,"\u0275\u0275classMapInterpolate6":ɵɵclassMapInterpolate6,"\u0275\u0275classMapInterpolate7":ɵɵclassMapInterpolate7,"\u0275\u0275classMapInterpolate8":ɵɵclassMapInterpolate8,"\u0275\u0275classMapInterpolateV":ɵɵclassMapInterpolateV,"\u0275\u0275styleMap":ɵɵstyleMap,"\u0275\u0275styleMapInterpolate1":ɵɵstyleMapInterpolate1,"\u0275\u0275styleMapInterpolate2":ɵɵstyleMapInterpolate2,"\u0275\u0275styleMapInterpolate3":ɵɵstyleMapInterpolate3,"\u0275\u0275styleMapInterpolate4":ɵɵstyleMapInterpolate4,"\u0275\u0275styleMapInterpolate5":ɵɵstyleMapInterpolate5,"\u0275\u0275styleMapInterpolate6":ɵɵstyleMapInterpolate6,"\u0275\u0275styleMapInterpolate7":ɵɵstyleMapInterpolate7,"\u0275\u0275styleMapInterpolate8":ɵɵstyleMapInterpolate8,"\u0275\u0275styleMapInterpolateV":ɵɵstyleMapInterpolateV,"\u0275\u0275styleProp":ɵɵstyleProp,"\u0275\u0275stylePropInterpolate1":ɵɵstylePropInterpolate1,"\u0275\u0275stylePropInterpolate2":ɵɵstylePropInterpolate2,"\u0275\u0275stylePropInterpolate3":ɵɵstylePropInterpolate3,"\u0275\u0275stylePropInterpolate4":ɵɵstylePropInterpolate4,"\u0275\u0275stylePropInterpolate5":ɵɵstylePropInterpolate5,"\u0275\u0275stylePropInterpolate6":ɵɵstylePropInterpolate6,"\u0275\u0275stylePropInterpolate7":ɵɵstylePropInterpolate7,"\u0275\u0275stylePropInterpolate8":ɵɵstylePropInterpolate8,"\u0275\u0275stylePropInterpolateV":ɵɵstylePropInterpolateV,"\u0275\u0275classProp":ɵɵclassProp,"\u0275\u0275advance":ɵɵadvance,"\u0275\u0275template":ɵɵtemplate,"\u0275\u0275text":ɵɵtext,"\u0275\u0275textInterpolate":ɵɵtextInterpolate,"\u0275\u0275textInterpolate1":ɵɵtextInterpolate1,"\u0275\u0275textInterpolate2":ɵɵtextInterpolate2,"\u0275\u0275textInterpolate3":ɵɵtextInterpolate3,"\u0275\u0275textInterpolate4":ɵɵtextInterpolate4,"\u0275\u0275textInterpolate5":ɵɵtextInterpolate5,"\u0275\u0275textInterpolate6":ɵɵtextInterpolate6,"\u0275\u0275textInterpolate7":ɵɵtextInterpolate7,"\u0275\u0275textInterpolate8":ɵɵtextInterpolate8,"\u0275\u0275textInterpolateV":ɵɵtextInterpolateV,"\u0275\u0275i18n":ɵɵi18n,"\u0275\u0275i18nAttributes":ɵɵi18nAttributes,"\u0275\u0275i18nExp":ɵɵi18nExp,"\u0275\u0275i18nStart":ɵɵi18nStart,"\u0275\u0275i18nEnd":ɵɵi18nEnd,"\u0275\u0275i18nApply":ɵɵi18nApply,"\u0275\u0275i18nPostprocess":ɵɵi18nPostprocess,"\u0275\u0275resolveWindow":ɵɵresolveWindow,"\u0275\u0275resolveDocument":ɵɵresolveDocument,"\u0275\u0275resolveBody":ɵɵresolveBody,"\u0275\u0275setComponentScope":ɵɵsetComponentScope,"\u0275\u0275setNgModuleScope":ɵɵsetNgModuleScope,"\u0275\u0275registerNgModuleType":registerNgModuleType,"\u0275\u0275sanitizeHtml":ɵɵsanitizeHtml,"\u0275\u0275sanitizeStyle":ɵɵsanitizeStyle,"\u0275\u0275sanitizeResourceUrl":ɵɵsanitizeResourceUrl,"\u0275\u0275sanitizeScript":ɵɵsanitizeScript,"\u0275\u0275sanitizeUrl":ɵɵsanitizeUrl,"\u0275\u0275sanitizeUrlOrResourceUrl":ɵɵsanitizeUrlOrResourceUrl,"\u0275\u0275trustConstantHtml":ɵɵtrustConstantHtml,"\u0275\u0275trustConstantResourceUrl":ɵɵtrustConstantResourceUrl,"\u0275\u0275validateIframeAttribute":ɵɵvalidateIframeAttribute,forwardRef:forwardRef,resolveForwardRef:resolveForwardRef};let jitOptions=null;function resetJitOptions(){jitOptions=null}function isModuleWithProviders(value){return void 0!==value.ngModule}function isNgModule(value){return!!getNgModuleDef(value)}const moduleQueue=[];let flushingModuleQueue=!1;function flushModuleScopingQueueAsMuchAsPossible(){if(!flushingModuleQueue){flushingModuleQueue=!0;try{for(let i=moduleQueue.length-1;i>=0;i--){const{moduleType:moduleType,ngModule:ngModule}=moduleQueue[i];ngModule.declarations&&ngModule.declarations.every(isResolvedDeclaration)&&(moduleQueue.splice(i,1),setScopeOnDeclaredComponents(moduleType,ngModule))}}finally{flushingModuleQueue=!1}}}function isResolvedDeclaration(declaration){return Array.isArray(declaration)?declaration.every(isResolvedDeclaration):!!resolveForwardRef(declaration)}function compileNgModule(moduleType,ngModule={}){compileNgModuleDefs(moduleType,ngModule),void 0!==ngModule.id&&registerNgModuleType(moduleType,ngModule.id),function(moduleType,ngModule){moduleQueue.push({moduleType:moduleType,ngModule:ngModule})}(moduleType,ngModule)}function compileNgModuleDefs(moduleType,ngModule,allowDuplicateDeclarationsInRoot=!1){ngDevMode&&assertDefined(moduleType,"Required value moduleType"),ngDevMode&&assertDefined(ngModule,"Required value ngModule");const declarations=flatten(ngModule.declarations||EMPTY_ARRAY);let ngModuleDef=null;Object.defineProperty(moduleType,NG_MOD_DEF,{configurable:!0,get:()=>{if(null===ngModuleDef){if(ngDevMode&&ngModule.imports&&ngModule.imports.indexOf(moduleType)>-1)throw new Error(`'${stringifyForError(moduleType)}' module can't import itself`);const compiler=getCompilerFacade({usage:0,kind:"NgModule",type:moduleType});ngModuleDef=compiler.compileNgModule(angularCoreEnv,`ng:///${moduleType.name}/ɵmod.js`,{type:moduleType,bootstrap:flatten(ngModule.bootstrap||EMPTY_ARRAY).map(resolveForwardRef),declarations:declarations.map(resolveForwardRef),imports:flatten(ngModule.imports||EMPTY_ARRAY).map(resolveForwardRef).map(expandModuleWithProviders),exports:flatten(ngModule.exports||EMPTY_ARRAY).map(resolveForwardRef).map(expandModuleWithProviders),schemas:ngModule.schemas?flatten(ngModule.schemas):null,id:ngModule.id||null}),ngModuleDef.schemas||(ngModuleDef.schemas=[])}return ngModuleDef}});let ngFactoryDef=null;Object.defineProperty(moduleType,NG_FACTORY_DEF,{get:()=>{if(null===ngFactoryDef){const compiler=getCompilerFacade({usage:0,kind:"NgModule",type:moduleType});ngFactoryDef=compiler.compileFactory(angularCoreEnv,`ng:///${moduleType.name}/ɵfac.js`,{name:moduleType.name,type:moduleType,deps:reflectDependencies(moduleType),target:compiler.FactoryTarget.NgModule,typeArgumentCount:0})}return ngFactoryDef},configurable:!!ngDevMode});let ngInjectorDef=null;Object.defineProperty(moduleType,NG_INJ_DEF,{get:()=>{if(null===ngInjectorDef){ngDevMode&&verifySemanticsOfNgModuleDef(moduleType,allowDuplicateDeclarationsInRoot);const meta={name:moduleType.name,type:moduleType,providers:ngModule.providers||EMPTY_ARRAY,imports:[(ngModule.imports||EMPTY_ARRAY).map(resolveForwardRef),(ngModule.exports||EMPTY_ARRAY).map(resolveForwardRef)]},compiler=getCompilerFacade({usage:0,kind:"NgModule",type:moduleType});ngInjectorDef=compiler.compileInjector(angularCoreEnv,`ng:///${moduleType.name}/ɵinj.js`,meta)}return ngInjectorDef},configurable:!!ngDevMode})}function verifySemanticsOfNgModuleDef(moduleType,allowDuplicateDeclarationsInRoot,importingModule){if(verifiedNgModule.get(moduleType))return;if(isStandalone(moduleType))return;let ngModuleDef;if(verifiedNgModule.set(moduleType,!0),moduleType=resolveForwardRef(moduleType),importingModule){if(ngModuleDef=getNgModuleDef(moduleType),!ngModuleDef)throw new Error(`Unexpected value '${moduleType.name}' imported by the module '${importingModule.name}'. Please add an @NgModule annotation.`)}else ngModuleDef=getNgModuleDef(moduleType,!0);const errors=[],declarations=maybeUnwrapFn(ngModuleDef.declarations),imports=maybeUnwrapFn(ngModuleDef.imports);flatten(imports).map(unwrapModuleWithProvidersImports).forEach(modOrStandaloneCmpt=>{verifySemanticsOfNgModuleImport(modOrStandaloneCmpt,moduleType),verifySemanticsOfNgModuleDef(modOrStandaloneCmpt,!1,moduleType)});const exports=maybeUnwrapFn(ngModuleDef.exports);declarations.forEach(function(type){type=resolveForwardRef(type);getComponentDef(type)||getDirectiveDef(type)||getPipeDef$1(type)||errors.push(`Unexpected value '${stringifyForError(type)}' declared by the module '${stringifyForError(moduleType)}'. Please add a @Pipe/@Directive/@Component annotation.`)}),declarations.forEach(function(type){const def=getDirectiveDef(type=resolveForwardRef(type));!getComponentDef(type)&&def&&0==def.selectors.length&&errors.push(`Directive ${stringifyForError(type)} has no selector, please add it!`)}),declarations.forEach(declarationType=>function(type,moduleType){type=resolveForwardRef(type);if((getComponentDef(type)||getDirectiveDef(type)||getPipeDef$1(type))?.standalone){const location=`"${stringifyForError(moduleType)}" NgModule`;errors.push(function(type,location){return`Unexpected "${stringifyForError(type)}" found in the "declarations" array of the ${location}, "${stringifyForError(type)}" is marked as standalone and can't be declared in any NgModule - did you intend to import it instead (by adding it to the "imports" array)?`}(type,location))}}(declarationType,moduleType));const combinedDeclarations=[...declarations.map(resolveForwardRef),...flatten(imports.map(computeCombinedExports)).map(resolveForwardRef)];exports.forEach(function(type){const kind=(getComponentDef(type=resolveForwardRef(type))?"component":getDirectiveDef(type)&&"directive")||getPipeDef$1(type)&&"pipe";kind&&-1===combinedDeclarations.lastIndexOf(type)&&errors.push(`Can't export ${kind} ${stringifyForError(type)} from ${stringifyForError(moduleType)} as it was neither declared nor imported!`)}),declarations.forEach(decl=>function(type,suppressErrors){type=resolveForwardRef(type);const existingModule=ownerNgModule.get(type);if(existingModule&&existingModule!==moduleType){if(!suppressErrors){const modules=[existingModule,moduleType].map(stringifyForError).sort();errors.push(`Type ${stringifyForError(type)} is part of the declarations of 2 modules: ${modules[0]} and ${modules[1]}! Please consider moving ${stringifyForError(type)} to a higher module that imports ${modules[0]} and ${modules[1]}. You can also create a new NgModule that exports and includes ${stringifyForError(type)} then import that NgModule in ${modules[0]} and ${modules[1]}.`)}}else ownerNgModule.set(type,moduleType)}(decl,allowDuplicateDeclarationsInRoot)),declarations.forEach(function(type){if(getComponentDef(type=resolveForwardRef(type))){const component=getAnnotation(type,"Component");component&&component.entryComponents&&deepForEach(component.entryComponents,verifyComponentIsPartOfNgModule)}});const ngModule=getAnnotation(moduleType,"NgModule");if(ngModule&&(ngModule.imports&&flatten(ngModule.imports).map(unwrapModuleWithProvidersImports).forEach(mod=>{verifySemanticsOfNgModuleImport(mod,moduleType),verifySemanticsOfNgModuleDef(mod,!1,moduleType)}),ngModule.bootstrap&&deepForEach(ngModule.bootstrap,function(type){getComponentDef(type=resolveForwardRef(type))||errors.push(`${stringifyForError(type)} cannot be used as an entry component.`);isStandalone(type)&&errors.push(`The \`${stringifyForError(type)}\` class is a standalone component, which can not be used in the \`@NgModule.bootstrap\` array. Use the \`bootstrapApplication\` function for bootstrap instead.`)}),ngModule.bootstrap&&deepForEach(ngModule.bootstrap,verifyComponentIsPartOfNgModule),ngModule.entryComponents&&deepForEach(ngModule.entryComponents,verifyComponentIsPartOfNgModule)),errors.length)throw new Error(errors.join("\n"));function verifyComponentIsPartOfNgModule(type){type=resolveForwardRef(type);ownerNgModule.get(type)||isStandalone(type)||errors.push(`Component ${stringifyForError(type)} is not part of any NgModule or the module has not been imported into your module.`)}function verifySemanticsOfNgModuleImport(type,importingModule){const directiveDef=getComponentDef(type=resolveForwardRef(type))||getDirectiveDef(type);if(null!==directiveDef&&!directiveDef.standalone)throw new Error(`Unexpected directive '${type.name}' imported by the module '${importingModule.name}'. Please add an @NgModule annotation.`);const pipeDef=getPipeDef$1(type);if(null!==pipeDef&&!pipeDef.standalone)throw new Error(`Unexpected pipe '${type.name}' imported by the module '${importingModule.name}'. Please add an @NgModule annotation.`)}}function unwrapModuleWithProvidersImports(typeOrWithProviders){return(typeOrWithProviders=resolveForwardRef(typeOrWithProviders)).ngModule||typeOrWithProviders}function getAnnotation(type,name){let annotation=null;return collect(type.__annotations__),collect(type.decorators),annotation;function collect(annotations){annotations&&annotations.forEach(readAnnotation)}function readAnnotation(decorator){if(!annotation){if(Object.getPrototypeOf(decorator).ngMetadataName==name)annotation=decorator;else if(decorator.type){Object.getPrototypeOf(decorator.type).ngMetadataName==name&&(annotation=decorator.args[0])}}}}let ownerNgModule=new WeakMap,verifiedNgModule=new WeakMap;function resetCompiledComponents(){ownerNgModule=new WeakMap,verifiedNgModule=new WeakMap,moduleQueue.length=0}function computeCombinedExports(type){const ngModuleDef=getNgModuleDef(type=resolveForwardRef(type));return null===ngModuleDef?[type]:[...flatten(maybeUnwrapFn(ngModuleDef.exports).map(type=>getNgModuleDef(type)?(verifySemanticsOfNgModuleDef(type,!1),computeCombinedExports(type)):type))]}function setScopeOnDeclaredComponents(moduleType,ngModule){const declarations=flatten(ngModule.declarations||EMPTY_ARRAY),transitiveScopes=transitiveScopesFor(moduleType);declarations.forEach(declaration=>{if((declaration=resolveForwardRef(declaration)).hasOwnProperty(NG_COMP_DEF)){patchComponentDefWithScope(getComponentDef(declaration),transitiveScopes)}else declaration.hasOwnProperty(NG_DIR_DEF)||declaration.hasOwnProperty(NG_PIPE_DEF)||(declaration.ngSelectorScope=moduleType)})}function patchComponentDefWithScope(componentDef,transitiveScopes){componentDef.directiveDefs=()=>Array.from(transitiveScopes.compilation.directives).map(dir=>dir.hasOwnProperty(NG_COMP_DEF)?getComponentDef(dir):getDirectiveDef(dir)).filter(def=>!!def),componentDef.pipeDefs=()=>Array.from(transitiveScopes.compilation.pipes).map(pipe=>getPipeDef$1(pipe)),componentDef.schemas=transitiveScopes.schemas,componentDef.tView=null}function transitiveScopesFor(type){if(isNgModule(type))return function(moduleType){const def=getNgModuleDef(moduleType,!0);if(null!==def.transitiveCompileScopes)return def.transitiveCompileScopes;const scopes={schemas:def.schemas||null,compilation:{directives:new Set,pipes:new Set},exported:{directives:new Set,pipes:new Set}};return maybeUnwrapFn(def.imports).forEach(imported=>{const importedScope=transitiveScopesFor(imported);importedScope.exported.directives.forEach(entry=>scopes.compilation.directives.add(entry)),importedScope.exported.pipes.forEach(entry=>scopes.compilation.pipes.add(entry))}),maybeUnwrapFn(def.declarations).forEach(declared=>{getPipeDef$1(declared)?scopes.compilation.pipes.add(declared):scopes.compilation.directives.add(declared)}),maybeUnwrapFn(def.exports).forEach(exported=>{const exportedType=exported;if(isNgModule(exportedType)){const exportedScope=transitiveScopesFor(exportedType);exportedScope.exported.directives.forEach(entry=>{scopes.compilation.directives.add(entry),scopes.exported.directives.add(entry)}),exportedScope.exported.pipes.forEach(entry=>{scopes.compilation.pipes.add(entry),scopes.exported.pipes.add(entry)})}else getPipeDef$1(exportedType)?scopes.exported.pipes.add(exportedType):scopes.exported.directives.add(exportedType)}),def.transitiveCompileScopes=scopes,scopes}(type);if(isStandalone(type)){if(null!==(getComponentDef(type)||getDirectiveDef(type)))return{schemas:null,compilation:{directives:new Set,pipes:new Set},exported:{directives:new Set([type]),pipes:new Set}};if(null!==getPipeDef$1(type))return{schemas:null,compilation:{directives:new Set,pipes:new Set},exported:{directives:new Set,pipes:new Set([type])}}}throw new Error(`${type.name} does not have a module def (ɵmod property)`)}function expandModuleWithProviders(value){return isModuleWithProviders(value)?value.ngModule:value}let compilationDepth=0;function compileComponent(type,metadata){("undefined"==typeof ngDevMode||ngDevMode)&&initNgDevMode();let ngComponentDef=null;!function(type,metadata){componentNeedsResolution(metadata)&&(componentResourceResolutionQueue.set(type,metadata),componentDefPendingResolution.add(type))}(type,metadata),addDirectiveFactoryDef(type,metadata),Object.defineProperty(type,NG_COMP_DEF,{get:()=>{if(null===ngComponentDef){const compiler=getCompilerFacade({usage:0,kind:"component",type:type});if(componentNeedsResolution(metadata)){const error=[`Component '${type.name}' is not resolved:`];throw metadata.templateUrl&&error.push(` - templateUrl: ${metadata.templateUrl}`),metadata.styleUrls&&metadata.styleUrls.length&&error.push(` - styleUrls: ${JSON.stringify(metadata.styleUrls)}`),error.push("Did you run and wait for 'resolveComponentResources()'?"),new Error(error.join("\n"))}const options=jitOptions;let preserveWhitespaces=metadata.preserveWhitespaces;void 0===preserveWhitespaces&&(preserveWhitespaces=null!==options&&void 0!==options.preserveWhitespaces&&options.preserveWhitespaces);let encapsulation=metadata.encapsulation;void 0===encapsulation&&(encapsulation=null!==options&&void 0!==options.defaultEncapsulation?options.defaultEncapsulation:ViewEncapsulation$1.Emulated);const templateUrl=metadata.templateUrl||`ng:///${type.name}/template.html`,meta={...directiveMetadata(type,metadata),typeSourceSpan:compiler.createParseSourceSpan("Component",type.name,templateUrl),template:metadata.template||"",preserveWhitespaces:preserveWhitespaces,styles:metadata.styles||EMPTY_ARRAY,animations:metadata.animations,declarations:[],changeDetection:metadata.changeDetection,encapsulation:encapsulation,interpolation:metadata.interpolation,viewProviders:metadata.viewProviders||null,isStandalone:!!metadata.standalone};compilationDepth++;try{if(meta.usesInheritance&&addDirectiveDefToUndecoratedParents(type),ngComponentDef=compiler.compileComponent(angularCoreEnv,templateUrl,meta),metadata.standalone){const imports=flatten(metadata.imports||EMPTY_ARRAY),{directiveDefs:directiveDefs,pipeDefs:pipeDefs}=function(type,imports){let cachedDirectiveDefs=null,cachedPipeDefs=null;const directiveDefs=()=>{if(null===cachedDirectiveDefs){cachedDirectiveDefs=[getComponentDef(type)];const seen=new Set;for(const rawDep of imports){ngDevMode&&verifyStandaloneImport(rawDep,type);const dep=resolveForwardRef(rawDep);if(!seen.has(dep))if(seen.add(dep),getNgModuleDef(dep)){const scope=transitiveScopesFor(dep);for(const dir of scope.exported.directives){const def=getComponentDef(dir)||getDirectiveDef(dir);def&&!seen.has(dir)&&(seen.add(dir),cachedDirectiveDefs.push(def))}}else{const def=getComponentDef(dep)||getDirectiveDef(dep);def&&cachedDirectiveDefs.push(def)}}}return cachedDirectiveDefs},pipeDefs=()=>{if(null===cachedPipeDefs){cachedPipeDefs=[];const seen=new Set;for(const rawDep of imports){const dep=resolveForwardRef(rawDep);if(!seen.has(dep))if(seen.add(dep),getNgModuleDef(dep)){const scope=transitiveScopesFor(dep);for(const pipe of scope.exported.pipes){const def=getPipeDef$1(pipe);def&&!seen.has(pipe)&&(seen.add(pipe),cachedPipeDefs.push(def))}}else{const def=getPipeDef$1(dep);def&&cachedPipeDefs.push(def)}}}return cachedPipeDefs};return{directiveDefs:directiveDefs,pipeDefs:pipeDefs}}(type,imports);ngComponentDef.directiveDefs=directiveDefs,ngComponentDef.pipeDefs=pipeDefs,ngComponentDef.dependencies=()=>imports.map(resolveForwardRef)}}finally{compilationDepth--}if(0===compilationDepth&&flushModuleScopingQueueAsMuchAsPossible(),void 0!==type.ngSelectorScope){const scopes=transitiveScopesFor(type.ngSelectorScope);patchComponentDefWithScope(ngComponentDef,scopes)}if(metadata.schemas){if(!metadata.standalone)throw new Error(`The 'schemas' was specified for the ${stringifyForError(type)} but is only valid on a component that is standalone.`);ngComponentDef.schemas=metadata.schemas}else metadata.standalone&&(ngComponentDef.schemas=[])}return ngComponentDef},configurable:!!ngDevMode})}function verifyStandaloneImport(depType,importingType){if(isForwardRef(depType)&&!(depType=resolveForwardRef(depType)))throw new Error(`Expected forwardRef function, imported from "${stringifyForError(importingType)}", to return a standalone entity or NgModule but got "${stringifyForError(depType)||depType}".`);if(null==getNgModuleDef(depType)){const def=getComponentDef(depType)||getDirectiveDef(depType)||getPipeDef$1(depType);if(null==def)throw isModuleWithProviders(depType)?new Error(`A module with providers was imported from "${stringifyForError(importingType)}". Modules with providers are not supported in standalone components imports.`):new Error(`The "${stringifyForError(depType)}" type, imported from "${stringifyForError(importingType)}", must be a standalone component / directive / pipe or an NgModule. Did you forget to add the required @Component / @Directive / @Pipe or @NgModule annotation?`);if(!def.standalone)throw new Error(`The "${stringifyForError(depType)}" ${(type=depType,getComponentDef(type)?"component":getDirectiveDef(type)?"directive":getPipeDef$1(type)?"pipe":"type")}, imported from "${stringifyForError(importingType)}", is not standalone. Did you forget to add the standalone: true flag?`)}var type}function compileDirective(type,directive){let ngDirectiveDef=null;addDirectiveFactoryDef(type,directive||{}),Object.defineProperty(type,NG_DIR_DEF,{get:()=>{if(null===ngDirectiveDef){const meta=getDirectiveMetadata(type,directive||{}),compiler=getCompilerFacade({usage:0,kind:"directive",type:type});ngDirectiveDef=compiler.compileDirective(angularCoreEnv,meta.sourceMapUrl,meta.metadata)}return ngDirectiveDef},configurable:!!ngDevMode})}function getDirectiveMetadata(type,metadata){const name=type&&type.name,sourceMapUrl=`ng:///${name}/ɵdir.js`,compiler=getCompilerFacade({usage:0,kind:"directive",type:type}),facade=directiveMetadata(type,metadata);return facade.typeSourceSpan=compiler.createParseSourceSpan("Directive",name,sourceMapUrl),facade.usesInheritance&&addDirectiveDefToUndecoratedParents(type),{metadata:facade,sourceMapUrl:sourceMapUrl}}function addDirectiveFactoryDef(type,metadata){let ngFactoryDef=null;Object.defineProperty(type,NG_FACTORY_DEF,{get:()=>{if(null===ngFactoryDef){const meta=getDirectiveMetadata(type,metadata),compiler=getCompilerFacade({usage:0,kind:"directive",type:type});ngFactoryDef=compiler.compileFactory(angularCoreEnv,`ng:///${type.name}/ɵfac.js`,{name:meta.metadata.name,type:meta.metadata.type,typeArgumentCount:0,deps:reflectDependencies(type),target:compiler.FactoryTarget.Directive})}return ngFactoryDef},configurable:!!ngDevMode})}function extendsDirectlyFromObject(type){return Object.getPrototypeOf(type.prototype)===Object.prototype}function directiveMetadata(type,metadata){const reflect=getReflect(),propMetadata=reflect.ownPropMetadata(type);return{name:type.name,type:type,selector:void 0!==metadata.selector?metadata.selector:null,host:metadata.host||EMPTY_OBJ,propMetadata:propMetadata,inputs:metadata.inputs||EMPTY_ARRAY,outputs:metadata.outputs||EMPTY_ARRAY,queries:extractQueriesMetadata(type,propMetadata,isContentQuery),lifecycle:{usesOnChanges:reflect.hasLifecycleHook(type,"ngOnChanges")},typeSourceSpan:null,usesInheritance:!extendsDirectlyFromObject(type),exportAs:(exportAs=metadata.exportAs,void 0===exportAs?null:splitByComma(exportAs)),providers:metadata.providers||null,viewQueries:extractQueriesMetadata(type,propMetadata,isViewQuery),isStandalone:!!metadata.standalone};var exportAs}function addDirectiveDefToUndecoratedParents(type){const objPrototype=Object.prototype;let parent=Object.getPrototypeOf(type.prototype).constructor;for(;parent&&parent!==objPrototype;)getDirectiveDef(parent)||getComponentDef(parent)||!shouldAddAbstractDirective(parent)||compileDirective(parent,null),parent=Object.getPrototypeOf(parent)}function convertToR3QueryMetadata(propertyName,ann){return{propertyName:propertyName,predicate:(selector=ann.selector,"string"==typeof selector?splitByComma(selector):resolveForwardRef(selector)),descendants:ann.descendants,first:ann.first,read:ann.read?ann.read:null,static:!!ann.static,emitDistinctChangesOnly:!!ann.emitDistinctChangesOnly};var selector}function extractQueriesMetadata(type,propMetadata,isQueryAnn){const queriesMeta=[];for(const field in propMetadata)if(propMetadata.hasOwnProperty(field)){const annotations=propMetadata[field];annotations.forEach(ann=>{if(isQueryAnn(ann)){if(!ann.selector)throw new Error(`Can't construct a query for the property "${field}" of "${stringifyForError(type)}" since the query selector wasn't defined.`);if(annotations.some(isInputAnnotation))throw new Error("Cannot combine @Input decorators with query decorators");queriesMeta.push(convertToR3QueryMetadata(field,ann))}})}return queriesMeta}function isContentQuery(value){const name=value.ngMetadataName;return"ContentChild"===name||"ContentChildren"===name}function isViewQuery(value){const name=value.ngMetadataName;return"ViewChild"===name||"ViewChildren"===name}function isInputAnnotation(value){return"Input"===value.ngMetadataName}function splitByComma(value){return value.split(",").map(piece=>piece.trim())}const LIFECYCLE_HOOKS=["ngOnChanges","ngOnInit","ngOnDestroy","ngDoCheck","ngAfterViewInit","ngAfterViewChecked","ngAfterContentInit","ngAfterContentChecked"];function shouldAddAbstractDirective(type){const reflect=getReflect();if(LIFECYCLE_HOOKS.some(hookName=>reflect.hasLifecycleHook(type,hookName)))return!0;const propMetadata=reflect.propMetadata(type);for(const field in propMetadata){const annotations=propMetadata[field];for(let i=0;i<annotations.length;i++){const current=annotations[i],metadataName=current.ngMetadataName;if(isInputAnnotation(current)||isContentQuery(current)||isViewQuery(current)||"Output"===metadataName||"HostBinding"===metadataName||"HostListener"===metadataName)return!0}}return!1}function compilePipe(type,meta){let ngPipeDef=null,ngFactoryDef=null;Object.defineProperty(type,NG_FACTORY_DEF,{get:()=>{if(null===ngFactoryDef){const metadata=getPipeMetadata(type,meta),compiler=getCompilerFacade({usage:0,kind:"pipe",type:metadata.type});ngFactoryDef=compiler.compileFactory(angularCoreEnv,`ng:///${metadata.name}/ɵfac.js`,{name:metadata.name,type:metadata.type,typeArgumentCount:0,deps:reflectDependencies(type),target:compiler.FactoryTarget.Pipe})}return ngFactoryDef},configurable:!!ngDevMode}),Object.defineProperty(type,NG_PIPE_DEF,{get:()=>{if(null===ngPipeDef){const metadata=getPipeMetadata(type,meta),compiler=getCompilerFacade({usage:0,kind:"pipe",type:metadata.type});ngPipeDef=compiler.compilePipe(angularCoreEnv,`ng:///${metadata.name}/ɵpipe.js`,metadata)}return ngPipeDef},configurable:!!ngDevMode})}function getPipeMetadata(type,meta){return{type:type,name:type.name,pipeName:meta.name,pure:void 0===meta.pure||meta.pure,isStandalone:!!meta.standalone}}const Directive=makeDecorator("Directive",(dir={})=>dir,void 0,void 0,(type,meta)=>compileDirective(type,meta)),Component=makeDecorator("Component",(c={})=>({changeDetection:ChangeDetectionStrategy.Default,...c}),Directive,void 0,(type,meta)=>compileComponent(type,meta)),Pipe=makeDecorator("Pipe",p=>({pure:!0,...p}),void 0,void 0,(type,meta)=>compilePipe(type,meta)),Input=makePropDecorator("Input",bindingPropertyName=>({bindingPropertyName:bindingPropertyName})),Output=makePropDecorator("Output",bindingPropertyName=>({bindingPropertyName:bindingPropertyName})),HostBinding=makePropDecorator("HostBinding",hostPropertyName=>({hostPropertyName:hostPropertyName})),HostListener=makePropDecorator("HostListener",(eventName,args)=>({eventName:eventName,args:args})),NgModule=makeDecorator("NgModule",ngModule=>ngModule,void 0,void 0,(type,meta)=>compileNgModule(type,meta));function noop(...args){}const APP_INITIALIZER=new InjectionToken("Application Initializer");class ApplicationInitStatus{constructor(appInits){this.appInits=appInits,this.resolve=noop,this.reject=noop,this.initialized=!1,this.done=!1,this.donePromise=new Promise((res,rej)=>{this.resolve=res,this.reject=rej})}runInitializers(){if(this.initialized)return;const asyncInitPromises=[],complete=()=>{this.done=!0,this.resolve()};if(this.appInits)for(let i=0;i<this.appInits.length;i++){const initResult=this.appInits[i]();if(isPromise(initResult))asyncInitPromises.push(initResult);else if(isObservable(initResult)){const observableAsPromise=new Promise((resolve,reject)=>{initResult.subscribe({complete:resolve,error:reject})});asyncInitPromises.push(observableAsPromise)}}Promise.all(asyncInitPromises).then(()=>{complete()}).catch(e=>{this.reject(e)}),0===asyncInitPromises.length&&complete(),this.initialized=!0}}ApplicationInitStatus.ɵfac=function(t){return new(t||ApplicationInitStatus)(ɵɵinject(APP_INITIALIZER,8))},ApplicationInitStatus.ɵprov=ɵɵdefineInjectable({token:ApplicationInitStatus,factory:ApplicationInitStatus.ɵfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(ApplicationInitStatus,[{type:Injectable,args:[{providedIn:"root"}]}],function(){return[{type:void 0,decorators:[{type:Inject,args:[APP_INITIALIZER]},{type:Optional}]}]},null);const APP_ID=new InjectionToken("AppId",{providedIn:"root",factory:_appIdRandomProviderFactory});function _appIdRandomProviderFactory(){return`${_randomChar()}${_randomChar()}${_randomChar()}`}const APP_ID_RANDOM_PROVIDER={provide:APP_ID,useFactory:_appIdRandomProviderFactory,deps:[]};function _randomChar(){return String.fromCharCode(97+Math.floor(25*Math.random()))}const PLATFORM_INITIALIZER=new InjectionToken("Platform Initializer"),PLATFORM_ID=new InjectionToken("Platform ID",{providedIn:"platform",factory:()=>"unknown"}),APP_BOOTSTRAP_LISTENER=new InjectionToken("appBootstrapListener"),PACKAGE_ROOT_URL=new InjectionToken("Application Packages Root URL"),ANIMATION_MODULE_TYPE=new InjectionToken("AnimationModuleType");class Console{log(message){console.log(message)}warn(message){console.warn(message)}}Console.ɵfac=function(t){return new(t||Console)},Console.ɵprov=ɵɵdefineInjectable({token:Console,factory:Console.ɵfac,providedIn:"platform"}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(Console,[{type:Injectable,args:[{providedIn:"platform"}]}],null,null);const LOCALE_ID=new InjectionToken("LocaleId",{providedIn:"root",factory:()=>inject(LOCALE_ID,InjectFlags.Optional|InjectFlags.SkipSelf)||("undefined"!=typeof ngI18nClosureMode&&ngI18nClosureMode&&"undefined"!=typeof goog&&"en"!==goog.LOCALE?goog.LOCALE:"undefined"!=typeof $localize&&$localize.locale||"en-US")}),DEFAULT_CURRENCY_CODE=new InjectionToken("DefaultCurrencyCode",{providedIn:"root",factory:()=>"USD"}),TRANSLATIONS=new InjectionToken("Translations"),TRANSLATIONS_FORMAT=new InjectionToken("TranslationsFormat");var MissingTranslationStrategy;!function(MissingTranslationStrategy){MissingTranslationStrategy[MissingTranslationStrategy.Error=0]="Error",MissingTranslationStrategy[MissingTranslationStrategy.Warning=1]="Warning",MissingTranslationStrategy[MissingTranslationStrategy.Ignore=2]="Ignore"}(MissingTranslationStrategy||(MissingTranslationStrategy={}));class ModuleWithComponentFactories{constructor(ngModuleFactory,componentFactories){this.ngModuleFactory=ngModuleFactory,this.componentFactories=componentFactories}}class Compiler{compileModuleSync(moduleType){return new NgModuleFactory(moduleType)}compileModuleAsync(moduleType){return Promise.resolve(this.compileModuleSync(moduleType))}compileModuleAndAllComponentsSync(moduleType){const ngModuleFactory=this.compileModuleSync(moduleType),componentFactories=maybeUnwrapFn(getNgModuleDef(moduleType).declarations).reduce((factories,declaration)=>{const componentDef=getComponentDef(declaration);return componentDef&&factories.push(new ComponentFactory(componentDef)),factories},[]);return new ModuleWithComponentFactories(ngModuleFactory,componentFactories)}compileModuleAndAllComponentsAsync(moduleType){return Promise.resolve(this.compileModuleAndAllComponentsSync(moduleType))}clearCache(){}clearCacheFor(type){}getModuleId(moduleType){}}Compiler.ɵfac=function(t){return new(t||Compiler)},Compiler.ɵprov=ɵɵdefineInjectable({token:Compiler,factory:Compiler.ɵfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(Compiler,[{type:Injectable,args:[{providedIn:"root"}]}],null,null);const COMPILER_OPTIONS=new InjectionToken("compilerOptions");class CompilerFactory{}function applyChanges(component){ngDevMode&&assertDefined(component,"component"),markViewDirty(getComponentViewByInstance(component)),getRootComponents(component).forEach(rootComponent=>detectChanges(rootComponent))}let _published=!1;function publishDefaultGlobalUtils$1(){_published||(_published=!0,publishGlobalUtil("\u0275setProfiler",setProfiler),publishGlobalUtil("getDirectiveMetadata",getDirectiveMetadata$1),publishGlobalUtil("getComponent",getComponent),publishGlobalUtil("getContext",getContext),publishGlobalUtil("getListeners",getListeners),publishGlobalUtil("getOwningComponent",getOwningComponent),publishGlobalUtil("getHostElement",getHostElement),publishGlobalUtil("getInjector",getInjector),publishGlobalUtil("getRootComponents",getRootComponents),publishGlobalUtil("getDirectives",getDirectives),publishGlobalUtil("applyChanges",applyChanges))}function publishGlobalUtil(name,fn){if("undefined"==typeof COMPILED||!COMPILED){const w=_global;if(ngDevMode&&assertDefined(fn,"function not defined"),w){let container=w.ng;container||(container=w.ng={}),container[name]=fn}}}const promise=Promise.resolve(0);function scheduleMicroTask(fn){"undefined"==typeof Zone?promise.then(()=>{fn&&fn.apply(null,null)}):Zone.current.scheduleMicroTask("scheduleMicrotask",fn)}class NgZone{constructor({enableLongStackTrace=!1,shouldCoalesceEventChangeDetection=!1,shouldCoalesceRunChangeDetection=!1}){if(this.hasPendingMacrotasks=!1,this.hasPendingMicrotasks=!1,this.isStable=!0,this.onUnstable=new EventEmitter(!1),this.onMicrotaskEmpty=new EventEmitter(!1),this.onStable=new EventEmitter(!1),this.onError=new EventEmitter(!1),"undefined"==typeof Zone)throw new RuntimeError(908,ngDevMode&&"In this configuration Angular requires Zone.js");Zone.assertZonePatched();const self=this;if(self._nesting=0,self._outer=self._inner=Zone.current,Zone.AsyncStackTaggingZoneSpec){const AsyncStackTaggingZoneSpec=Zone.AsyncStackTaggingZoneSpec;self._inner=self._inner.fork(new AsyncStackTaggingZoneSpec("Angular"))}Zone.TaskTrackingZoneSpec&&(self._inner=self._inner.fork(new Zone.TaskTrackingZoneSpec)),enableLongStackTrace&&Zone.longStackTraceZoneSpec&&(self._inner=self._inner.fork(Zone.longStackTraceZoneSpec)),self.shouldCoalesceEventChangeDetection=!shouldCoalesceRunChangeDetection&&shouldCoalesceEventChangeDetection,self.shouldCoalesceRunChangeDetection=shouldCoalesceRunChangeDetection,self.lastRequestAnimationFrameId=-1,self.nativeRequestAnimationFrame=function(){let nativeRequestAnimationFrame=_global.requestAnimationFrame,nativeCancelAnimationFrame=_global.cancelAnimationFrame;if("undefined"!=typeof Zone&&nativeRequestAnimationFrame&&nativeCancelAnimationFrame){const unpatchedRequestAnimationFrame=nativeRequestAnimationFrame[Zone.__symbol__("OriginalDelegate")];unpatchedRequestAnimationFrame&&(nativeRequestAnimationFrame=unpatchedRequestAnimationFrame);const unpatchedCancelAnimationFrame=nativeCancelAnimationFrame[Zone.__symbol__("OriginalDelegate")];unpatchedCancelAnimationFrame&&(nativeCancelAnimationFrame=unpatchedCancelAnimationFrame)}return{nativeRequestAnimationFrame:nativeRequestAnimationFrame,nativeCancelAnimationFrame:nativeCancelAnimationFrame}}().nativeRequestAnimationFrame,function(zone){const delayChangeDetectionForEventsDelegate=()=>{!function(zone){if(zone.isCheckStableRunning||-1!==zone.lastRequestAnimationFrameId)return;zone.lastRequestAnimationFrameId=zone.nativeRequestAnimationFrame.call(_global,()=>{zone.fakeTopEventTask||(zone.fakeTopEventTask=Zone.root.scheduleEventTask("fakeTopEventTask",()=>{zone.lastRequestAnimationFrameId=-1,updateMicroTaskStatus(zone),zone.isCheckStableRunning=!0,checkStable(zone),zone.isCheckStableRunning=!1},void 0,()=>{},()=>{})),zone.fakeTopEventTask.invoke()}),updateMicroTaskStatus(zone)}(zone)};zone._inner=zone._inner.fork({name:"angular",properties:{isAngularZone:!0},onInvokeTask:(delegate,current,target,task,applyThis,applyArgs)=>{try{return onEnter(zone),delegate.invokeTask(target,task,applyThis,applyArgs)}finally{(zone.shouldCoalesceEventChangeDetection&&"eventTask"===task.type||zone.shouldCoalesceRunChangeDetection)&&delayChangeDetectionForEventsDelegate(),onLeave(zone)}},onInvoke:(delegate,current,target,callback,applyThis,applyArgs,source)=>{try{return onEnter(zone),delegate.invoke(target,callback,applyThis,applyArgs,source)}finally{zone.shouldCoalesceRunChangeDetection&&delayChangeDetectionForEventsDelegate(),onLeave(zone)}},onHasTask:(delegate,current,target,hasTaskState)=>{delegate.hasTask(target,hasTaskState),current===target&&("microTask"==hasTaskState.change?(zone._hasPendingMicrotasks=hasTaskState.microTask,updateMicroTaskStatus(zone),checkStable(zone)):"macroTask"==hasTaskState.change&&(zone.hasPendingMacrotasks=hasTaskState.macroTask))},onHandleError:(delegate,current,target,error)=>(delegate.handleError(target,error),zone.runOutsideAngular(()=>zone.onError.emit(error)),!1)})}(self)}static isInAngularZone(){return"undefined"!=typeof Zone&&!0===Zone.current.get("isAngularZone")}static assertInAngularZone(){if(!NgZone.isInAngularZone())throw new RuntimeError(909,ngDevMode&&"Expected to be in Angular Zone, but it is not!")}static assertNotInAngularZone(){if(NgZone.isInAngularZone())throw new RuntimeError(909,ngDevMode&&"Expected to not be in Angular Zone, but it is!")}run(fn,applyThis,applyArgs){return this._inner.run(fn,applyThis,applyArgs)}runTask(fn,applyThis,applyArgs,name){const zone=this._inner,task=zone.scheduleEventTask("NgZoneEvent: "+name,fn,EMPTY_PAYLOAD,noop,noop);try{return zone.runTask(task,applyThis,applyArgs)}finally{zone.cancelTask(task)}}runGuarded(fn,applyThis,applyArgs){return this._inner.runGuarded(fn,applyThis,applyArgs)}runOutsideAngular(fn){return this._outer.run(fn)}}const EMPTY_PAYLOAD={};function checkStable(zone){if(0==zone._nesting&&!zone.hasPendingMicrotasks&&!zone.isStable)try{zone._nesting++,zone.onMicrotaskEmpty.emit(null)}finally{if(zone._nesting--,!zone.hasPendingMicrotasks)try{zone.runOutsideAngular(()=>zone.onStable.emit(null))}finally{zone.isStable=!0}}}function updateMicroTaskStatus(zone){zone._hasPendingMicrotasks||(zone.shouldCoalesceEventChangeDetection||zone.shouldCoalesceRunChangeDetection)&&-1!==zone.lastRequestAnimationFrameId?zone.hasPendingMicrotasks=!0:zone.hasPendingMicrotasks=!1}function onEnter(zone){zone._nesting++,zone.isStable&&(zone.isStable=!1,zone.onUnstable.emit(null))}function onLeave(zone){zone._nesting--,checkStable(zone)}class NoopNgZone{constructor(){this.hasPendingMicrotasks=!1,this.hasPendingMacrotasks=!1,this.isStable=!0,this.onUnstable=new EventEmitter,this.onMicrotaskEmpty=new EventEmitter,this.onStable=new EventEmitter,this.onError=new EventEmitter}run(fn,applyThis,applyArgs){return fn.apply(applyThis,applyArgs)}runGuarded(fn,applyThis,applyArgs){return fn.apply(applyThis,applyArgs)}runOutsideAngular(fn){return fn()}runTask(fn,applyThis,applyArgs,name){return fn.apply(applyThis,applyArgs)}}const TESTABILITY=new InjectionToken(""),TESTABILITY_GETTER=new InjectionToken("");class Testability{constructor(_ngZone,registry,testabilityGetter){this._ngZone=_ngZone,this.registry=registry,this._pendingCount=0,this._isZoneStable=!0,this._didWork=!1,this._callbacks=[],this.taskTrackingZone=null,_testabilityGetter||(setTestabilityGetter(testabilityGetter),testabilityGetter.addToWindow(registry)),this._watchAngularEvents(),_ngZone.run(()=>{this.taskTrackingZone="undefined"==typeof Zone?null:Zone.current.get("TaskTrackingZone")})}_watchAngularEvents(){this._ngZone.onUnstable.subscribe({next:()=>{this._didWork=!0,this._isZoneStable=!1}}),this._ngZone.runOutsideAngular(()=>{this._ngZone.onStable.subscribe({next:()=>{NgZone.assertNotInAngularZone(),scheduleMicroTask(()=>{this._isZoneStable=!0,this._runCallbacksIfReady()})}})})}increasePendingRequestCount(){return this._pendingCount+=1,this._didWork=!0,this._pendingCount}decreasePendingRequestCount(){if(this._pendingCount-=1,this._pendingCount<0)throw new Error("pending async requests below zero");return this._runCallbacksIfReady(),this._pendingCount}isStable(){return this._isZoneStable&&0===this._pendingCount&&!this._ngZone.hasPendingMacrotasks}_runCallbacksIfReady(){if(this.isStable())scheduleMicroTask(()=>{for(;0!==this._callbacks.length;){let cb=this._callbacks.pop();clearTimeout(cb.timeoutId),cb.doneCb(this._didWork)}this._didWork=!1});else{let pending=this.getPendingTasks();this._callbacks=this._callbacks.filter(cb=>!cb.updateCb||!cb.updateCb(pending)||(clearTimeout(cb.timeoutId),!1)),this._didWork=!0}}getPendingTasks(){return this.taskTrackingZone?this.taskTrackingZone.macroTasks.map(t=>({source:t.source,creationLocation:t.creationLocation,data:t.data})):[]}addCallback(cb,timeout,updateCb){let timeoutId=-1;timeout&&timeout>0&&(timeoutId=setTimeout(()=>{this._callbacks=this._callbacks.filter(cb=>cb.timeoutId!==timeoutId),cb(this._didWork,this.getPendingTasks())},timeout)),this._callbacks.push({doneCb:cb,timeoutId:timeoutId,updateCb:updateCb})}whenStable(doneCb,timeout,updateCb){if(updateCb&&!this.taskTrackingZone)throw new Error("Task tracking zone is required when passing an update callback to whenStable(). Is \"zone.js/plugins/task-tracking\" loaded?");this.addCallback(doneCb,timeout,updateCb),this._runCallbacksIfReady()}getPendingRequestCount(){return this._pendingCount}registerApplication(token){this.registry.registerApplication(token,this)}unregisterApplication(token){this.registry.unregisterApplication(token)}findProviders(using,provider,exactMatch){return[]}}Testability.ɵfac=function(t){return new(t||Testability)(ɵɵinject(NgZone),ɵɵinject(TestabilityRegistry),ɵɵinject(TESTABILITY_GETTER))},Testability.ɵprov=ɵɵdefineInjectable({token:Testability,factory:Testability.ɵfac}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(Testability,[{type:Injectable}],function(){return[{type:NgZone},{type:TestabilityRegistry},{type:void 0,decorators:[{type:Inject,args:[TESTABILITY_GETTER]}]}]},null);class TestabilityRegistry{constructor(){this._applications=new Map}registerApplication(token,testability){this._applications.set(token,testability)}unregisterApplication(token){this._applications.delete(token)}unregisterAllApplications(){this._applications.clear()}getTestability(elem){return this._applications.get(elem)||null}getAllTestabilities(){return Array.from(this._applications.values())}getAllRootElements(){return Array.from(this._applications.keys())}findTestabilityInTree(elem,findInAncestors=!0){return _testabilityGetter?.findTestabilityInTree(this,elem,findInAncestors)??null}}function setTestabilityGetter(getter){_testabilityGetter=getter}let _testabilityGetter;TestabilityRegistry.ɵfac=function(t){return new(t||TestabilityRegistry)},TestabilityRegistry.ɵprov=ɵɵdefineInjectable({token:TestabilityRegistry,factory:TestabilityRegistry.ɵfac,providedIn:"platform"}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(TestabilityRegistry,[{type:Injectable,args:[{providedIn:"platform"}]}],null,null);let _platformInjector=null;const ALLOW_MULTIPLE_PLATFORMS=new InjectionToken("AllowMultipleToken"),PLATFORM_DESTROY_LISTENERS=new InjectionToken("PlatformDestroyListeners"),NG_DEV_MODE="undefined"==typeof ngDevMode||ngDevMode;function compileNgModuleFactory(injector,options,moduleType){ngDevMode&&function(actual,msg="Type passed in is not NgModuleType, it does not have '\u0275mod' property."){getNgModuleDef(actual)||throwError(msg)}(moduleType);const moduleFactory=new NgModuleFactory(moduleType);if("undefined"!=typeof ngJitMode&&!ngJitMode)return Promise.resolve(moduleFactory);const compilerOptions=injector.get(COMPILER_OPTIONS,[]).concat(options);if(function(options){if(null!==jitOptions){if(options.defaultEncapsulation!==jitOptions.defaultEncapsulation)return void(ngDevMode&&console.error("Provided value for `defaultEncapsulation` can not be changed once it has been set."));if(options.preserveWhitespaces!==jitOptions.preserveWhitespaces)return void(ngDevMode&&console.error("Provided value for `preserveWhitespaces` can not be changed once it has been set."))}jitOptions=options}({defaultEncapsulation:_lastDefined(compilerOptions.map(opts=>opts.defaultEncapsulation)),preserveWhitespaces:_lastDefined(compilerOptions.map(opts=>opts.preserveWhitespaces))}),0===componentResourceResolutionQueue.size)return Promise.resolve(moduleFactory);const compilerProviders=function(parts){const result=[];return parts.forEach(part=>part&&result.push(...part)),result}(compilerOptions.map(o=>o.providers));if(0===compilerProviders.length)return Promise.resolve(moduleFactory);const compiler=getCompilerFacade({usage:0,kind:"NgModule",type:moduleType}),resourceLoader=Injector.create({providers:compilerProviders}).get(compiler.ResourceLoader);return resolveComponentResources(url=>Promise.resolve(resourceLoader.get(url))).then(()=>moduleFactory)}function publishDefaultGlobalUtils(){ngDevMode&&publishDefaultGlobalUtils$1()}function isBoundToModule(cf){return cf.isBoundToModule}class NgProbeToken{constructor(name,token){this.name=name,this.token=token}}function createPlatform(injector){if(_platformInjector&&!_platformInjector.get(ALLOW_MULTIPLE_PLATFORMS,!1))throw new RuntimeError(400,ngDevMode&&"There can be only one platform. Destroy the previous one to create a new one.");publishDefaultGlobalUtils(),_platformInjector=injector;const platform=injector.get(PlatformRef);return runPlatformInitializers(injector),platform}function runPlatformInitializers(injector){const inits=injector.get(PLATFORM_INITIALIZER,null);inits&&inits.forEach(init=>init())}function internalCreateApplication(config){const{rootComponent:rootComponent,appProviders:appProviders,platformProviders:platformProviders}=config;NG_DEV_MODE&&void 0!==rootComponent&&function(type){if(assertComponentDef(type),!getComponentDef(type).standalone)throw new RuntimeError(907,`The ${stringifyForError(type)} component is not marked as standalone, but Angular expects to have a standalone component here. Please make sure the ${stringifyForError(type)} component has the \`standalone: true\` flag in the decorator.`)}(rootComponent);const platformInjector=function(providers=[]){if(_platformInjector)return _platformInjector;const injector=createPlatformInjector(providers);return _platformInjector=injector,publishDefaultGlobalUtils(),runPlatformInitializers(injector),injector}(platformProviders),ngZone=getNgZone("zone.js",getNgZoneOptions());return ngZone.run(()=>{const envInjector=createEnvironmentInjector([{provide:NgZone,useValue:ngZone},...(appProviders||[])],platformInjector,"Environment Injector"),exceptionHandler=envInjector.get(ErrorHandler,null);if(NG_DEV_MODE&&!exceptionHandler)throw new RuntimeError(402,"No `ErrorHandler` found in the Dependency Injection tree.");let onErrorSubscription;ngZone.runOutsideAngular(()=>{onErrorSubscription=ngZone.onError.subscribe({next:error=>{exceptionHandler.handleError(error)}})});const destroyListener=()=>envInjector.destroy(),onPlatformDestroyListeners=platformInjector.get(PLATFORM_DESTROY_LISTENERS);return onPlatformDestroyListeners.add(destroyListener),envInjector.onDestroy(()=>{onErrorSubscription.unsubscribe(),onPlatformDestroyListeners.delete(destroyListener)}),_callAndReportToErrorHandler(exceptionHandler,ngZone,()=>{const initStatus=envInjector.get(ApplicationInitStatus);return initStatus.runInitializers(),initStatus.donePromise.then(()=>{setLocaleId(envInjector.get(LOCALE_ID,"en-US")||"en-US");const appRef=envInjector.get(ApplicationRef);return void 0!==rootComponent&&appRef.bootstrap(rootComponent),appRef})})})}function createPlatformFactory(parentPlatformFactory,name,providers=[]){const desc=`Platform: ${name}`,marker=new InjectionToken(desc);return(extraProviders=[])=>{let platform=getPlatform();if(!platform||platform.injector.get(ALLOW_MULTIPLE_PLATFORMS,!1)){const platformProviders=[...providers,...extraProviders,{provide:marker,useValue:!0}];parentPlatformFactory?parentPlatformFactory(platformProviders):createPlatform(createPlatformInjector(platformProviders,desc))}return assertPlatform(marker)}}function assertPlatform(requiredToken){const platform=getPlatform();if(!platform)throw new RuntimeError(401,ngDevMode&&"No platform exists!");if(("undefined"==typeof ngDevMode||ngDevMode)&&!platform.injector.get(requiredToken,null))throw new RuntimeError(400,"A platform with a different configuration has been created. Please destroy it first.");return platform}function createPlatformInjector(providers=[],name){return Injector.create({name:name,providers:[{provide:INJECTOR_SCOPE,useValue:"platform"},{provide:PLATFORM_DESTROY_LISTENERS,useValue:new Set([()=>_platformInjector=null])},...providers]})}function destroyPlatform(){getPlatform()?.destroy()}function getPlatform(){return _platformInjector?.get(PlatformRef)??null}class PlatformRef{constructor(_injector){this._injector=_injector,this._modules=[],this._destroyListeners=[],this._destroyed=!1}bootstrapModuleFactory(moduleFactory,options){const ngZone=getNgZone(options?.ngZone,getNgZoneOptions(options)),providers=[{provide:NgZone,useValue:ngZone}];return ngZone.run(()=>{const ngZoneInjector=Injector.create({providers:providers,parent:this.injector,name:moduleFactory.moduleType.name}),moduleRef=moduleFactory.create(ngZoneInjector),exceptionHandler=moduleRef.injector.get(ErrorHandler,null);if(!exceptionHandler)throw new RuntimeError(402,ngDevMode&&"No ErrorHandler. Is platform module (BrowserModule) included?");return ngZone.runOutsideAngular(()=>{const subscription=ngZone.onError.subscribe({next:error=>{exceptionHandler.handleError(error)}});moduleRef.onDestroy(()=>{remove(this._modules,moduleRef),subscription.unsubscribe()})}),_callAndReportToErrorHandler(exceptionHandler,ngZone,()=>{const initStatus=moduleRef.injector.get(ApplicationInitStatus);return initStatus.runInitializers(),initStatus.donePromise.then(()=>(setLocaleId(moduleRef.injector.get(LOCALE_ID,"en-US")||"en-US"),this._moduleDoBootstrap(moduleRef),moduleRef))})})}bootstrapModule(moduleType,compilerOptions=[]){const options=optionsReducer({},compilerOptions);return compileNgModuleFactory(this.injector,options,moduleType).then(moduleFactory=>this.bootstrapModuleFactory(moduleFactory,options))}_moduleDoBootstrap(moduleRef){const appRef=moduleRef.injector.get(ApplicationRef);if(moduleRef._bootstrapComponents.length>0)moduleRef._bootstrapComponents.forEach(f=>appRef.bootstrap(f));else{if(!moduleRef.instance.ngDoBootstrap)throw new RuntimeError(403,ngDevMode&&`The module ${stringify(moduleRef.instance.constructor)} was bootstrapped, but it does not declare "@NgModule.bootstrap" components nor a "ngDoBootstrap" method. Please define one of these.`);moduleRef.instance.ngDoBootstrap(appRef)}this._modules.push(moduleRef)}onDestroy(callback){this._destroyListeners.push(callback)}get injector(){return this._injector}destroy(){if(this._destroyed)throw new RuntimeError(404,ngDevMode&&"The platform has already been destroyed!");this._modules.slice().forEach(module=>module.destroy()),this._destroyListeners.forEach(listener=>listener());const destroyListeners=this._injector.get(PLATFORM_DESTROY_LISTENERS,null);destroyListeners&&(destroyListeners.forEach(listener=>listener()),destroyListeners.clear()),this._destroyed=!0}get destroyed(){return this._destroyed}}function getNgZoneOptions(options){return{enableLongStackTrace:"undefined"!=typeof ngDevMode&&!!ngDevMode,shouldCoalesceEventChangeDetection:!(!options||!options.ngZoneEventCoalescing)||!1,shouldCoalesceRunChangeDetection:!(!options||!options.ngZoneRunCoalescing)||!1}}function getNgZone(ngZoneToUse,options){let ngZone;return ngZone="noop"===ngZoneToUse?new NoopNgZone:("zone.js"===ngZoneToUse?void 0:ngZoneToUse)||new NgZone(options),ngZone}function _callAndReportToErrorHandler(errorHandler,ngZone,callback){try{const result=callback();return isPromise(result)?result.catch(e=>{throw ngZone.runOutsideAngular(()=>errorHandler.handleError(e)),e}):result}catch(e){throw ngZone.runOutsideAngular(()=>errorHandler.handleError(e)),e}}function optionsReducer(dst,objs){return dst=Array.isArray(objs)?objs.reduce(optionsReducer,dst):{...dst,...objs}}PlatformRef.ɵfac=function(t){return new(t||PlatformRef)(ɵɵinject(Injector))},PlatformRef.ɵprov=ɵɵdefineInjectable({token:PlatformRef,factory:PlatformRef.ɵfac,providedIn:"platform"}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(PlatformRef,[{type:Injectable,args:[{providedIn:"platform"}]}],function(){return[{type:Injector}]},null);class ApplicationRef{constructor(_zone,_injector,_exceptionHandler){this._zone=_zone,this._injector=_injector,this._exceptionHandler=_exceptionHandler,this._bootstrapListeners=[],this._views=[],this._runningTick=!1,this._stable=!0,this._destroyed=!1,this._destroyListeners=[],this.componentTypes=[],this.components=[],this._onMicrotaskEmptySubscription=this._zone.onMicrotaskEmpty.subscribe({next:()=>{this._zone.run(()=>{this.tick()})}});const isCurrentlyStable=new Observable(observer=>{this._stable=this._zone.isStable&&!this._zone.hasPendingMacrotasks&&!this._zone.hasPendingMicrotasks,this._zone.runOutsideAngular(()=>{observer.next(this._stable),observer.complete()})}),isStable=new Observable(observer=>{let stableSub;this._zone.runOutsideAngular(()=>{stableSub=this._zone.onStable.subscribe(()=>{NgZone.assertNotInAngularZone(),scheduleMicroTask(()=>{this._stable||this._zone.hasPendingMacrotasks||this._zone.hasPendingMicrotasks||(this._stable=!0,observer.next(!0))})})});const unstableSub=this._zone.onUnstable.subscribe(()=>{NgZone.assertInAngularZone(),this._stable&&(this._stable=!1,this._zone.runOutsideAngular(()=>{observer.next(!1)}))});return()=>{stableSub.unsubscribe(),unstableSub.unsubscribe()}});this.isStable=merge$1(isCurrentlyStable,isStable.pipe(share()))}get destroyed(){return this._destroyed}get injector(){return this._injector}bootstrap(componentOrFactory,rootSelectorOrNode){NG_DEV_MODE&&this.warnIfDestroyed();const isComponentFactory=componentOrFactory instanceof ComponentFactory$1;if(!this._injector.get(ApplicationInitStatus).done){const standalone=!isComponentFactory&&isStandalone(componentOrFactory);throw new RuntimeError(405,NG_DEV_MODE&&"Cannot bootstrap as there are still asynchronous initializers running."+(standalone?"":" Bootstrap components in the `ngDoBootstrap` method of the root module."))}let componentFactory;if(isComponentFactory)componentFactory=componentOrFactory;else{componentFactory=this._injector.get(ComponentFactoryResolver$1).resolveComponentFactory(componentOrFactory)}this.componentTypes.push(componentFactory.componentType);const ngModule=isBoundToModule(componentFactory)?void 0:this._injector.get(NgModuleRef$1),selectorOrNode=rootSelectorOrNode||componentFactory.selector,compRef=componentFactory.create(Injector.NULL,[],selectorOrNode,ngModule),nativeElement=compRef.location.nativeElement,testability=compRef.injector.get(TESTABILITY,null);if(testability?.registerApplication(nativeElement),compRef.onDestroy(()=>{this.detachView(compRef.hostView),remove(this.components,compRef),testability?.unregisterApplication(nativeElement)}),this._loadComponent(compRef),"undefined"==typeof ngDevMode||ngDevMode){this._injector.get(Console).log("Angular is running in development mode. Call enableProdMode() to enable production mode.")}return compRef}tick(){if(NG_DEV_MODE&&this.warnIfDestroyed(),this._runningTick)throw new RuntimeError(101,ngDevMode&&"ApplicationRef.tick is called recursively");try{this._runningTick=!0;for(let view of this._views)view.detectChanges();if("undefined"==typeof ngDevMode||ngDevMode)for(let view of this._views)view.checkNoChanges()}catch(e){this._zone.runOutsideAngular(()=>this._exceptionHandler.handleError(e))}finally{this._runningTick=!1}}attachView(viewRef){NG_DEV_MODE&&this.warnIfDestroyed();const view=viewRef;this._views.push(view),view.attachToAppRef(this)}detachView(viewRef){NG_DEV_MODE&&this.warnIfDestroyed();const view=viewRef;remove(this._views,view),view.detachFromAppRef()}_loadComponent(componentRef){this.attachView(componentRef.hostView),this.tick(),this.components.push(componentRef);this._injector.get(APP_BOOTSTRAP_LISTENER,[]).concat(this._bootstrapListeners).forEach(listener=>listener(componentRef))}ngOnDestroy(){if(!this._destroyed)try{this._destroyListeners.forEach(listener=>listener()),this._views.slice().forEach(view=>view.destroy()),this._onMicrotaskEmptySubscription.unsubscribe()}finally{this._destroyed=!0,this._views=[],this._bootstrapListeners=[],this._destroyListeners=[]}}onDestroy(callback){return NG_DEV_MODE&&this.warnIfDestroyed(),this._destroyListeners.push(callback),()=>remove(this._destroyListeners,callback)}destroy(){if(this._destroyed)throw new RuntimeError(406,ngDevMode&&"This instance of the `ApplicationRef` has already been destroyed.");const injector=this._injector;injector.destroy&&!injector.destroyed&&injector.destroy()}get viewCount(){return this._views.length}warnIfDestroyed(){NG_DEV_MODE&&this._destroyed&&console.warn(formatRuntimeError(406,"This instance of the `ApplicationRef` has already been destroyed."))}}function remove(list,el){const index=list.indexOf(el);index>-1&&list.splice(index,1)}function _lastDefined(args){for(let i=args.length-1;i>=0;i--)if(void 0!==args[i])return args[i]}ApplicationRef.ɵfac=function(t){return new(t||ApplicationRef)(ɵɵinject(NgZone),ɵɵinject(EnvironmentInjector),ɵɵinject(ErrorHandler))},ApplicationRef.ɵprov=ɵɵdefineInjectable({token:ApplicationRef,factory:ApplicationRef.ɵfac,providedIn:"root"}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(ApplicationRef,[{type:Injectable,args:[{providedIn:"root"}]}],function(){return[{type:NgZone},{type:EnvironmentInjector},{type:ErrorHandler}]},null);let _devMode=!0,_runModeLocked=!1;function isDevMode(){return _runModeLocked=!0,_devMode}function enableProdMode(){if(_runModeLocked)throw new Error("Cannot enable prod mode after platform setup.");("undefined"==typeof ngDevMode||ngDevMode)&&(_global.ngDevMode=!1),_devMode=!1}function getModuleFactory(id){const type=getRegisteredNgModuleType(id);if(!type)throw noModuleError(id);return new NgModuleFactory(type)}function getNgModuleById(id){const type=getRegisteredNgModuleType(id);if(!type)throw noModuleError(id);return type}function noModuleError(id){return new Error(`No module with ID ${id} loaded`)}class ChangeDetectorRef{}function injectChangeDetectorRef(flags){return function(tNode,lView,isPipe){if(isComponentHost(tNode)&&!isPipe){const componentView=getComponentLViewByIndex(tNode.index,lView);return new ViewRef$1(componentView,componentView)}if(47&tNode.type){const hostComponentView=lView[16];return new ViewRef$1(hostComponentView,lView)}return null}(getCurrentTNode(),getLView(),16==(16&flags))}ChangeDetectorRef.__NG_ELEMENT_ID__=injectChangeDetectorRef;class ViewRef extends ChangeDetectorRef{}class EmbeddedViewRef extends ViewRef{}class DebugEventListener{constructor(name,callback){this.name=name,this.callback=callback}}function asNativeElements(debugEls){return debugEls.map(el=>el.nativeElement)}class DebugNode{constructor(nativeNode){this.nativeNode=nativeNode}get parent(){const parent=this.nativeNode.parentNode;return parent?new DebugElement(parent):null}get injector(){return getInjector(this.nativeNode)}get componentInstance(){const nativeElement=this.nativeNode;return nativeElement&&(getComponent(nativeElement)||getOwningComponent(nativeElement))}get context(){return getComponent(this.nativeNode)||getContext(this.nativeNode)}get listeners(){return getListeners(this.nativeNode).filter(listener=>"dom"===listener.type)}get references(){return function(target){const context=getLContext(target);if(null===context)return{};if(void 0===context.localRefs){const lView=context.lView;if(null===lView)return{};context.localRefs=function(lView,nodeIndex){const tNode=lView[1].data[nodeIndex];if(tNode&&tNode.localNames){const result={};let localIndex=tNode.index+1;for(let i=0;i<tNode.localNames.length;i+=2)result[tNode.localNames[i]]=lView[localIndex],localIndex++;return result}return null}(lView,context.nodeIndex)}return context.localRefs||{}}(this.nativeNode)}get providerTokens(){return function(element){const context=getLContext(element),lView=context?context.lView:null;if(null===lView)return[];const tView=lView[1],tNode=tView.data[context.nodeIndex],providerTokens=[],startIndex=1048575&tNode.providerIndexes,endIndex=tNode.directiveEnd;for(let i=startIndex;i<endIndex;i++){let value=tView.data[i];void 0!==(obj=value).type&&void 0!==obj.template&&void 0!==obj.declaredInputs&&(value=value.type),providerTokens.push(value)}var obj;return providerTokens}(this.nativeNode)}}class DebugElement extends DebugNode{constructor(nativeNode){ngDevMode&&assertDomNode(nativeNode),super(nativeNode)}get nativeElement(){return this.nativeNode.nodeType==Node.ELEMENT_NODE?this.nativeNode:null}get name(){const context=getLContext(this.nativeNode),lView=context?context.lView:null;if(null!==lView){return lView[1].data[context.nodeIndex].value}return this.nativeNode.nodeName}get properties(){const context=getLContext(this.nativeNode),lView=context?context.lView:null;if(null===lView)return{};const tData=lView[1].data,tNode=tData[context.nodeIndex],properties={};return function(element,properties){if(element){let obj=Object.getPrototypeOf(element);const NodePrototype=Node.prototype;for(;null!==obj&&obj!==NodePrototype;){const descriptors=Object.getOwnPropertyDescriptors(obj);for(let key in descriptors)if(!key.startsWith("__")&&!key.startsWith("on")){const value=element[key];isPrimitiveValue(value)&&(properties[key]=value)}obj=Object.getPrototypeOf(obj)}}}(this.nativeElement,properties),function(properties,tNode,lView,tData){let bindingIndexes=tNode.propertyBindings;if(null!==bindingIndexes)for(let i=0;i<bindingIndexes.length;i++){const bindingIndex=bindingIndexes[i],metadataParts=tData[bindingIndex].split("\uFFFD"),propertyName=metadataParts[0];if(metadataParts.length>1){let value=metadataParts[1];for(let j=1;j<metadataParts.length-1;j++)value+=renderStringify(lView[bindingIndex+j-1])+metadataParts[j+1];properties[propertyName]=value}else properties[propertyName]=lView[bindingIndex]}}(properties,tNode,lView,tData),properties}get attributes(){const attributes={},element=this.nativeElement;if(!element)return attributes;const context=getLContext(element),lView=context?context.lView:null;if(null===lView)return{};const tNodeAttrs=lView[1].data[context.nodeIndex].attrs,lowercaseTNodeAttrs=[];if(tNodeAttrs){let i=0;for(;i<tNodeAttrs.length;){const attrName=tNodeAttrs[i];if("string"!=typeof attrName)break;const attrValue=tNodeAttrs[i+1];attributes[attrName]=attrValue,lowercaseTNodeAttrs.push(attrName.toLowerCase()),i+=2}}const eAttrs=element.attributes;for(let i=0;i<eAttrs.length;i++){const attr=eAttrs[i],lowercaseName=attr.name.toLowerCase();-1===lowercaseTNodeAttrs.indexOf(lowercaseName)&&(attributes[lowercaseName]=attr.value)}return attributes}get styles(){return this.nativeElement&&this.nativeElement.style?this.nativeElement.style:{}}get classes(){const result={},className=this.nativeElement.className;return("string"!=typeof className?className.baseVal.split(" "):className.split(" ")).forEach(value=>result[value]=!0),result}get childNodes(){const childNodes=this.nativeNode.childNodes,children=[];for(let i=0;i<childNodes.length;i++){const element=childNodes[i];children.push(getDebugNode(element))}return children}get children(){const nativeElement=this.nativeElement;if(!nativeElement)return[];const childNodes=nativeElement.children,children=[];for(let i=0;i<childNodes.length;i++){const element=childNodes[i];children.push(getDebugNode(element))}return children}query(predicate){return this.queryAll(predicate)[0]||null}queryAll(predicate){const matches=[];return _queryAll(this,predicate,matches,!0),matches}queryAllNodes(predicate){const matches=[];return _queryAll(this,predicate,matches,!1),matches}triggerEventHandler(eventName,eventObj){const node=this.nativeNode,invokedListeners=[];this.listeners.forEach(listener=>{if(listener.name===eventName){const callback=listener.callback;callback.call(node,eventObj),invokedListeners.push(callback)}}),"function"==typeof node.eventListeners&&node.eventListeners(eventName).forEach(listener=>{if(-1!==listener.toString().indexOf("__ngUnwrap__")){const unwrappedListener=listener("__ngUnwrap__");return-1===invokedListeners.indexOf(unwrappedListener)&&unwrappedListener.call(node,eventObj)}})}}function isPrimitiveValue(value){return"string"==typeof value||"boolean"==typeof value||"number"==typeof value||null===value}function _queryAll(parentElement,predicate,matches,elementsOnly){const context=getLContext(parentElement.nativeNode),lView=context?context.lView:null;if(null!==lView){_queryNodeChildren(lView[1].data[context.nodeIndex],lView,predicate,matches,elementsOnly,parentElement.nativeNode)}else _queryNativeNodeDescendants(parentElement.nativeNode,predicate,matches,elementsOnly)}function _queryNodeChildren(tNode,lView,predicate,matches,elementsOnly,rootNativeNode){ngDevMode&&assertTNodeForLView(tNode,lView);const nativeNode=function(tNode,lView){const index=null===tNode?-1:tNode.index;if(-1!==index)return ngDevMode&&assertTNodeForLView(tNode,lView),unwrapRNode(lView[index]);return null}(tNode,lView);if(11&tNode.type){if(_addQueryMatch(nativeNode,predicate,matches,elementsOnly,rootNativeNode),isComponentHost(tNode)){const componentView=getComponentLViewByIndex(tNode.index,lView);componentView&&componentView[1].firstChild&&_queryNodeChildren(componentView[1].firstChild,componentView,predicate,matches,elementsOnly,rootNativeNode)}else tNode.child&&_queryNodeChildren(tNode.child,lView,predicate,matches,elementsOnly,rootNativeNode),nativeNode&&_queryNativeNodeDescendants(nativeNode,predicate,matches,elementsOnly);const nodeOrContainer=lView[tNode.index];isLContainer(nodeOrContainer)&&_queryNodeChildrenInContainer(nodeOrContainer,predicate,matches,elementsOnly,rootNativeNode)}else if(4&tNode.type){const lContainer=lView[tNode.index];_addQueryMatch(lContainer[7],predicate,matches,elementsOnly,rootNativeNode),_queryNodeChildrenInContainer(lContainer,predicate,matches,elementsOnly,rootNativeNode)}else if(16&tNode.type){const componentView=lView[16],head=componentView[6].projection[tNode.projection];if(Array.isArray(head))for(let nativeNode of head)_addQueryMatch(nativeNode,predicate,matches,elementsOnly,rootNativeNode);else if(head){const nextLView=componentView[3];_queryNodeChildren(nextLView[1].data[head.index],nextLView,predicate,matches,elementsOnly,rootNativeNode)}}else tNode.child&&_queryNodeChildren(tNode.child,lView,predicate,matches,elementsOnly,rootNativeNode);if(rootNativeNode!==nativeNode){const nextTNode=4&tNode.flags?tNode.projectionNext:tNode.next;nextTNode&&_queryNodeChildren(nextTNode,lView,predicate,matches,elementsOnly,rootNativeNode)}}function _queryNodeChildrenInContainer(lContainer,predicate,matches,elementsOnly,rootNativeNode){for(let i=10;i<lContainer.length;i++){const childView=lContainer[i],firstChild=childView[1].firstChild;firstChild&&_queryNodeChildren(firstChild,childView,predicate,matches,elementsOnly,rootNativeNode)}}function _addQueryMatch(nativeNode,predicate,matches,elementsOnly,rootNativeNode){if(rootNativeNode!==nativeNode){const debugNode=getDebugNode(nativeNode);if(!debugNode)return;(elementsOnly&&debugNode instanceof DebugElement&&predicate(debugNode)&&-1===matches.indexOf(debugNode)||!elementsOnly&&predicate(debugNode)&&-1===matches.indexOf(debugNode))&&matches.push(debugNode)}}function _queryNativeNodeDescendants(parentNode,predicate,matches,elementsOnly){const nodes=parentNode.childNodes,length=nodes.length;for(let i=0;i<length;i++){const node=nodes[i],debugNode=getDebugNode(node);debugNode&&((elementsOnly&&debugNode instanceof DebugElement&&predicate(debugNode)&&-1===matches.indexOf(debugNode)||!elementsOnly&&predicate(debugNode)&&-1===matches.indexOf(debugNode))&&matches.push(debugNode),_queryNativeNodeDescendants(node,predicate,matches,elementsOnly))}}function getDebugNode(nativeNode){return nativeNode instanceof Node?(nativeNode.hasOwnProperty("__ng_debug__")||(nativeNode.__ng_debug__=nativeNode.nodeType==Node.ELEMENT_NODE?new DebugElement(nativeNode):new DebugNode(nativeNode)),nativeNode.__ng_debug__):null}function getDebugNodeR2(_nativeNode){return null}class DefaultIterableDifferFactory{constructor(){}supports(obj){return isListLikeIterable(obj)}create(trackByFn){return new DefaultIterableDiffer(trackByFn)}}const trackByIdentity=(index,item)=>item;class DefaultIterableDiffer{constructor(trackByFn){this.length=0,this._linkedRecords=null,this._unlinkedRecords=null,this._previousItHead=null,this._itHead=null,this._itTail=null,this._additionsHead=null,this._additionsTail=null,this._movesHead=null,this._movesTail=null,this._removalsHead=null,this._removalsTail=null,this._identityChangesHead=null,this._identityChangesTail=null,this._trackByFn=trackByFn||trackByIdentity}forEachItem(fn){let record;for(record=this._itHead;null!==record;record=record._next)fn(record)}forEachOperation(fn){let nextIt=this._itHead,nextRemove=this._removalsHead,addRemoveOffset=0,moveOffsets=null;for(;nextIt||nextRemove;){const record=!nextRemove||nextIt&&nextIt.currentIndex<getPreviousIndex(nextRemove,addRemoveOffset,moveOffsets)?nextIt:nextRemove,adjPreviousIndex=getPreviousIndex(record,addRemoveOffset,moveOffsets),currentIndex=record.currentIndex;if(record===nextRemove)addRemoveOffset--,nextRemove=nextRemove._nextRemoved;else if(nextIt=nextIt._next,null==record.previousIndex)addRemoveOffset++;else{moveOffsets||(moveOffsets=[]);const localMovePreviousIndex=adjPreviousIndex-addRemoveOffset,localCurrentIndex=currentIndex-addRemoveOffset;if(localMovePreviousIndex!=localCurrentIndex){for(let i=0;i<localMovePreviousIndex;i++){const offset=i<moveOffsets.length?moveOffsets[i]:moveOffsets[i]=0,index=offset+i;localCurrentIndex<=index&&index<localMovePreviousIndex&&(moveOffsets[i]=offset+1)}moveOffsets[record.previousIndex]=localCurrentIndex-localMovePreviousIndex}}adjPreviousIndex!==currentIndex&&fn(record,adjPreviousIndex,currentIndex)}}forEachPreviousItem(fn){let record;for(record=this._previousItHead;null!==record;record=record._nextPrevious)fn(record)}forEachAddedItem(fn){let record;for(record=this._additionsHead;null!==record;record=record._nextAdded)fn(record)}forEachMovedItem(fn){let record;for(record=this._movesHead;null!==record;record=record._nextMoved)fn(record)}forEachRemovedItem(fn){let record;for(record=this._removalsHead;null!==record;record=record._nextRemoved)fn(record)}forEachIdentityChange(fn){let record;for(record=this._identityChangesHead;null!==record;record=record._nextIdentityChange)fn(record)}diff(collection){if(null==collection&&(collection=[]),!isListLikeIterable(collection))throw new RuntimeError(900,ngDevMode&&`Error trying to diff '${stringify(collection)}'. Only arrays and iterables are allowed`);return this.check(collection)?this:null}onDestroy(){}check(collection){this._reset();let index,item,itemTrackBy,record=this._itHead,mayBeDirty=!1;if(Array.isArray(collection)){this.length=collection.length;for(let index=0;index<this.length;index++)item=collection[index],itemTrackBy=this._trackByFn(index,item),null!==record&&Object.is(record.trackById,itemTrackBy)?(mayBeDirty&&(record=this._verifyReinsertion(record,item,itemTrackBy,index)),Object.is(record.item,item)||this._addIdentityChange(record,item)):(record=this._mismatch(record,item,itemTrackBy,index),mayBeDirty=!0),record=record._next}else index=0,function(obj,fn){if(Array.isArray(obj))for(let i=0;i<obj.length;i++)fn(obj[i]);else{const iterator=obj[getSymbolIterator()]();let item;for(;!(item=iterator.next()).done;)fn(item.value)}}(collection,item=>{itemTrackBy=this._trackByFn(index,item),null!==record&&Object.is(record.trackById,itemTrackBy)?(mayBeDirty&&(record=this._verifyReinsertion(record,item,itemTrackBy,index)),Object.is(record.item,item)||this._addIdentityChange(record,item)):(record=this._mismatch(record,item,itemTrackBy,index),mayBeDirty=!0),record=record._next,index++}),this.length=index;return this._truncate(record),this.collection=collection,this.isDirty}get isDirty(){return null!==this._additionsHead||null!==this._movesHead||null!==this._removalsHead||null!==this._identityChangesHead}_reset(){if(this.isDirty){let record;for(record=this._previousItHead=this._itHead;null!==record;record=record._next)record._nextPrevious=record._next;for(record=this._additionsHead;null!==record;record=record._nextAdded)record.previousIndex=record.currentIndex;for(this._additionsHead=this._additionsTail=null,record=this._movesHead;null!==record;record=record._nextMoved)record.previousIndex=record.currentIndex;this._movesHead=this._movesTail=null,this._removalsHead=this._removalsTail=null,this._identityChangesHead=this._identityChangesTail=null}}_mismatch(record,item,itemTrackBy,index){let previousRecord;return null===record?previousRecord=this._itTail:(previousRecord=record._prev,this._remove(record)),null!==(record=null===this._unlinkedRecords?null:this._unlinkedRecords.get(itemTrackBy,null))?(Object.is(record.item,item)||this._addIdentityChange(record,item),this._reinsertAfter(record,previousRecord,index)):null!==(record=null===this._linkedRecords?null:this._linkedRecords.get(itemTrackBy,index))?(Object.is(record.item,item)||this._addIdentityChange(record,item),this._moveAfter(record,previousRecord,index)):record=this._addAfter(new IterableChangeRecord_(item,itemTrackBy),previousRecord,index),record}_verifyReinsertion(record,item,itemTrackBy,index){let reinsertRecord=null===this._unlinkedRecords?null:this._unlinkedRecords.get(itemTrackBy,null);return null!==reinsertRecord?record=this._reinsertAfter(reinsertRecord,record._prev,index):record.currentIndex!=index&&(record.currentIndex=index,this._addToMoves(record,index)),record}_truncate(record){for(;null!==record;){const nextRecord=record._next;this._addToRemovals(this._unlink(record)),record=nextRecord}null!==this._unlinkedRecords&&this._unlinkedRecords.clear(),null!==this._additionsTail&&(this._additionsTail._nextAdded=null),null!==this._movesTail&&(this._movesTail._nextMoved=null),null!==this._itTail&&(this._itTail._next=null),null!==this._removalsTail&&(this._removalsTail._nextRemoved=null),null!==this._identityChangesTail&&(this._identityChangesTail._nextIdentityChange=null)}_reinsertAfter(record,prevRecord,index){null!==this._unlinkedRecords&&this._unlinkedRecords.remove(record);const prev=record._prevRemoved,next=record._nextRemoved;return null===prev?this._removalsHead=next:prev._nextRemoved=next,null===next?this._removalsTail=prev:next._prevRemoved=prev,this._insertAfter(record,prevRecord,index),this._addToMoves(record,index),record}_moveAfter(record,prevRecord,index){return this._unlink(record),this._insertAfter(record,prevRecord,index),this._addToMoves(record,index),record}_addAfter(record,prevRecord,index){return this._insertAfter(record,prevRecord,index),null===this._additionsTail?this._additionsTail=this._additionsHead=record:this._additionsTail=this._additionsTail._nextAdded=record,record}_insertAfter(record,prevRecord,index){const next=null===prevRecord?this._itHead:prevRecord._next;return record._next=next,record._prev=prevRecord,null===next?this._itTail=record:next._prev=record,null===prevRecord?this._itHead=record:prevRecord._next=record,null===this._linkedRecords&&(this._linkedRecords=new _DuplicateMap),this._linkedRecords.put(record),record.currentIndex=index,record}_remove(record){return this._addToRemovals(this._unlink(record))}_unlink(record){null!==this._linkedRecords&&this._linkedRecords.remove(record);const prev=record._prev,next=record._next;return null===prev?this._itHead=next:prev._next=next,null===next?this._itTail=prev:next._prev=prev,record}_addToMoves(record,toIndex){return record.previousIndex===toIndex||(null===this._movesTail?this._movesTail=this._movesHead=record:this._movesTail=this._movesTail._nextMoved=record),record}_addToRemovals(record){return null===this._unlinkedRecords&&(this._unlinkedRecords=new _DuplicateMap),this._unlinkedRecords.put(record),record.currentIndex=null,record._nextRemoved=null,null===this._removalsTail?(this._removalsTail=this._removalsHead=record,record._prevRemoved=null):(record._prevRemoved=this._removalsTail,this._removalsTail=this._removalsTail._nextRemoved=record),record}_addIdentityChange(record,item){return record.item=item,null===this._identityChangesTail?this._identityChangesTail=this._identityChangesHead=record:this._identityChangesTail=this._identityChangesTail._nextIdentityChange=record,record}}class IterableChangeRecord_{constructor(item,trackById){this.item=item,this.trackById=trackById,this.currentIndex=null,this.previousIndex=null,this._nextPrevious=null,this._prev=null,this._next=null,this._prevDup=null,this._nextDup=null,this._prevRemoved=null,this._nextRemoved=null,this._nextAdded=null,this._nextMoved=null,this._nextIdentityChange=null}}class _DuplicateItemRecordList{constructor(){this._head=null,this._tail=null}add(record){null===this._head?(this._head=this._tail=record,record._nextDup=null,record._prevDup=null):(this._tail._nextDup=record,record._prevDup=this._tail,record._nextDup=null,this._tail=record)}get(trackById,atOrAfterIndex){let record;for(record=this._head;null!==record;record=record._nextDup)if((null===atOrAfterIndex||atOrAfterIndex<=record.currentIndex)&&Object.is(record.trackById,trackById))return record;return null}remove(record){const prev=record._prevDup,next=record._nextDup;return null===prev?this._head=next:prev._nextDup=next,null===next?this._tail=prev:next._prevDup=prev,null===this._head}}class _DuplicateMap{constructor(){this.map=new Map}put(record){const key=record.trackById;let duplicates=this.map.get(key);duplicates||(duplicates=new _DuplicateItemRecordList,this.map.set(key,duplicates)),duplicates.add(record)}get(trackById,atOrAfterIndex){const key=trackById,recordList=this.map.get(key);return recordList?recordList.get(trackById,atOrAfterIndex):null}remove(record){const key=record.trackById;return this.map.get(key).remove(record)&&this.map.delete(key),record}get isEmpty(){return 0===this.map.size}clear(){this.map.clear()}}function getPreviousIndex(item,addRemoveOffset,moveOffsets){const previousIndex=item.previousIndex;if(null===previousIndex)return previousIndex;let moveOffset=0;return moveOffsets&&previousIndex<moveOffsets.length&&(moveOffset=moveOffsets[previousIndex]),previousIndex+addRemoveOffset+moveOffset}class DefaultKeyValueDifferFactory{constructor(){}supports(obj){return obj instanceof Map||isJsObject(obj)}create(){return new DefaultKeyValueDiffer}}class DefaultKeyValueDiffer{constructor(){this._records=new Map,this._mapHead=null,this._appendAfter=null,this._previousMapHead=null,this._changesHead=null,this._changesTail=null,this._additionsHead=null,this._additionsTail=null,this._removalsHead=null,this._removalsTail=null}get isDirty(){return null!==this._additionsHead||null!==this._changesHead||null!==this._removalsHead}forEachItem(fn){let record;for(record=this._mapHead;null!==record;record=record._next)fn(record)}forEachPreviousItem(fn){let record;for(record=this._previousMapHead;null!==record;record=record._nextPrevious)fn(record)}forEachChangedItem(fn){let record;for(record=this._changesHead;null!==record;record=record._nextChanged)fn(record)}forEachAddedItem(fn){let record;for(record=this._additionsHead;null!==record;record=record._nextAdded)fn(record)}forEachRemovedItem(fn){let record;for(record=this._removalsHead;null!==record;record=record._nextRemoved)fn(record)}diff(map){if(map){if(!(map instanceof Map||isJsObject(map)))throw new RuntimeError(900,ngDevMode&&`Error trying to diff '${stringify(map)}'. Only maps and objects are allowed`)}else map=new Map;return this.check(map)?this:null}onDestroy(){}check(map){this._reset();let insertBefore=this._mapHead;if(this._appendAfter=null,this._forEach(map,(value,key)=>{if(insertBefore&&insertBefore.key===key)this._maybeAddToChanges(insertBefore,value),this._appendAfter=insertBefore,insertBefore=insertBefore._next;else{const record=this._getOrCreateRecordForKey(key,value);insertBefore=this._insertBeforeOrAppend(insertBefore,record)}}),insertBefore){insertBefore._prev&&(insertBefore._prev._next=null),this._removalsHead=insertBefore;for(let record=insertBefore;null!==record;record=record._nextRemoved)record===this._mapHead&&(this._mapHead=null),this._records.delete(record.key),record._nextRemoved=record._next,record.previousValue=record.currentValue,record.currentValue=null,record._prev=null,record._next=null}return this._changesTail&&(this._changesTail._nextChanged=null),this._additionsTail&&(this._additionsTail._nextAdded=null),this.isDirty}_insertBeforeOrAppend(before,record){if(before){const prev=before._prev;return record._next=before,record._prev=prev,before._prev=record,prev&&(prev._next=record),before===this._mapHead&&(this._mapHead=record),this._appendAfter=before,before}return this._appendAfter?(this._appendAfter._next=record,record._prev=this._appendAfter):this._mapHead=record,this._appendAfter=record,null}_getOrCreateRecordForKey(key,value){if(this._records.has(key)){const record=this._records.get(key);this._maybeAddToChanges(record,value);const prev=record._prev,next=record._next;return prev&&(prev._next=next),next&&(next._prev=prev),record._next=null,record._prev=null,record}const record=new KeyValueChangeRecord_(key);return this._records.set(key,record),record.currentValue=value,this._addToAdditions(record),record}_reset(){if(this.isDirty){let record;for(this._previousMapHead=this._mapHead,record=this._previousMapHead;null!==record;record=record._next)record._nextPrevious=record._next;for(record=this._changesHead;null!==record;record=record._nextChanged)record.previousValue=record.currentValue;for(record=this._additionsHead;null!=record;record=record._nextAdded)record.previousValue=record.currentValue;this._changesHead=this._changesTail=null,this._additionsHead=this._additionsTail=null,this._removalsHead=null}}_maybeAddToChanges(record,newValue){Object.is(newValue,record.currentValue)||(record.previousValue=record.currentValue,record.currentValue=newValue,this._addToChanges(record))}_addToAdditions(record){null===this._additionsHead?this._additionsHead=this._additionsTail=record:(this._additionsTail._nextAdded=record,this._additionsTail=record)}_addToChanges(record){null===this._changesHead?this._changesHead=this._changesTail=record:(this._changesTail._nextChanged=record,this._changesTail=record)}_forEach(obj,fn){obj instanceof Map?obj.forEach(fn):Object.keys(obj).forEach(k=>fn(obj[k],k))}}class KeyValueChangeRecord_{constructor(key){this.key=key,this.previousValue=null,this.currentValue=null,this._nextPrevious=null,this._next=null,this._prev=null,this._nextAdded=null,this._nextRemoved=null,this._nextChanged=null}}function defaultIterableDiffersFactory(){return new IterableDiffers([new DefaultIterableDifferFactory])}class IterableDiffers{constructor(factories){this.factories=factories}static create(factories,parent){if(null!=parent){const copied=parent.factories.slice();factories=factories.concat(copied)}return new IterableDiffers(factories)}static extend(factories){return{provide:IterableDiffers,useFactory:parent=>IterableDiffers.create(factories,parent||defaultIterableDiffersFactory()),deps:[[IterableDiffers,new SkipSelf,new Optional]]}}find(iterable){const factory=this.factories.find(f=>f.supports(iterable));if(null!=factory)return factory;throw new RuntimeError(901,ngDevMode&&`Cannot find a differ supporting object '${iterable}' of type '${(type=iterable,type.name||typeof type)}'`);var type}}function defaultKeyValueDiffersFactory(){return new KeyValueDiffers([new DefaultKeyValueDifferFactory])}IterableDiffers.ɵprov=ɵɵdefineInjectable({token:IterableDiffers,providedIn:"root",factory:defaultIterableDiffersFactory});class KeyValueDiffers{constructor(factories){this.factories=factories}static create(factories,parent){if(parent){const copied=parent.factories.slice();factories=factories.concat(copied)}return new KeyValueDiffers(factories)}static extend(factories){return{provide:KeyValueDiffers,useFactory:parent=>KeyValueDiffers.create(factories,parent||defaultKeyValueDiffersFactory()),deps:[[KeyValueDiffers,new SkipSelf,new Optional]]}}find(kv){const factory=this.factories.find(f=>f.supports(kv));if(factory)return factory;throw new RuntimeError(901,ngDevMode&&`Cannot find a differ supporting object '${kv}'`)}}KeyValueDiffers.ɵprov=ɵɵdefineInjectable({token:KeyValueDiffers,providedIn:"root",factory:defaultKeyValueDiffersFactory});const keyValDiff=[new DefaultKeyValueDifferFactory],iterableDiff=[new DefaultIterableDifferFactory],defaultIterableDiffers=new IterableDiffers(iterableDiff),defaultKeyValueDiffers=new KeyValueDiffers(keyValDiff),platformCore=createPlatformFactory(null,"core",[]);class ApplicationModule{constructor(appRef){}}function coerceToBoolean(value){return"boolean"==typeof value?value:null!=value&&"false"!==value}ApplicationModule.ɵfac=function(t){return new(t||ApplicationModule)(ɵɵinject(ApplicationRef))},ApplicationModule.ɵmod=ɵɵdefineNgModule({type:ApplicationModule}),ApplicationModule.ɵinj=ɵɵdefineInjector({}),("undefined"==typeof ngDevMode||ngDevMode)&&setClassMetadata(ApplicationModule,[{type:NgModule}],function(){return[{type:ApplicationRef}]},null);const ɵivyEnabled=!0;function ɵɵngDeclareDirective(decl){return getCompilerFacade({usage:1,kind:"directive",type:decl.type}).compileDirectiveDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵfac.js`,decl)}function ɵɵngDeclareClassMetadata(decl){setClassMetadata(decl.type,decl.decorators,decl.ctorParameters??null,decl.propDecorators??null)}function ɵɵngDeclareComponent(decl){return getCompilerFacade({usage:1,kind:"component",type:decl.type}).compileComponentDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵcmp.js`,decl)}function ɵɵngDeclareFactory(decl){return getCompilerFacade({usage:1,kind:getFactoryKind(decl.target),type:decl.type}).compileFactoryDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵfac.js`,decl)}function getFactoryKind(target){switch(target){case FactoryTarget.Directive:return"directive";case FactoryTarget.Component:return"component";case FactoryTarget.Injectable:return"injectable";case FactoryTarget.Pipe:return"pipe";case FactoryTarget.NgModule:return"NgModule";}}function ɵɵngDeclareInjectable(decl){return getCompilerFacade({usage:1,kind:"injectable",type:decl.type}).compileInjectableDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵprov.js`,decl)}function ɵɵngDeclareInjector(decl){return getCompilerFacade({usage:1,kind:"NgModule",type:decl.type}).compileInjectorDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵinj.js`,decl)}function ɵɵngDeclareNgModule(decl){return getCompilerFacade({usage:1,kind:"NgModule",type:decl.type}).compileNgModuleDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵmod.js`,decl)}function ɵɵngDeclarePipe(decl){return getCompilerFacade({usage:1,kind:"pipe",type:decl.type}).compilePipeDeclaration(angularCoreEnv,`ng:///${decl.type.name}/ɵpipe.js`,decl)}function createComponent(component,options){ngDevMode&&assertComponentDef(component);const componentDef=getComponentDef(component),elementInjector=options.elementInjector||getNullInjector();return new ComponentFactory(componentDef).create(elementInjector,options.projectableNodes,options.hostElement,options.environmentInjector)}function reflectComponentType(component){const componentDef=getComponentDef(component);if(!componentDef)return null;const factory=new ComponentFactory(componentDef);return{get selector(){return factory.selector},get type(){return factory.componentType},get inputs(){return factory.inputs},get outputs(){return factory.outputs},get ngContentSelectors(){return factory.ngContentSelectors},get isStandalone(){return componentDef.standalone}}}"undefined"!=typeof ngDevMode&&ngDevMode&&(_global.$localize=_global.$localize||function(){throw new Error("It looks like your application or one of its dependencies is using i18n.\nAngular 9 introduced a global `$localize()` function that needs to be loaded.\nPlease run `ng add @angular/localize` from the Angular CLI.\n(For non-CLI projects, add `import '@angular/localize/init';` to your `polyfills.ts` file.\nFor server-side rendering applications add the import to your `main.server.ts` file.)")});export{ANALYZE_FOR_ENTRY_COMPONENTS,ANIMATION_MODULE_TYPE,APP_BOOTSTRAP_LISTENER,APP_ID,APP_INITIALIZER,ApplicationInitStatus,ApplicationModule,ApplicationRef,Attribute,COMPILER_OPTIONS,CUSTOM_ELEMENTS_SCHEMA,ChangeDetectionStrategy,ChangeDetectorRef,Compiler,CompilerFactory,Component,ComponentFactory$1 as ComponentFactory,ComponentFactoryResolver$1 as ComponentFactoryResolver,ComponentRef$1 as ComponentRef,ContentChild,ContentChildren,DEFAULT_CURRENCY_CODE,DebugElement,DebugEventListener,DebugNode,DefaultIterableDiffer,Directive,ENVIRONMENT_INITIALIZER,ElementRef,EmbeddedViewRef,EnvironmentInjector,ErrorHandler,EventEmitter,Host,HostBinding,HostListener,INJECTOR,Inject,InjectFlags,Injectable,InjectionToken,Injector,Input,IterableDiffers,KeyValueDiffers,LOCALE_ID,MissingTranslationStrategy,ModuleWithComponentFactories,NO_ERRORS_SCHEMA,NgModule,NgModuleFactory$1 as NgModuleFactory,NgModuleRef$1 as NgModuleRef,NgProbeToken,NgZone,Optional,Output,PACKAGE_ROOT_URL,PLATFORM_ID,PLATFORM_INITIALIZER,Pipe,PlatformRef,Query,QueryList,ReflectiveInjector,ReflectiveKey,Renderer2,RendererFactory2,RendererStyleFlags2,ResolvedReflectiveFactory,Sanitizer,SecurityContext,Self,SimpleChange,SkipSelf,TRANSLATIONS,TRANSLATIONS_FORMAT,TemplateRef,Testability,TestabilityRegistry,Type,VERSION,Version,ViewChild,ViewChildren,ViewContainerRef,ViewEncapsulation$1 as ViewEncapsulation,ViewRef,asNativeElements,assertPlatform,createComponent,createEnvironmentInjector,createNgModule,createNgModuleRef,createPlatform,createPlatformFactory,defineInjectable,destroyPlatform,enableProdMode,forwardRef,getDebugNode,getModuleFactory,getNgModuleById,getPlatform,importProvidersFrom,inject,isDevMode,platformCore,reflectComponentType,resolveForwardRef,setTestabilityGetter,ALLOW_MULTIPLE_PLATFORMS as ɵALLOW_MULTIPLE_PLATFORMS,APP_ID_RANDOM_PROVIDER as ɵAPP_ID_RANDOM_PROVIDER,ChangeDetectorStatus as ɵChangeDetectorStatus,ComponentFactory$1 as ɵComponentFactory,Console as ɵConsole,DEFAULT_LOCALE_ID as ɵDEFAULT_LOCALE_ID,INJECTOR_SCOPE as ɵINJECTOR_SCOPE,LContext as ɵLContext,LifecycleHooksFeature as ɵLifecycleHooksFeature,LocaleDataIndex as ɵLocaleDataIndex,NG_COMP_DEF as ɵNG_COMP_DEF,NG_DIR_DEF as ɵNG_DIR_DEF,NG_ELEMENT_ID as ɵNG_ELEMENT_ID,NG_INJ_DEF as ɵNG_INJ_DEF,NG_MOD_DEF as ɵNG_MOD_DEF,NG_PIPE_DEF as ɵNG_PIPE_DEF,NG_PROV_DEF as ɵNG_PROV_DEF,NOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR as ɵNOT_FOUND_CHECK_ONLY_ELEMENT_INJECTOR,NO_CHANGE as ɵNO_CHANGE,NgModuleFactory as ɵNgModuleFactory,NoopNgZone as ɵNoopNgZone,ReflectionCapabilities as ɵReflectionCapabilities,ComponentFactory as ɵRender3ComponentFactory,ComponentRef as ɵRender3ComponentRef,NgModuleRef as ɵRender3NgModuleRef,RuntimeError as ɵRuntimeError,TESTABILITY as ɵTESTABILITY,TESTABILITY_GETTER as ɵTESTABILITY_GETTER,ViewRef$1 as ɵViewRef,_sanitizeHtml as ɵ_sanitizeHtml,_sanitizeUrl as ɵ_sanitizeUrl,allowSanitizationBypassAndThrow as ɵallowSanitizationBypassAndThrow,bypassSanitizationTrustHtml as ɵbypassSanitizationTrustHtml,bypassSanitizationTrustResourceUrl as ɵbypassSanitizationTrustResourceUrl,bypassSanitizationTrustScript as ɵbypassSanitizationTrustScript,bypassSanitizationTrustStyle as ɵbypassSanitizationTrustStyle,bypassSanitizationTrustUrl as ɵbypassSanitizationTrustUrl,clearResolutionOfComponentResourcesQueue as ɵclearResolutionOfComponentResourcesQueue,coerceToBoolean as ɵcoerceToBoolean,compileComponent as ɵcompileComponent,compileDirective as ɵcompileDirective,compileNgModule as ɵcompileNgModule,compileNgModuleDefs as ɵcompileNgModuleDefs,compileNgModuleFactory as ɵcompileNgModuleFactory,compilePipe as ɵcompilePipe,createInjector as ɵcreateInjector,defaultIterableDiffers as ɵdefaultIterableDiffers,defaultKeyValueDiffers as ɵdefaultKeyValueDiffers,detectChanges as ɵdetectChanges,devModeEqual as ɵdevModeEqual,findLocaleData as ɵfindLocaleData,flushModuleScopingQueueAsMuchAsPossible as ɵflushModuleScopingQueueAsMuchAsPossible,formatRuntimeError as ɵformatRuntimeError,getDebugNode as ɵgetDebugNode,getDebugNodeR2 as ɵgetDebugNodeR2,getDirectives as ɵgetDirectives,getHostElement as ɵgetHostElement,getInjectableDef as ɵgetInjectableDef,getLContext as ɵgetLContext,getLocaleCurrencyCode as ɵgetLocaleCurrencyCode,getLocalePluralCase as ɵgetLocalePluralCase,getSanitizationBypassType as ɵgetSanitizationBypassType,ɵgetUnknownElementStrictMode,ɵgetUnknownPropertyStrictMode,_global as ɵglobal,injectChangeDetectorRef as ɵinjectChangeDetectorRef,internalCreateApplication as ɵinternalCreateApplication,isBoundToModule as ɵisBoundToModule,isDefaultChangeDetectionStrategy as ɵisDefaultChangeDetectionStrategy,isInjectable as ɵisInjectable,isListLikeIterable as ɵisListLikeIterable,isObservable as ɵisObservable,isPromise as ɵisPromise,isStandalone as ɵisStandalone,isSubscribable as ɵisSubscribable,ɵivyEnabled,makeDecorator as ɵmakeDecorator,noSideEffects as ɵnoSideEffects,patchComponentDefWithScope as ɵpatchComponentDefWithScope,publishDefaultGlobalUtils$1 as ɵpublishDefaultGlobalUtils,publishGlobalUtil as ɵpublishGlobalUtil,registerLocaleData as ɵregisterLocaleData,resetCompiledComponents as ɵresetCompiledComponents,resetJitOptions as ɵresetJitOptions,resolveComponentResources as ɵresolveComponentResources,setAllowDuplicateNgModuleIdsForTest as ɵsetAllowDuplicateNgModuleIdsForTest,setClassMetadata as ɵsetClassMetadata,setCurrentInjector as ɵsetCurrentInjector,setDocument as ɵsetDocument,setLocaleId as ɵsetLocaleId,ɵsetUnknownElementStrictMode,ɵsetUnknownPropertyStrictMode,store as ɵstore,stringify as ɵstringify,transitiveScopesFor as ɵtransitiveScopesFor,unregisterAllLocaleData as ɵunregisterLocaleData,unwrapSafeValue as ɵunwrapSafeValue,ɵɵCopyDefinitionFeature,FactoryTarget as ɵɵFactoryTarget,ɵɵInheritDefinitionFeature,ɵɵNgOnChangesFeature,ɵɵProvidersFeature,ɵɵStandaloneFeature,ɵɵadvance,ɵɵattribute,ɵɵattributeInterpolate1,ɵɵattributeInterpolate2,ɵɵattributeInterpolate3,ɵɵattributeInterpolate4,ɵɵattributeInterpolate5,ɵɵattributeInterpolate6,ɵɵattributeInterpolate7,ɵɵattributeInterpolate8,ɵɵattributeInterpolateV,ɵɵclassMap,ɵɵclassMapInterpolate1,ɵɵclassMapInterpolate2,ɵɵclassMapInterpolate3,ɵɵclassMapInterpolate4,ɵɵclassMapInterpolate5,ɵɵclassMapInterpolate6,ɵɵclassMapInterpolate7,ɵɵclassMapInterpolate8,ɵɵclassMapInterpolateV,ɵɵclassProp,ɵɵcontentQuery,ɵɵdefineComponent,ɵɵdefineDirective,ɵɵdefineInjectable,ɵɵdefineInjector,ɵɵdefineNgModule,ɵɵdefinePipe,ɵɵdirectiveInject,ɵɵdisableBindings,ɵɵelement,ɵɵelementContainer,ɵɵelementContainerEnd,ɵɵelementContainerStart,ɵɵelementEnd,ɵɵelementStart,ɵɵenableBindings,ɵɵgetCurrentView,ɵɵgetInheritedFactory,ɵɵhostProperty,ɵɵi18n,ɵɵi18nApply,ɵɵi18nAttributes,ɵɵi18nEnd,ɵɵi18nExp,ɵɵi18nPostprocess,ɵɵi18nStart,ɵɵinject,ɵɵinjectAttribute,ɵɵinvalidFactory,ɵɵinvalidFactoryDep,ɵɵlistener,ɵɵloadQuery,ɵɵnamespaceHTML,ɵɵnamespaceMathML,ɵɵnamespaceSVG,ɵɵnextContext,ɵɵngDeclareClassMetadata,ɵɵngDeclareComponent,ɵɵngDeclareDirective,ɵɵngDeclareFactory,ɵɵngDeclareInjectable,ɵɵngDeclareInjector,ɵɵngDeclareNgModule,ɵɵngDeclarePipe,ɵɵpipe,ɵɵpipeBind1,ɵɵpipeBind2,ɵɵpipeBind3,ɵɵpipeBind4,ɵɵpipeBindV,ɵɵprojection,ɵɵprojectionDef,ɵɵproperty,ɵɵpropertyInterpolate,ɵɵpropertyInterpolate1,ɵɵpropertyInterpolate2,ɵɵpropertyInterpolate3,ɵɵpropertyInterpolate4,ɵɵpropertyInterpolate5,ɵɵpropertyInterpolate6,ɵɵpropertyInterpolate7,ɵɵpropertyInterpolate8,ɵɵpropertyInterpolateV,ɵɵpureFunction0,ɵɵpureFunction1,ɵɵpureFunction2,ɵɵpureFunction3,ɵɵpureFunction4,ɵɵpureFunction5,ɵɵpureFunction6,ɵɵpureFunction7,ɵɵpureFunction8,ɵɵpureFunctionV,ɵɵqueryRefresh,ɵɵreference,registerNgModuleType as ɵɵregisterNgModuleType,ɵɵresetView,ɵɵresolveBody,ɵɵresolveDocument,ɵɵresolveWindow,ɵɵrestoreView,ɵɵsanitizeHtml,ɵɵsanitizeResourceUrl,ɵɵsanitizeScript,ɵɵsanitizeStyle,ɵɵsanitizeUrl,ɵɵsanitizeUrlOrResourceUrl,ɵɵsetComponentScope,ɵɵsetNgModuleScope,ɵɵstyleMap,ɵɵstyleMapInterpolate1,ɵɵstyleMapInterpolate2,ɵɵstyleMapInterpolate3,ɵɵstyleMapInterpolate4,ɵɵstyleMapInterpolate5,ɵɵstyleMapInterpolate6,ɵɵstyleMapInterpolate7,ɵɵstyleMapInterpolate8,ɵɵstyleMapInterpolateV,ɵɵstyleProp,ɵɵstylePropInterpolate1,ɵɵstylePropInterpolate2,ɵɵstylePropInterpolate3,ɵɵstylePropInterpolate4,ɵɵstylePropInterpolate5,ɵɵstylePropInterpolate6,ɵɵstylePropInterpolate7,ɵɵstylePropInterpolate8,ɵɵstylePropInterpolateV,ɵɵsyntheticHostListener,ɵɵsyntheticHostProperty,ɵɵtemplate,ɵɵtemplateRefExtractor,ɵɵtext,ɵɵtextInterpolate,ɵɵtextInterpolate1,ɵɵtextInterpolate2,ɵɵtextInterpolate3,ɵɵtextInterpolate4,ɵɵtextInterpolate5,ɵɵtextInterpolate6,ɵɵtextInterpolate7,ɵɵtextInterpolate8,ɵɵtextInterpolateV,ɵɵtrustConstantHtml,ɵɵtrustConstantResourceUrl,ɵɵvalidateIframeAttribute,ɵɵviewQuery};