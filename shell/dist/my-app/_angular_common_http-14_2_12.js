import*as i1 from"@angular/common";import{DOCUMENT,ÉµparseCookieValue,XhrFactory as XhrFactory$1}from"@angular/common";import*as i0 from"@angular/core";import{Injectable,InjectionToken,Inject,PLATFORM_ID,NgModule}from"@angular/core";import{of,Observable}from"rxjs";import{concatMap,filter,map}from"rxjs/operators";class HttpHandler{}class HttpBackend{}class HttpHeaders{constructor(headers){this.normalizedNames=new Map,this.lazyUpdate=null,headers?this.lazyInit="string"==typeof headers?()=>{this.headers=new Map,headers.split("\n").forEach(line=>{const index=line.indexOf(":");if(index>0){const name=line.slice(0,index),key=name.toLowerCase(),value=line.slice(index+1).trim();this.maybeSetNormalizedName(name,key),this.headers.has(key)?this.headers.get(key).push(value):this.headers.set(key,[value])}})}:()=>{("undefined"==typeof ngDevMode||ngDevMode)&&function(headers){for(const[key,value]of Object.entries(headers))if("string"!=typeof value&&!Array.isArray(value))throw new Error(`Unexpected value of the \`${key}\` header provided. Expecting either a string or an array, but got: \`${value}\`.`)}(headers),this.headers=new Map,Object.keys(headers).forEach(name=>{let values=headers[name];const key=name.toLowerCase();"string"==typeof values&&(values=[values]),values.length>0&&(this.headers.set(key,values),this.maybeSetNormalizedName(name,key))})}:this.headers=new Map}has(name){return this.init(),this.headers.has(name.toLowerCase())}get(name){this.init();const values=this.headers.get(name.toLowerCase());return values&&values.length>0?values[0]:null}keys(){return this.init(),Array.from(this.normalizedNames.values())}getAll(name){return this.init(),this.headers.get(name.toLowerCase())||null}append(name,value){return this.clone({name:name,value:value,op:"a"})}set(name,value){return this.clone({name:name,value:value,op:"s"})}delete(name,value){return this.clone({name:name,value:value,op:"d"})}maybeSetNormalizedName(name,lcName){this.normalizedNames.has(lcName)||this.normalizedNames.set(lcName,name)}init(){this.lazyInit&&(this.lazyInit instanceof HttpHeaders?this.copyFrom(this.lazyInit):this.lazyInit(),this.lazyInit=null,this.lazyUpdate&&(this.lazyUpdate.forEach(update=>this.applyUpdate(update)),this.lazyUpdate=null))}copyFrom(other){other.init(),Array.from(other.headers.keys()).forEach(key=>{this.headers.set(key,other.headers.get(key)),this.normalizedNames.set(key,other.normalizedNames.get(key))})}clone(update){const clone=new HttpHeaders;return clone.lazyInit=this.lazyInit&&this.lazyInit instanceof HttpHeaders?this.lazyInit:this,clone.lazyUpdate=(this.lazyUpdate||[]).concat([update]),clone}applyUpdate(update){const key=update.name.toLowerCase();switch(update.op){case"a":case"s":let value=update.value;if("string"==typeof value&&(value=[value]),0===value.length)return;this.maybeSetNormalizedName(update.name,key);const base=("a"===update.op?this.headers.get(key):void 0)||[];base.push(...value),this.headers.set(key,base);break;case"d":const toDelete=update.value;if(toDelete){let existing=this.headers.get(key);if(!existing)return;existing=existing.filter(value=>-1===toDelete.indexOf(value)),0===existing.length?(this.headers.delete(key),this.normalizedNames.delete(key)):this.headers.set(key,existing)}else this.headers.delete(key),this.normalizedNames.delete(key);}}forEach(fn){this.init(),Array.from(this.normalizedNames.keys()).forEach(key=>fn(this.normalizedNames.get(key),this.headers.get(key)))}}class HttpUrlEncodingCodec{encodeKey(key){return standardEncoding(key)}encodeValue(value){return standardEncoding(value)}decodeKey(key){return decodeURIComponent(key)}decodeValue(value){return decodeURIComponent(value)}}const STANDARD_ENCODING_REGEX=/%(\d[a-f0-9])/gi,STANDARD_ENCODING_REPLACEMENTS={40:"@","3A":":",24:"$","2C":",","3B":";","3D":"=","3F":"?","2F":"/"};function standardEncoding(v){return encodeURIComponent(v).replace(STANDARD_ENCODING_REGEX,(s,t)=>STANDARD_ENCODING_REPLACEMENTS[t]??s)}function valueToString(value){return`${value}`}class HttpParams{constructor(options={}){if(this.updates=null,this.cloneFrom=null,this.encoder=options.encoder||new HttpUrlEncodingCodec,options.fromString){if(options.fromObject)throw new Error("Cannot specify both fromString and fromObject.");this.map=function(rawParams,codec){const map=new Map;rawParams.length>0&&rawParams.replace(/^\?/,"").split("&").forEach(param=>{const eqIdx=param.indexOf("="),[key,val]=-1==eqIdx?[codec.decodeKey(param),""]:[codec.decodeKey(param.slice(0,eqIdx)),codec.decodeValue(param.slice(eqIdx+1))],list=map.get(key)||[];list.push(val),map.set(key,list)});return map}(options.fromString,this.encoder)}else options.fromObject?(this.map=new Map,Object.keys(options.fromObject).forEach(key=>{const value=options.fromObject[key],values=Array.isArray(value)?value.map(valueToString):[valueToString(value)];this.map.set(key,values)})):this.map=null}has(param){return this.init(),this.map.has(param)}get(param){this.init();const res=this.map.get(param);return res?res[0]:null}getAll(param){return this.init(),this.map.get(param)||null}keys(){return this.init(),Array.from(this.map.keys())}append(param,value){return this.clone({param:param,value:value,op:"a"})}appendAll(params){const updates=[];return Object.keys(params).forEach(param=>{const value=params[param];Array.isArray(value)?value.forEach(_value=>{updates.push({param:param,value:_value,op:"a"})}):updates.push({param:param,value:value,op:"a"})}),this.clone(updates)}set(param,value){return this.clone({param:param,value:value,op:"s"})}delete(param,value){return this.clone({param:param,value:value,op:"d"})}toString(){return this.init(),this.keys().map(key=>{const eKey=this.encoder.encodeKey(key);return this.map.get(key).map(value=>eKey+"="+this.encoder.encodeValue(value)).join("&")}).filter(param=>""!==param).join("&")}clone(update){const clone=new HttpParams({encoder:this.encoder});return clone.cloneFrom=this.cloneFrom||this,clone.updates=(this.updates||[]).concat(update),clone}init(){null===this.map&&(this.map=new Map),null!==this.cloneFrom&&(this.cloneFrom.init(),this.cloneFrom.keys().forEach(key=>this.map.set(key,this.cloneFrom.map.get(key))),this.updates.forEach(update=>{switch(update.op){case"a":case"s":const base=("a"===update.op?this.map.get(update.param):void 0)||[];base.push(valueToString(update.value)),this.map.set(update.param,base);break;case"d":if(void 0===update.value){this.map.delete(update.param);break}{let base=this.map.get(update.param)||[];const idx=base.indexOf(valueToString(update.value));-1!==idx&&base.splice(idx,1),base.length>0?this.map.set(update.param,base):this.map.delete(update.param)}}}),this.cloneFrom=this.updates=null)}}class HttpContextToken{constructor(defaultValue){this.defaultValue=defaultValue}}class HttpContext{constructor(){this.map=new Map}set(token,value){return this.map.set(token,value),this}get(token){return this.map.has(token)||this.map.set(token,token.defaultValue()),this.map.get(token)}delete(token){return this.map.delete(token),this}has(token){return this.map.has(token)}keys(){return this.map.keys()}}function isArrayBuffer(value){return"undefined"!=typeof ArrayBuffer&&value instanceof ArrayBuffer}function isBlob(value){return"undefined"!=typeof Blob&&value instanceof Blob}function isFormData(value){return"undefined"!=typeof FormData&&value instanceof FormData}class HttpRequest{constructor(method,url,third,fourth){let options;if(this.url=url,this.body=null,this.reportProgress=!1,this.withCredentials=!1,this.responseType="json",this.method=method.toUpperCase(),function(method){switch(method){case"DELETE":case"GET":case"HEAD":case"OPTIONS":case"JSONP":return!1;default:return!0;}}(this.method)||fourth?(this.body=void 0!==third?third:null,options=fourth):options=third,options&&(this.reportProgress=!!options.reportProgress,this.withCredentials=!!options.withCredentials,options.responseType&&(this.responseType=options.responseType),options.headers&&(this.headers=options.headers),options.context&&(this.context=options.context),options.params&&(this.params=options.params)),this.headers||(this.headers=new HttpHeaders),this.context||(this.context=new HttpContext),this.params){const params=this.params.toString();if(0===params.length)this.urlWithParams=url;else{const qIdx=url.indexOf("?"),sep=-1===qIdx?"?":qIdx<url.length-1?"&":"";this.urlWithParams=url+sep+params}}else this.params=new HttpParams,this.urlWithParams=url}serializeBody(){return null===this.body?null:isArrayBuffer(this.body)||isBlob(this.body)||isFormData(this.body)||(value=this.body,"undefined"!=typeof URLSearchParams&&value instanceof URLSearchParams)||"string"==typeof this.body?this.body:this.body instanceof HttpParams?this.body.toString():"object"==typeof this.body||"boolean"==typeof this.body||Array.isArray(this.body)?JSON.stringify(this.body):this.body.toString();var value}detectContentTypeHeader(){return null===this.body||isFormData(this.body)?null:isBlob(this.body)?this.body.type||null:isArrayBuffer(this.body)?null:"string"==typeof this.body?"text/plain":this.body instanceof HttpParams?"application/x-www-form-urlencoded;charset=UTF-8":"object"==typeof this.body||"number"==typeof this.body||"boolean"==typeof this.body?"application/json":null}clone(update={}){const method=update.method||this.method,url=update.url||this.url,responseType=update.responseType||this.responseType,body=void 0!==update.body?update.body:this.body,withCredentials=void 0!==update.withCredentials?update.withCredentials:this.withCredentials,reportProgress=void 0!==update.reportProgress?update.reportProgress:this.reportProgress;let headers=update.headers||this.headers,params=update.params||this.params;const context=update.context??this.context;return void 0!==update.setHeaders&&(headers=Object.keys(update.setHeaders).reduce((headers,name)=>headers.set(name,update.setHeaders[name]),headers)),update.setParams&&(params=Object.keys(update.setParams).reduce((params,param)=>params.set(param,update.setParams[param]),params)),new HttpRequest(method,url,body,{params:params,headers:headers,context:context,reportProgress:reportProgress,responseType:responseType,withCredentials:withCredentials})}}var HttpEventType;!function(HttpEventType){HttpEventType[HttpEventType.Sent=0]="Sent",HttpEventType[HttpEventType.UploadProgress=1]="UploadProgress",HttpEventType[HttpEventType.ResponseHeader=2]="ResponseHeader",HttpEventType[HttpEventType.DownloadProgress=3]="DownloadProgress",HttpEventType[HttpEventType.Response=4]="Response",HttpEventType[HttpEventType.User=5]="User"}(HttpEventType||(HttpEventType={}));class HttpResponseBase{constructor(init,defaultStatus=200,defaultStatusText="OK"){this.headers=init.headers||new HttpHeaders,this.status=void 0!==init.status?init.status:defaultStatus,this.statusText=init.statusText||defaultStatusText,this.url=init.url||null,this.ok=this.status>=200&&this.status<300}}class HttpHeaderResponse extends HttpResponseBase{constructor(init={}){super(init),this.type=HttpEventType.ResponseHeader}clone(update={}){return new HttpHeaderResponse({headers:update.headers||this.headers,status:void 0!==update.status?update.status:this.status,statusText:update.statusText||this.statusText,url:update.url||this.url||void 0})}}class HttpResponse extends HttpResponseBase{constructor(init={}){super(init),this.type=HttpEventType.Response,this.body=void 0!==init.body?init.body:null}clone(update={}){return new HttpResponse({body:void 0!==update.body?update.body:this.body,headers:update.headers||this.headers,status:void 0!==update.status?update.status:this.status,statusText:update.statusText||this.statusText,url:update.url||this.url||void 0})}}class HttpErrorResponse extends HttpResponseBase{constructor(init){super(init,0,"Unknown Error"),this.name="HttpErrorResponse",this.ok=!1,this.status>=200&&this.status<300?this.message=`Http failure during parsing for ${init.url||"(unknown url)"}`:this.message=`Http failure response for ${init.url||"(unknown url)"}: ${init.status} ${init.statusText}`,this.error=init.error||null}}function addBody(options,body){return{body:body,headers:options.headers,context:options.context,observe:options.observe,params:options.params,reportProgress:options.reportProgress,responseType:options.responseType,withCredentials:options.withCredentials}}class HttpClient{constructor(handler){this.handler=handler}request(first,url,options={}){let req;if(first instanceof HttpRequest)req=first;else{let headers,params;headers=options.headers instanceof HttpHeaders?options.headers:new HttpHeaders(options.headers),options.params&&(params=options.params instanceof HttpParams?options.params:new HttpParams({fromObject:options.params})),req=new HttpRequest(first,url,void 0!==options.body?options.body:null,{headers:headers,context:options.context,params:params,reportProgress:options.reportProgress,responseType:options.responseType||"json",withCredentials:options.withCredentials})}const events$=of(req).pipe(concatMap(req=>this.handler.handle(req)));if(first instanceof HttpRequest||"events"===options.observe)return events$;const res$=events$.pipe(filter(event=>event instanceof HttpResponse));switch(options.observe||"body"){case"body":switch(req.responseType){case"arraybuffer":return res$.pipe(map(res=>{if(null!==res.body&&!(res.body instanceof ArrayBuffer))throw new Error("Response is not an ArrayBuffer.");return res.body}));case"blob":return res$.pipe(map(res=>{if(null!==res.body&&!(res.body instanceof Blob))throw new Error("Response is not a Blob.");return res.body}));case"text":return res$.pipe(map(res=>{if(null!==res.body&&"string"!=typeof res.body)throw new Error("Response is not a string.");return res.body}));default:return res$.pipe(map(res=>res.body));}case"response":return res$;default:throw new Error(`Unreachable: unhandled observe type ${options.observe}}`);}}delete(url,options={}){return this.request("DELETE",url,options)}get(url,options={}){return this.request("GET",url,options)}head(url,options={}){return this.request("HEAD",url,options)}jsonp(url,callbackParam){return this.request("JSONP",url,{params:new HttpParams().append(callbackParam,"JSONP_CALLBACK"),observe:"body",responseType:"json"})}options(url,options={}){return this.request("OPTIONS",url,options)}patch(url,body,options={}){return this.request("PATCH",url,addBody(options,body))}post(url,body,options={}){return this.request("POST",url,addBody(options,body))}put(url,body,options={}){return this.request("PUT",url,addBody(options,body))}}HttpClient.Éµfac=function HttpClient_Factory(t){return new(t||HttpClient)(i0.ÉµÉµinject(HttpHandler))},HttpClient.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:HttpClient,factory:HttpClient.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpClient,[{type:Injectable}],function(){return[{type:HttpHandler}]},null)}();class HttpInterceptorHandler{constructor(next,interceptor){this.next=next,this.interceptor=interceptor}handle(req){return this.interceptor.intercept(req,this.next)}}const HTTP_INTERCEPTORS=new InjectionToken("HTTP_INTERCEPTORS");class NoopInterceptor{intercept(req,next){return next.handle(req)}}NoopInterceptor.Éµfac=function NoopInterceptor_Factory(t){return new(t||NoopInterceptor)},NoopInterceptor.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:NoopInterceptor,factory:NoopInterceptor.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(NoopInterceptor,[{type:Injectable}],null,null)}();let foreignDocument,nextRequestId=0;class JsonpCallbackContext{}class JsonpClientBackend{constructor(callbackMap,document){this.callbackMap=callbackMap,this.document=document,this.resolvedPromise=Promise.resolve()}nextCallback(){return"ng_jsonp_callback_"+nextRequestId++}handle(req){if("JSONP"!==req.method)throw new Error("JSONP requests must use JSONP request method.");if("json"!==req.responseType)throw new Error("JSONP requests must use Json response type.");if(req.headers.keys().length>0)throw new Error("JSONP requests do not support headers.");return new Observable(observer=>{const callback=this.nextCallback(),url=req.urlWithParams.replace(/=JSONP_CALLBACK(&|$)/,`=${callback}$1`),node=this.document.createElement("script");node.src=url;let body=null,finished=!1;this.callbackMap[callback]=data=>{delete this.callbackMap[callback],body=data,finished=!0};const cleanup=()=>{node.parentNode&&node.parentNode.removeChild(node),delete this.callbackMap[callback]};return node.addEventListener("load",event=>{this.resolvedPromise.then(()=>{cleanup(),finished?(observer.next(new HttpResponse({body:body,status:200,statusText:"OK",url:url})),observer.complete()):observer.error(new HttpErrorResponse({url:url,status:0,statusText:"JSONP Error",error:new Error("JSONP injected script did not invoke callback.")}))})}),node.addEventListener("error",error=>{cleanup(),observer.error(new HttpErrorResponse({error:error,status:0,statusText:"JSONP Error",url:url}))}),this.document.body.appendChild(node),observer.next({type:HttpEventType.Sent}),()=>{finished||this.removeListeners(node),cleanup()}})}removeListeners(script){foreignDocument||(foreignDocument=this.document.implementation.createHTMLDocument()),foreignDocument.adoptNode(script)}}JsonpClientBackend.Éµfac=function JsonpClientBackend_Factory(t){return new(t||JsonpClientBackend)(i0.ÉµÉµinject(JsonpCallbackContext),i0.ÉµÉµinject(DOCUMENT))},JsonpClientBackend.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:JsonpClientBackend,factory:JsonpClientBackend.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(JsonpClientBackend,[{type:Injectable}],function(){return[{type:JsonpCallbackContext},{type:void 0,decorators:[{type:Inject,args:[DOCUMENT]}]}]},null)}();class JsonpInterceptor{constructor(jsonp){this.jsonp=jsonp}intercept(req,next){return"JSONP"===req.method?this.jsonp.handle(req):next.handle(req)}}JsonpInterceptor.Éµfac=function JsonpInterceptor_Factory(t){return new(t||JsonpInterceptor)(i0.ÉµÉµinject(JsonpClientBackend))},JsonpInterceptor.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:JsonpInterceptor,factory:JsonpInterceptor.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(JsonpInterceptor,[{type:Injectable}],function(){return[{type:JsonpClientBackend}]},null)}();const XSSI_PREFIX=/^\)\]\}',?\n/;class HttpXhrBackend{constructor(xhrFactory){this.xhrFactory=xhrFactory}handle(req){if("JSONP"===req.method)throw new Error("Attempted to construct Jsonp request without HttpClientJsonpModule installed.");return new Observable(observer=>{const xhr=this.xhrFactory.build();if(xhr.open(req.method,req.urlWithParams),req.withCredentials&&(xhr.withCredentials=!0),req.headers.forEach((name,values)=>xhr.setRequestHeader(name,values.join(","))),req.headers.has("Accept")||xhr.setRequestHeader("Accept","application/json, text/plain, */*"),!req.headers.has("Content-Type")){const detectedType=req.detectContentTypeHeader();null!==detectedType&&xhr.setRequestHeader("Content-Type",detectedType)}if(req.responseType){const responseType=req.responseType.toLowerCase();xhr.responseType="json"!==responseType?responseType:"text"}const reqBody=req.serializeBody();let headerResponse=null;const partialFromXhr=()=>{if(null!==headerResponse)return headerResponse;const statusText=xhr.statusText||"OK",headers=new HttpHeaders(xhr.getAllResponseHeaders()),url=function(xhr){return"responseURL"in xhr&&xhr.responseURL?xhr.responseURL:/^X-Request-URL:/m.test(xhr.getAllResponseHeaders())?xhr.getResponseHeader("X-Request-URL"):null}(xhr)||req.url;return headerResponse=new HttpHeaderResponse({headers:headers,status:xhr.status,statusText:statusText,url:url}),headerResponse},onLoad=()=>{let{headers:headers,status:status,statusText:statusText,url:url}=partialFromXhr(),body=null;204!==status&&(body=void 0===xhr.response?xhr.responseText:xhr.response),0===status&&(status=body?200:0);let ok=status>=200&&status<300;if("json"===req.responseType&&"string"==typeof body){const originalBody=body;body=body.replace(XSSI_PREFIX,"");try{body=""!==body?JSON.parse(body):null}catch(error){body=originalBody,ok&&(ok=!1,body={error:error,text:body})}}ok?(observer.next(new HttpResponse({body:body,headers:headers,status:status,statusText:statusText,url:url||void 0})),observer.complete()):observer.error(new HttpErrorResponse({error:body,headers:headers,status:status,statusText:statusText,url:url||void 0}))},onError=error=>{const{url:url}=partialFromXhr(),res=new HttpErrorResponse({error:error,status:xhr.status||0,statusText:xhr.statusText||"Unknown Error",url:url||void 0});observer.error(res)};let sentHeaders=!1;const onDownProgress=event=>{sentHeaders||(observer.next(partialFromXhr()),sentHeaders=!0);let progressEvent={type:HttpEventType.DownloadProgress,loaded:event.loaded};event.lengthComputable&&(progressEvent.total=event.total),"text"===req.responseType&&xhr.responseText&&(progressEvent.partialText=xhr.responseText),observer.next(progressEvent)},onUpProgress=event=>{let progress={type:HttpEventType.UploadProgress,loaded:event.loaded};event.lengthComputable&&(progress.total=event.total),observer.next(progress)};return xhr.addEventListener("load",onLoad),xhr.addEventListener("error",onError),xhr.addEventListener("timeout",onError),xhr.addEventListener("abort",onError),req.reportProgress&&(xhr.addEventListener("progress",onDownProgress),null!==reqBody&&xhr.upload&&xhr.upload.addEventListener("progress",onUpProgress)),xhr.send(reqBody),observer.next({type:HttpEventType.Sent}),()=>{xhr.removeEventListener("error",onError),xhr.removeEventListener("abort",onError),xhr.removeEventListener("load",onLoad),xhr.removeEventListener("timeout",onError),req.reportProgress&&(xhr.removeEventListener("progress",onDownProgress),null!==reqBody&&xhr.upload&&xhr.upload.removeEventListener("progress",onUpProgress)),xhr.readyState!==xhr.DONE&&xhr.abort()}})}}HttpXhrBackend.Éµfac=function HttpXhrBackend_Factory(t){return new(t||HttpXhrBackend)(i0.ÉµÉµinject(i1.XhrFactory))},HttpXhrBackend.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:HttpXhrBackend,factory:HttpXhrBackend.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpXhrBackend,[{type:Injectable}],function(){return[{type:i1.XhrFactory}]},null)}();const XSRF_COOKIE_NAME=new InjectionToken("XSRF_COOKIE_NAME"),XSRF_HEADER_NAME=new InjectionToken("XSRF_HEADER_NAME");class HttpXsrfTokenExtractor{}class HttpXsrfCookieExtractor{constructor(doc,platform,cookieName){this.doc=doc,this.platform=platform,this.cookieName=cookieName,this.lastCookieString="",this.lastToken=null,this.parseCount=0}getToken(){if("server"===this.platform)return null;const cookieString=this.doc.cookie||"";return cookieString!==this.lastCookieString&&(this.parseCount++,this.lastToken=ÉµparseCookieValue(cookieString,this.cookieName),this.lastCookieString=cookieString),this.lastToken}}HttpXsrfCookieExtractor.Éµfac=function HttpXsrfCookieExtractor_Factory(t){return new(t||HttpXsrfCookieExtractor)(i0.ÉµÉµinject(DOCUMENT),i0.ÉµÉµinject(PLATFORM_ID),i0.ÉµÉµinject(XSRF_COOKIE_NAME))},HttpXsrfCookieExtractor.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:HttpXsrfCookieExtractor,factory:HttpXsrfCookieExtractor.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpXsrfCookieExtractor,[{type:Injectable}],function(){return[{type:void 0,decorators:[{type:Inject,args:[DOCUMENT]}]},{type:void 0,decorators:[{type:Inject,args:[PLATFORM_ID]}]},{type:void 0,decorators:[{type:Inject,args:[XSRF_COOKIE_NAME]}]}]},null)}();class HttpXsrfInterceptor{constructor(tokenService,headerName){this.tokenService=tokenService,this.headerName=headerName}intercept(req,next){const lcUrl=req.url.toLowerCase();if("GET"===req.method||"HEAD"===req.method||lcUrl.startsWith("http://")||lcUrl.startsWith("https://"))return next.handle(req);const token=this.tokenService.getToken();return null===token||req.headers.has(this.headerName)||(req=req.clone({headers:req.headers.set(this.headerName,token)})),next.handle(req)}}HttpXsrfInterceptor.Éµfac=function HttpXsrfInterceptor_Factory(t){return new(t||HttpXsrfInterceptor)(i0.ÉµÉµinject(HttpXsrfTokenExtractor),i0.ÉµÉµinject(XSRF_HEADER_NAME))},HttpXsrfInterceptor.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:HttpXsrfInterceptor,factory:HttpXsrfInterceptor.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpXsrfInterceptor,[{type:Injectable}],function(){return[{type:HttpXsrfTokenExtractor},{type:void 0,decorators:[{type:Inject,args:[XSRF_HEADER_NAME]}]}]},null)}();class HttpInterceptingHandler{constructor(backend,injector){this.backend=backend,this.injector=injector,this.chain=null}handle(req){if(null===this.chain){const interceptors=this.injector.get(HTTP_INTERCEPTORS,[]);this.chain=interceptors.reduceRight((next,interceptor)=>new HttpInterceptorHandler(next,interceptor),this.backend)}return this.chain.handle(req)}}function jsonpCallbackContext(){return"object"==typeof window?window:{}}HttpInterceptingHandler.Éµfac=function HttpInterceptingHandler_Factory(t){return new(t||HttpInterceptingHandler)(i0.ÉµÉµinject(HttpBackend),i0.ÉµÉµinject(i0.Injector))},HttpInterceptingHandler.Éµprov=/* @__PURE__ */i0.ÉµÉµdefineInjectable({token:HttpInterceptingHandler,factory:HttpInterceptingHandler.Éµfac}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpInterceptingHandler,[{type:Injectable}],function(){return[{type:HttpBackend},{type:i0.Injector}]},null)}();class HttpClientXsrfModule{static disable(){return{ngModule:HttpClientXsrfModule,providers:[{provide:HttpXsrfInterceptor,useClass:NoopInterceptor}]}}static withOptions(options={}){return{ngModule:HttpClientXsrfModule,providers:[options.cookieName?{provide:XSRF_COOKIE_NAME,useValue:options.cookieName}:[],options.headerName?{provide:XSRF_HEADER_NAME,useValue:options.headerName}:[]]}}}HttpClientXsrfModule.Éµfac=function HttpClientXsrfModule_Factory(t){return new(t||HttpClientXsrfModule)},HttpClientXsrfModule.Éµmod=/* @__PURE__ */i0.ÉµÉµdefineNgModule({type:HttpClientXsrfModule}),HttpClientXsrfModule.Éµinj=/* @__PURE__ */i0.ÉµÉµdefineInjector({providers:[HttpXsrfInterceptor,{provide:HTTP_INTERCEPTORS,useExisting:HttpXsrfInterceptor,multi:!0},{provide:HttpXsrfTokenExtractor,useClass:HttpXsrfCookieExtractor},{provide:XSRF_COOKIE_NAME,useValue:"XSRF-TOKEN"},{provide:XSRF_HEADER_NAME,useValue:"X-XSRF-TOKEN"}]}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpClientXsrfModule,[{type:NgModule,args:[{providers:[HttpXsrfInterceptor,{provide:HTTP_INTERCEPTORS,useExisting:HttpXsrfInterceptor,multi:!0},{provide:HttpXsrfTokenExtractor,useClass:HttpXsrfCookieExtractor},{provide:XSRF_COOKIE_NAME,useValue:"XSRF-TOKEN"},{provide:XSRF_HEADER_NAME,useValue:"X-XSRF-TOKEN"}]}]}],null,null)}();class HttpClientModule{}HttpClientModule.Éµfac=function HttpClientModule_Factory(t){return new(t||HttpClientModule)},HttpClientModule.Éµmod=/* @__PURE__ */i0.ÉµÉµdefineNgModule({type:HttpClientModule}),HttpClientModule.Éµinj=/* @__PURE__ */i0.ÉµÉµdefineInjector({providers:[HttpClient,{provide:HttpHandler,useClass:HttpInterceptingHandler},HttpXhrBackend,{provide:HttpBackend,useExisting:HttpXhrBackend}],imports:[HttpClientXsrfModule.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})]}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpClientModule,[{type:NgModule,args:[{imports:[HttpClientXsrfModule.withOptions({cookieName:"XSRF-TOKEN",headerName:"X-XSRF-TOKEN"})],providers:[HttpClient,{provide:HttpHandler,useClass:HttpInterceptingHandler},HttpXhrBackend,{provide:HttpBackend,useExisting:HttpXhrBackend}]}]}],null,null)}();class HttpClientJsonpModule{}HttpClientJsonpModule.Éµfac=function HttpClientJsonpModule_Factory(t){return new(t||HttpClientJsonpModule)},HttpClientJsonpModule.Éµmod=/* @__PURE__ */i0.ÉµÉµdefineNgModule({type:HttpClientJsonpModule}),HttpClientJsonpModule.Éµinj=/* @__PURE__ */i0.ÉµÉµdefineInjector({providers:[JsonpClientBackend,{provide:JsonpCallbackContext,useFactory:jsonpCallbackContext},{provide:HTTP_INTERCEPTORS,useClass:JsonpInterceptor,multi:!0}]}),function(){(typeof ngDevMode==="undefined"||ngDevMode)&&i0.ÉµsetClassMetadata(HttpClientJsonpModule,[{type:NgModule,args:[{providers:[JsonpClientBackend,{provide:JsonpCallbackContext,useFactory:jsonpCallbackContext},{provide:HTTP_INTERCEPTORS,useClass:JsonpInterceptor,multi:!0}]}]}],null,null)}();const XhrFactory=XhrFactory$1;export{HTTP_INTERCEPTORS,HttpBackend,HttpClient,HttpClientJsonpModule,HttpClientModule,HttpClientXsrfModule,HttpContext,HttpContextToken,HttpErrorResponse,HttpEventType,HttpHandler,HttpHeaderResponse,HttpHeaders,HttpParams,HttpRequest,HttpResponse,HttpResponseBase,HttpUrlEncodingCodec,HttpXhrBackend,HttpXsrfTokenExtractor,JsonpClientBackend,JsonpInterceptor,XhrFactory,HttpInterceptingHandler as ÉµHttpInterceptingHandler};