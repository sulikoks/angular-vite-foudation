{"version":3,"file":"_angular_platform_browser_dynamic-14_2_12.js","sources":["../../.pnpm/@angular+platform-browser-dynamic@14.2.12_6cqhozsvdfqcnce26piw2go6r4/node_modules/@angular/platform-browser-dynamic/fesm2020/platform-browser-dynamic.mjs"],"sourcesContent":["/**\n * @license Angular v14.2.12\n * (c) 2010-2022 Google LLC. https://angular.io/\n * License: MIT\n */\n\nimport { CompilerConfig, ResourceLoader } from '@angular/compiler';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, PACKAGE_ROOT_URL, Compiler, ViewEncapsulation, MissingTranslationStrategy, Injector, isDevMode, createPlatformFactory, platformCore, COMPILER_OPTIONS, CompilerFactory, Injectable, PLATFORM_ID, ɵglobal, Version } from '@angular/core';\nimport { ɵPLATFORM_BROWSER_ID } from '@angular/common';\nimport { ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS } from '@angular/platform-browser';\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nconst ERROR_COLLECTOR_TOKEN = new InjectionToken('ErrorCollector');\n/**\n * A default provider for {@link PACKAGE_ROOT_URL} that maps to '/'.\n */\nconst DEFAULT_PACKAGE_URL_PROVIDER = {\n    provide: PACKAGE_ROOT_URL,\n    useValue: '/'\n};\nconst COMPILER_PROVIDERS = [{ provide: Compiler, useFactory: () => new Compiler() }];\n/**\n * @publicApi\n *\n * @deprecated\n * Ivy JIT mode doesn't require accessing this symbol.\n * See [JIT API changes due to ViewEngine deprecation](guide/deprecations#jit-api-changes) for\n * additional context.\n */\nclass JitCompilerFactory {\n    /* @internal */\n    constructor(defaultOptions) {\n        const compilerOptions = {\n            useJit: true,\n            defaultEncapsulation: ViewEncapsulation.Emulated,\n            missingTranslation: MissingTranslationStrategy.Warning,\n        };\n        this._defaultOptions = [compilerOptions, ...defaultOptions];\n    }\n    createCompiler(options = []) {\n        const opts = _mergeOptions(this._defaultOptions.concat(options));\n        const injector = Injector.create([\n            COMPILER_PROVIDERS, {\n                provide: CompilerConfig,\n                useFactory: () => {\n                    return new CompilerConfig({\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        useJit: opts.useJit,\n                        jitDevMode: isDevMode(),\n                        // let explicit values from the compiler options overwrite options\n                        // from the app providers\n                        defaultEncapsulation: opts.defaultEncapsulation,\n                        missingTranslation: opts.missingTranslation,\n                        preserveWhitespaces: opts.preserveWhitespaces,\n                    });\n                },\n                deps: []\n            },\n            opts.providers\n        ]);\n        return injector.get(Compiler);\n    }\n}\nfunction _mergeOptions(optionsArr) {\n    return {\n        useJit: _lastDefined(optionsArr.map(options => options.useJit)),\n        defaultEncapsulation: _lastDefined(optionsArr.map(options => options.defaultEncapsulation)),\n        providers: _mergeArrays(optionsArr.map(options => options.providers)),\n        missingTranslation: _lastDefined(optionsArr.map(options => options.missingTranslation)),\n        preserveWhitespaces: _lastDefined(optionsArr.map(options => options.preserveWhitespaces)),\n    };\n}\nfunction _lastDefined(args) {\n    for (let i = args.length - 1; i >= 0; i--) {\n        if (args[i] !== undefined) {\n            return args[i];\n        }\n    }\n    return undefined;\n}\nfunction _mergeArrays(parts) {\n    const result = [];\n    parts.forEach((part) => part && result.push(...part));\n    return result;\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * A platform that included corePlatform and the compiler.\n *\n * @publicApi\n */\nconst platformCoreDynamic = createPlatformFactory(platformCore, 'coreDynamic', [\n    { provide: COMPILER_OPTIONS, useValue: {}, multi: true },\n    { provide: CompilerFactory, useClass: JitCompilerFactory, deps: [COMPILER_OPTIONS] },\n]);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\nclass ResourceLoaderImpl extends ResourceLoader {\n    get(url) {\n        let resolve;\n        let reject;\n        const promise = new Promise((res, rej) => {\n            resolve = res;\n            reject = rej;\n        });\n        const xhr = new XMLHttpRequest();\n        xhr.open('GET', url, true);\n        xhr.responseType = 'text';\n        xhr.onload = function () {\n            // responseText is the old-school way of retrieving response (supported by IE8 & 9)\n            // response/responseType properties were introduced in ResourceLoader Level2 spec (supported\n            // by IE10)\n            const response = xhr.response || xhr.responseText;\n            // normalize IE9 bug (https://bugs.jquery.com/ticket/1450)\n            let status = xhr.status === 1223 ? 204 : xhr.status;\n            // fix status code when it is 0 (0 status is undocumented).\n            // Occurs when accessing file resources or on Android 4.1 stock browser\n            // while retrieving files from application cache.\n            if (status === 0) {\n                status = response ? 200 : 0;\n            }\n            if (200 <= status && status <= 300) {\n                resolve(response);\n            }\n            else {\n                reject(`Failed to load ${url}`);\n            }\n        };\n        xhr.onerror = function () {\n            reject(`Failed to load ${url}`);\n        };\n        xhr.send();\n        return promise;\n    }\n}\nResourceLoaderImpl.ɵfac = i0.ɵɵngDeclareFactory({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ResourceLoaderImpl, deps: null, target: i0.ɵɵFactoryTarget.Injectable });\nResourceLoaderImpl.ɵprov = i0.ɵɵngDeclareInjectable({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ResourceLoaderImpl });\ni0.ɵɵngDeclareClassMetadata({ minVersion: \"12.0.0\", version: \"14.2.12\", ngImport: i0, type: ResourceLoaderImpl, decorators: [{\n            type: Injectable\n        }] });\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS = [\n    ɵINTERNAL_BROWSER_PLATFORM_PROVIDERS,\n    {\n        provide: COMPILER_OPTIONS,\n        useValue: { providers: [{ provide: ResourceLoader, useClass: ResourceLoaderImpl, deps: [] }] },\n        multi: true\n    },\n    { provide: PLATFORM_ID, useValue: ɵPLATFORM_BROWSER_ID },\n];\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * An implementation of ResourceLoader that uses a template cache to avoid doing an actual\n * ResourceLoader.\n *\n * The template cache needs to be built and loaded into window.$templateCache\n * via a separate mechanism.\n *\n * @publicApi\n *\n * @deprecated This was previously necessary in some cases to test AOT-compiled components with View\n *     Engine, but is no longer since Ivy.\n */\nclass CachedResourceLoader extends ResourceLoader {\n    constructor() {\n        super();\n        this._cache = ɵglobal.$templateCache;\n        if (this._cache == null) {\n            throw new Error('CachedResourceLoader: Template cache was not found in $templateCache.');\n        }\n    }\n    get(url) {\n        if (this._cache.hasOwnProperty(url)) {\n            return Promise.resolve(this._cache[url]);\n        }\n        else {\n            return Promise.reject('CachedResourceLoader: Did not find cached template for ' + url);\n        }\n    }\n}\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n */\nconst VERSION = new Version('14.2.12');\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n/**\n * @publicApi\n *\n * @deprecated This was previously necessary in some cases to test AOT-compiled components with View\n *     Engine, but is no longer since Ivy.\n\n */\nconst RESOURCE_CACHE_PROVIDER = [{ provide: ResourceLoader, useClass: CachedResourceLoader, deps: [] }];\n/**\n * @publicApi\n */\nconst platformBrowserDynamic = createPlatformFactory(platformCoreDynamic, 'browserDynamic', INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS);\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n// This file only reexports content of the `src` folder. Keep it that way.\n\n/**\n * @license\n * Copyright Google LLC All Rights Reserved.\n *\n * Use of this source code is governed by an MIT-style license that can be\n * found in the LICENSE file at https://angular.io/license\n */\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { JitCompilerFactory, RESOURCE_CACHE_PROVIDER, VERSION, platformBrowserDynamic, INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS as ɵINTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS, platformCoreDynamic as ɵplatformCoreDynamic };\n//# sourceMappingURL=platform-browser-dynamic.mjs.map\n"],"names":["CompilerConfig","ResourceLoader","i0","InjectionToken","createPlatformFactory","platformCore","COMPILER_OPTIONS","CompilerFactory","Injectable","Version","ViewEncapsulation","MissingTranslationStrategy","Injector","isDevMode","Compiler","PLATFORM_ID","COMPILER_PROVIDERS","provide","useFactory","JitCompilerFactory","constructor","defaultOptions","compilerOptions","useJit","defaultEncapsulation","Emulated","missingTranslation","Warning","this","_defaultOptions","createCompiler","options","opts","_lastDefined","optionsArr","concat","map","providers","_mergeArrays","preserveWhitespaces","create","jitDevMode","deps","get","args","i","length","undefined","parts","result","forEach","part","push","platformCoreDynamic","useValue","multi","useClass","ResourceLoaderImpl","url","resolve","reject","promise","Promise","res","rej","xhr","XMLHttpRequest","open","responseType","onload","response","responseText","status","onerror","send","minVersion","version","ngImport","type","target","decorators","INTERNAL_BROWSER_DYNAMIC_PLATFORM_PROVIDERS","VERSION","RESOURCE_CACHE_PROVIDER","super","_cache","$templateCache","Error","hasOwnProperty","platformBrowserDynamic"],"mappings":"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"}